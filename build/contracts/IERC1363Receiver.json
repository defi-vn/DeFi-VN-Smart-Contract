{
  "contractName": "IERC1363Receiver",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onTransferReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Vittorio Minacori (https://github.com/vittominacori)\",\"details\":\"Interface for any contract that wants to support transferAndCall or transferFromAndCall  from ERC1363 token contracts as defined in  https://eips.ethereum.org/EIPS/eip-1363\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"data\":\"bytes Additional data with no specified format\",\"from\":\"address The address which are token transferred from\",\"operator\":\"address The address which called `transferAndCall` or `transferFromAndCall` function\",\"value\":\"uint256 The amount of tokens transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))`  unless throwing\"}}},\"title\":\"IERC1363Receiver Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol\":{\"keccak256\":\"0x478bb11a3b4c0bc453e19428643582b2f2afa7d2420e4818e23e6d598c2df356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0ba6b9bee2379e4019c1e3bfe173f8adfb3527f19aa4966eac97f21ec679c4\",\"dweb:/ipfs/QmXZ4ktrYyHeRjT59RufrCGy8YnPwr37k5GKvTyx9dVqfs\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @title IERC1363Receiver Interface\n * @author Vittorio Minacori (https://github.com/vittominacori)\n * @dev Interface for any contract that wants to support transferAndCall or transferFromAndCall\n *  from ERC1363 token contracts as defined in\n *  https://eips.ethereum.org/EIPS/eip-1363\n */\ninterface IERC1363Receiver {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0x88a7ca5c.\n     * 0x88a7ca5c === bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))\n     */\n\n    /**\n     * @notice Handle the receipt of ERC1363 tokens\n     * @dev Any ERC1363 smart contract calls this function on the recipient\n     * after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n     * transfer. Return of other than the magic value MUST result in the\n     * transaction being reverted.\n     * Note: the token contract address is always the message sender.\n     * @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n     * @param from address The address which are token transferred from\n     * @param value uint256 The amount of tokens transferred\n     * @param data bytes Additional data with no specified format\n     * @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n     *  unless throwing\n     */\n    function onTransferReceived(address operator, address from, uint256 value, bytes calldata data) external returns (bytes4); // solhint-disable-line  max-line-length\n}\n",
  "sourcePath": "erc-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol",
  "ast": {
    "absolutePath": "erc-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol",
    "exportedSymbols": {
      "IERC1363Receiver": [
        4041
      ]
    },
    "id": 4042,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4025,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4026,
          "nodeType": "StructuredDocumentation",
          "src": "58:295:22",
          "text": " @title IERC1363Receiver Interface\n @author Vittorio Minacori (https://github.com/vittominacori)\n @dev Interface for any contract that wants to support transferAndCall or transferFromAndCall\n  from ERC1363 token contracts as defined in\n  https://eips.ethereum.org/EIPS/eip-1363"
        },
        "fullyImplemented": false,
        "id": 4041,
        "linearizedBaseContracts": [
          4041
        ],
        "name": "IERC1363Receiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 4027,
              "nodeType": "StructuredDocumentation",
              "src": "566:832:22",
              "text": " @notice Handle the receipt of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n @param from address The address which are token transferred from\n @param value uint256 The amount of tokens transferred\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n  unless throwing"
            },
            "functionSelector": "88a7ca5c",
            "id": 4040,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onTransferReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4029,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "1431:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4031,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "1449:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4033,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "1463:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4035,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "1478:19:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4034,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1478:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1430:68:22"
            },
            "returnParameters": {
              "id": 4039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4038,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "1517:6:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4037,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1516:8:22"
            },
            "scope": 4041,
            "src": "1403:122:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4042,
        "src": "354:1214:22"
      }
    ],
    "src": "33:1536:22"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "erc-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol",
      "exportedSymbols": {
        "IERC1363Receiver": [
          4041
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 4025,
        "name": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            4041
          ],
          "name": "IERC1363Receiver",
          "scope": 4042
        },
        "children": [
          {
            "attributes": {
              "text": " @title IERC1363Receiver Interface\n @author Vittorio Minacori (https://github.com/vittominacori)\n @dev Interface for any contract that wants to support transferAndCall or transferFromAndCall\n  from ERC1363 token contracts as defined in\n  https://eips.ethereum.org/EIPS/eip-1363"
            },
            "id": 4026,
            "name": "StructuredDocumentation",
            "src": "58:295:22"
          },
          {
            "attributes": {
              "functionSelector": "88a7ca5c",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "onTransferReceived",
              "scope": 4041,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Handle the receipt of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n @param from address The address which are token transferred from\n @param value uint256 The amount of tokens transferred\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n  unless throwing"
                },
                "id": 4027,
                "name": "StructuredDocumentation",
                "src": "566:832:22"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "operator",
                      "scope": 4040,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 4028,
                        "name": "ElementaryTypeName",
                        "src": "1431:7:22"
                      }
                    ],
                    "id": 4029,
                    "name": "VariableDeclaration",
                    "src": "1431:16:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 4040,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 4030,
                        "name": "ElementaryTypeName",
                        "src": "1449:7:22"
                      }
                    ],
                    "id": 4031,
                    "name": "VariableDeclaration",
                    "src": "1449:12:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 4040,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 4032,
                        "name": "ElementaryTypeName",
                        "src": "1463:7:22"
                      }
                    ],
                    "id": 4033,
                    "name": "VariableDeclaration",
                    "src": "1463:13:22"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "data",
                      "scope": 4040,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 4034,
                        "name": "ElementaryTypeName",
                        "src": "1478:5:22"
                      }
                    ],
                    "id": 4035,
                    "name": "VariableDeclaration",
                    "src": "1478:19:22"
                  }
                ],
                "id": 4036,
                "name": "ParameterList",
                "src": "1430:68:22"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 4040,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes4",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes4",
                          "type": "bytes4"
                        },
                        "id": 4037,
                        "name": "ElementaryTypeName",
                        "src": "1517:6:22"
                      }
                    ],
                    "id": 4038,
                    "name": "VariableDeclaration",
                    "src": "1517:6:22"
                  }
                ],
                "id": 4039,
                "name": "ParameterList",
                "src": "1516:8:22"
              }
            ],
            "id": 4040,
            "name": "FunctionDefinition",
            "src": "1403:122:22"
          }
        ],
        "id": 4041,
        "name": "ContractDefinition",
        "src": "354:1214:22"
      }
    ],
    "id": 4042,
    "name": "SourceUnit",
    "src": "33:1536:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-07T10:27:57.100Z",
  "devdoc": {
    "author": "Vittorio Minacori (https://github.com/vittominacori)",
    "details": "Interface for any contract that wants to support transferAndCall or transferFromAndCall  from ERC1363 token contracts as defined in  https://eips.ethereum.org/EIPS/eip-1363",
    "kind": "dev",
    "methods": {
      "onTransferReceived(address,address,uint256,bytes)": {
        "details": "Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.",
        "params": {
          "data": "bytes Additional data with no specified format",
          "from": "address The address which are token transferred from",
          "operator": "address The address which called `transferAndCall` or `transferFromAndCall` function",
          "value": "uint256 The amount of tokens transferred"
        },
        "returns": {
          "_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`  unless throwing"
        }
      }
    },
    "title": "IERC1363Receiver Interface",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "onTransferReceived(address,address,uint256,bytes)": {
        "notice": "Handle the receipt of ERC1363 tokens"
      }
    },
    "version": 1
  }
}