{
  "contractName": "ERC20Base",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "transferEnabled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "TransferEnabled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finishMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransferEnabled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Vittorio Minacori (https://github.com/vittominacori)\",\"details\":\"Implementation of the ERC20Base\",\"events\":{\"MintFinished()\":{\"details\":\"Emitted during finish minting\"},\"TransferEnabled()\":{\"details\":\"Emitted during transfer enabling\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on recipient.\",\"params\":{\"spender\":\"The address allowed to transfer to\",\"value\":\"The amount allowed to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on recipient.\",\"params\":{\"data\":\"Additional data with no specified format.\",\"spender\":\"The address allowed to transfer to.\",\"value\":\"The amount allowed to be transferred.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"params\":{\"cap\":\"Maximum number of tokens mintable\",\"decimals\":\"Number of decimals. All the operations are done using the smallest and indivisible token unit\",\"initialSupply\":\"Initial token supply\",\"name\":\"Name of the token\",\"symbol\":\"A symbol to be used as ticker\",\"transferEnabled\":\"If transfer is enabled on token creation\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"enableTransfer()\":{\"details\":\"Function to enable transfers.\"},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens\",\"value\":\"The amount of tokens to mint\"}},\"mintingFinished()\":{\"returns\":{\"_0\":\"if minting is finished or not.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverERC20(address,uint256)\":{\"details\":\"Remember that only owner can call so be careful when use on contracts generated from other contracts.\",\"params\":{\"tokenAddress\":\"The token contract address\",\"tokenAmount\":\"Number of tokens to be sent\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer tokens to a specified address.\",\"params\":{\"to\":\"The address to transfer to\",\"value\":\"The amount to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferAndCall(address,uint256)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on recipient.\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on recipient.\",\"params\":{\"data\":\"Additional data with no specified format\",\"to\":\"The address to transfer to\",\"value\":\"The amount to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferEnabled()\":{\"returns\":{\"_0\":\"if transfer is enabled or not.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another.\",\"params\":{\"from\":\"The address which you want to send tokens from\",\"to\":\"The address which you want to transfer to\",\"value\":\"the amount of tokens to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on recipient.\",\"params\":{\"from\":\"The address which you want to send tokens from\",\"to\":\"The address which you want to transfer to\",\"value\":\"The amount of tokens to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on recipient.\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which you want to send tokens from\",\"to\":\"The address which you want to transfer to\",\"value\":\"The amount of tokens to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ERC20Base\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@vittominacori/erc20-token/contracts/ERC20Base.sol\":\"ERC20Base\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc75470a6e775d4023131c9e40974af58129f95989d835d60b48313f470ed71f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8dd43f945a8a605f161fc6c6c7ece18ac4bd0b0cebe651cdcdcdc68bb3f3d04\",\"dweb:/ipfs/QmfUZ3Xmb1yNv4tG9UNRCFMiRt2KeKP7JDHiS4iQmXmzWB\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x20569e5d91a1f7478f4579962d35b35e5c68e10c5718696e3863c1a588da87c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ace7d16e99eb77a33c3680964706a39ca6c91aebd4f911f4b70430881cc85b8\",\"dweb:/ipfs/Qmb7g4vz3x238NMF9US6q8xUUamDy9upxZnms6ZaKkN37U\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0xcf427190fa6213e44a1c2c10a721b2e7696d67e600fb05412fb3a3e41f4b9317\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a8834a26ae399a9f5a5a3059acc154998024a46696c51100c0785d9a54b0d4\",\"dweb:/ipfs/QmYNGDWpqRQGzpPreYRab4fLaxVwyR6DpURxxuVHhK1La4\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"@vittominacori/erc20-token/contracts/ERC20Base.sol\":{\"keccak256\":\"0xa5b4e229862f1bcb8c9af82f682e99c25855ce483a9fbdcc1cff5392fb6e0c24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14207ea9d2066559e1e23982f6ef965bee40c7a9ae06e10c4eea81d01338411f\",\"dweb:/ipfs/Qmaj65QcFRbGKaNvLMQPGnpVmF15JCvrf71DoXbHSLA77E\"]},\"@vittominacori/erc20-token/contracts/access/Roles.sol\":{\"keccak256\":\"0x51aa8e4be20b3299ada42ea6a8ae567f70238e839e73d56acac24a3e4e7b4f11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e11e8a67b2e1c63bf08c46cd68f73e903c0128c5d828fbf454e6eac1c1c40c7\",\"dweb:/ipfs/QmYh2VaMX7TPYKtb7BRiES1aHNUigjJtDX4c7YhGkHwjCG\"]},\"erc-payable-token/contracts/token/ERC1363/ERC1363.sol\":{\"keccak256\":\"0xb1fbd98a62e4f53fa72243a200dd9f32512ba10a09becbbaf618163eb8d8b286\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9503481bff3b620969072ce46e0971101ae74bdcf02765521af9cd805c85df8\",\"dweb:/ipfs/QmbnWZwvNV5mAz4kEj52zoGMpu2XqmzTykW25p9Sj6Mdhv\"]},\"erc-payable-token/contracts/token/ERC1363/IERC1363.sol\":{\"keccak256\":\"0x2ffd4fc08a21a38fd0988d5293e0135f4b270b1a64d25227431f123bc3f70d01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0560feeece4984ec9ed178647a68c8b4754e8060666fa3d324d2f329913b799\",\"dweb:/ipfs/QmPGAU8CUZuuapQTBQ6g85EoJgPu6VaahBrCkY7uKgZMB6\"]},\"erc-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol\":{\"keccak256\":\"0x478bb11a3b4c0bc453e19428643582b2f2afa7d2420e4818e23e6d598c2df356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0ba6b9bee2379e4019c1e3bfe173f8adfb3527f19aa4966eac97f21ec679c4\",\"dweb:/ipfs/QmXZ4ktrYyHeRjT59RufrCGy8YnPwr37k5GKvTyx9dVqfs\"]},\"erc-payable-token/contracts/token/ERC1363/IERC1363Spender.sol\":{\"keccak256\":\"0xe6dd0bc06abcdd8a2fb131c5a44323d4b4fba46c156caba0d88e8a712c3a4192\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a872632ccd4821bd9c1714ef64f8f1c53e3b7667b75fe067c7b187f759e39d0\",\"dweb:/ipfs/QmRn84o9aHJGSV1bPCGnWESqMQpcuSXkVNjuLX2y7ZrXQw\"]},\"eth-token-recover/contracts/TokenRecover.sol\":{\"keccak256\":\"0x21cac11370b63473f1e656810829385167695277c945f599f75e2295a9269ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0d7ee54c6e06f5876ba8613a2d488db2a7b871b2bc8c82dd632e707a3754bd1\",\"dweb:/ipfs/Qmdvs2rHXkawFpmsByWteLWorpCy8pHP5esTZtycXPWaik\"]}},\"version\":1}",
  "bytecode": "0x60806040526009805461ffff60a01b191690553480156200001f57600080fd5b5060405162002dc338038062002dc3833981810160405260c08110156200004557600080fd5b81019080805160405193929190846401000000008211156200006657600080fd5b9083019060208201858111156200007c57600080fd5b82516401000000008111828201881017156200009757600080fd5b82525081516020918201929091019080838360005b83811015620000c6578181015183820152602001620000ac565b50505050905090810190601f168015620000f45780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011857600080fd5b9083019060208201858111156200012e57600080fd5b82516401000000008111828201881017156200014957600080fd5b82525081516020918201929091019080838360005b83811015620001785781810151838201526020016200015e565b50505050905090810190601f168015620001a65780820380516001836020036101000a031916815260200191505b50604090815260208281015191830151606084015160809094015188519396509094509187918791869184918491620001e59160039185019062000845565b508051620001fb90600490602084019062000845565b50506005805460ff1916601217905550806200025e576040805162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b600655620002736301ffc9a760e01b620003ac565b62000285634bbee2df60e01b620003ac565b62000297637dcf646760e11b620003ac565b50620002b090506000620002aa62000431565b62000435565b620002df7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9620002aa62000431565b6200030e7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c620002aa62000431565b60006200031a62000431565b600980546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620003738462000445565b81156200038f576200038f620003886200045b565b836200046a565b8015620003a057620003a062000579565b505050505050620008f1565b6001600160e01b031980821614156200040c576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600760205260409020805460ff19166001179055565b3390565b62000441828262000624565b5050565b6005805460ff191660ff92909216919091179055565b6009546001600160a01b031690565b6001600160a01b038216620004c6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620004d4600083836200069f565b620004f081600254620006bc60201b620015b61790919060201c565b6002556001600160a01b0382166000908152602081815260409091205462000523918390620015b6620006bc821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6200058362000431565b6009546001600160a01b03908116911614620005e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6009805460ff60a81b1916600160a81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b60008281526008602090815260409091206200064b9183906200161062000720821b17901c565b1562000441576200065b62000431565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b620006b78383836200073760201b620016251760201c565b505050565b60008282018381101562000717576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600062000717836001600160a01b038416620007d8565b6200074f838383620006b760201b62000ef31760201c565b6001600160a01b038316620006b75760065462000784826200077062000827565b620006bc60201b620015b61790919060201c565b1115620006b7576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b6000620007e683836200082d565b6200081e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200071a565b5060006200071a565b60025490565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200087d5760008555620008c8565b82601f106200089857805160ff1916838001178555620008c8565b82800160010185558215620008c8579182015b82811115620008c8578251825591602001919060010190620008ab565b50620008d6929150620008da565b5090565b5b80821115620008d65760008155600101620008db565b6124c280620009016000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c806379cc67901161013b578063c1d34b89116100b8578063d8fbe9941161007c578063d8fbe994146108f1578063dd62ed3e14610927578063f1b50c1d14610955578063f2fde38b1461095d578063f5b541a61461098357610248565b8063c1d34b891461071f578063ca15c873146107e5578063cae9ca5114610802578063d5391393146108bd578063d547741f146108c557610248565b806391d14854116100ff57806391d148541461068b57806395d89b41146106b7578063a217fddf146106bf578063a457c2d7146106c7578063a9059cbb146106f357610248565b806379cc6790146105e45780637d64bcb4146106105780638980f11f146106185780638da5cb5b146106445780639010d07c1461066857610248565b80633177029f116101c957806340c10f191161018d57806340c10f191461056557806342966c68146105915780634cd412d5146105ae57806370a08231146105b6578063715018a6146105dc57610248565b80633177029f1461041e578063355274ea1461044a57806336568abe14610452578063395093511461047e5780634000aea0146104aa57610248565b806318160ddd1161021057806318160ddd1461036557806323b872dd1461037f578063248a9ca3146103b55780632f2ff15d146103d2578063313ce5671461040057610248565b806301ffc9a71461024d57806305d2035b1461028857806306fdde0314610290578063095ea7b31461030d5780631296ee6214610339575b600080fd5b6102746004803603602081101561026357600080fd5b50356001600160e01b03191661098b565b604080519115158252519081900360200190f35b6102746109aa565b6102986109ba565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d25781810151838201526020016102ba565b50505050905090810190601f1680156102ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102746004803603604081101561032357600080fd5b506001600160a01b038135169060200135610a50565b6102746004803603604081101561034f57600080fd5b506001600160a01b038135169060200135610a6e565b61036d610a91565b60408051918252519081900360200190f35b6102746004803603606081101561039557600080fd5b506001600160a01b03813581169160208101359091169060400135610a97565b61036d600480360360208110156103cb57600080fd5b5035610b28565b6103fe600480360360408110156103e857600080fd5b50803590602001356001600160a01b0316610b3d565b005b610408610ba9565b6040805160ff9092168252519081900360200190f35b6102746004803603604081101561043457600080fd5b506001600160a01b038135169060200135610bb2565b61036d610bce565b6103fe6004803603604081101561046857600080fd5b50803590602001356001600160a01b0316610bd4565b6102746004803603604081101561049457600080fd5b506001600160a01b038135169060200135610c35565b610274600480360360608110156104c057600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156104f057600080fd5b82018360208201111561050257600080fd5b8035906020019184600183028401116401000000008311171561052457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c88945050505050565b6103fe6004803603604081101561057b57600080fd5b506001600160a01b038135169060200135610ced565b6103fe600480360360208110156105a757600080fd5b5035610dbd565b610274610dd1565b61036d600480360360208110156105cc57600080fd5b50356001600160a01b0316610de1565b6103fe610dfc565b6103fe600480360360408110156105fa57600080fd5b506001600160a01b038135169060200135610e9e565b6103fe610ef8565b6103fe6004803603604081101561062e57600080fd5b506001600160a01b038135169060200135610fed565b61064c6110d3565b604080516001600160a01b039092168252519081900360200190f35b61064c6004803603604081101561067e57600080fd5b50803590602001356110e2565b610274600480360360408110156106a157600080fd5b50803590602001356001600160a01b03166110fa565b610298611112565b61036d611173565b610274600480360360408110156106dd57600080fd5b506001600160a01b038135169060200135611178565b6102746004803603604081101561070957600080fd5b506001600160a01b0381351690602001356111e0565b6102746004803603608081101561073557600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561077057600080fd5b82018360208201111561078257600080fd5b803590602001918460018302840111640100000000831117156107a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611274945050505050565b61036d600480360360208110156107fb57600080fd5b50356112d4565b6102746004803603606081101561081857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561084857600080fd5b82018360208201111561085a57600080fd5b8035906020019184600183028401116401000000008311171561087c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112eb945050505050565b61036d61133e565b6103fe600480360360408110156108db57600080fd5b50803590602001356001600160a01b0316611362565b6102746004803603606081101561090757600080fd5b506001600160a01b038135811691602081013590911690604001356113bb565b61036d6004803603604081101561093d57600080fd5b506001600160a01b03813581169160200135166113d8565b6103fe611403565b6103fe6004803603602081101561097357600080fd5b50356001600160a01b0316611499565b61036d611592565b6001600160e01b03191660009081526007602052604090205460ff1690565b600954600160a01b900460ff1690565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a465780601f10610a1b57610100808354040283529160200191610a46565b820191906000526020600020905b815481529060010190602001808311610a2957829003601f168201915b5050505050905090565b6000610a64610a5d6116a6565b84846116aa565b5060015b92915050565b6000610a8a838360405180602001604052806000815250610c88565b9392505050565b60025490565b6009546000908490600160a81b900460ff1680610ad95750610ad97f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c826110fa565b610b145760405162461bcd60e51b815260040180806020018281038252604a8152602001806123ef604a913960600191505060405180910390fd5b610b1f858585611796565b95945050505050565b60009081526008602052604090206002015490565b600082815260086020526040902060020154610b6090610b5b6116a6565b6110fa565b610b9b5760405162461bcd60e51b815260040180806020018281038252602f8152602001806121b4602f913960400191505060405180910390fd5b610ba5828261180e565b5050565b60055460ff1690565b6000610a8a8383604051806020016040528060008152506112eb565b60065490565b610bdc6116a6565b6001600160a01b0316816001600160a01b031614610c2b5760405162461bcd60e51b815260040180806020018281038252602f81526020018061245e602f913960400191505060405180910390fd5b610ba58282611877565b6000610a64610c426116a6565b84610c838560016000610c536116a6565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906115b6565b6116aa565b6000610c9484846111e0565b50610ca8610ca06116a6565b8585856118e0565b610ce35760405162461bcd60e51b81526004018080602001828103825260268152602001806122f36026913960400191505060405180910390fd5b5060019392505050565b600954600160a01b900460ff1615610d4c576040805162461bcd60e51b815260206004820152601e60248201527f4552433230426173653a206d696e74696e672069732066696e69736865640000604482015290519081900360640190fd5b610d787ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9610b5b6116a6565b610db35760405162461bcd60e51b815260040180806020018281038252602b8152602001806122c8602b913960400191505060405180910390fd5b610ba58282611a25565b610dce610dc86116a6565b82611b15565b50565b600954600160a81b900460ff1690565b6001600160a01b031660009081526020819052604090205490565b610e046116a6565b6009546001600160a01b03908116911614610e54576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b6009546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600980546001600160a01b0319169055565b6000610ed58260405180606001604052806024815260200161236160249139610ece86610ec96116a6565b6113d8565b9190611c11565b9050610ee983610ee36116a6565b836116aa565b610ef38383611b15565b505050565b600954600160a01b900460ff1615610f57576040805162461bcd60e51b815260206004820152601e60248201527f4552433230426173653a206d696e74696e672069732066696e69736865640000604482015290519081900360640190fd5b610f5f6116a6565b6009546001600160a01b03908116911614610faf576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b6009805460ff60a01b1916600160a01b1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a1565b610ff56116a6565b6009546001600160a01b03908116911614611045576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b816001600160a01b031663a9059cbb61105c6110d3565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b505050506040513d60208110156110cd57600080fd5b50505050565b6009546001600160a01b031690565b6000828152600860205260408120610a8a9083611ca8565b6000828152600860205260408120610a8a9083611cb4565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a465780601f10610a1b57610100808354040283529160200191610a46565b600081565b6000610a646111856116a6565b84610c838560405180606001604052806025815260200161243960259139600160006111af6116a6565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611c11565b60006111ea6116a6565b600954600160a81b900460ff168061122757506112277f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c826110fa565b6112625760405162461bcd60e51b815260040180806020018281038252604a8152602001806123ef604a913960600191505060405180910390fd5b61126c8484611cc9565b949350505050565b6000611281858585610a97565b5061128e858585856118e0565b6112c95760405162461bcd60e51b81526004018080602001828103825260268152602001806122f36026913960400191505060405180910390fd5b506001949350505050565b6000818152600860205260408120610a6890611cdd565b60006112f78484610a50565b50611303848484611ce8565b610ce35760405162461bcd60e51b815260040180806020018281038252602581526020018061224d6025913960400191505060405180910390fd5b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b60008281526008602052604090206002015461138090610b5b6116a6565b610c2b5760405162461bcd60e51b81526004018080602001828103825260308152602001806122986030913960400191505060405180910390fd5b600061126c84848460405180602001604052806000815250611274565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61140b6116a6565b6009546001600160a01b0390811691161461145b576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b6009805460ff60a81b1916600160a81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b6114a16116a6565b6009546001600160a01b039081169116146114f1576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b6001600160a01b0381166115365760405162461bcd60e51b81526004018080602001828103825260268152602001806122056026913960400191505060405180910390fd5b6009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b600082820183811015610a8a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610a8a836001600160a01b038416611e1b565b611630838383610ef3565b6001600160a01b038316610ef3576006546116538261164d610a91565b906115b6565b1115610ef3576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b3390565b6001600160a01b0383166116ef5760405162461bcd60e51b81526004018080602001828103825260248152602001806123cb6024913960400191505060405180910390fd5b6001600160a01b0382166117345760405162461bcd60e51b815260040180806020018281038252602281526020018061222b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006117a3848484611e65565b610ce3846117af6116a6565b610c8385604051806060016040528060288152602001612319602891396001600160a01b038a166000908152600160205260408120906117ed6116a6565b6001600160a01b031681526020810191909152604001600020549190611c11565b60008281526008602052604090206118269082611610565b15610ba5576118336116a6565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260086020526040902061188f9082611fc0565b15610ba55761189c6116a6565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006118f4846001600160a01b0316611fd5565b6119005750600061126c565b6000846001600160a01b03166388a7ca5c6119196116a6565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561198c578181015183820152602001611974565b50505050905090810190601f1680156119b95780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156119db57600080fd5b505af11580156119ef573d6000803e3d6000fd5b505050506040513d6020811015611a0557600080fd5b50516001600160e01b031916632229f29760e21b14915050949350505050565b6001600160a01b038216611a80576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611a8c60008383611fdb565b600254611a9990826115b6565b6002556001600160a01b038216600090815260208190526040902054611abf90826115b6565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611b5a5760405162461bcd60e51b81526004018080602001828103825260218152602001806123856021913960400191505060405180910390fd5b611b6682600083611fdb565b611ba3816040518060600160405280602281526020016121e3602291396001600160a01b0385166000908152602081905260409020549190611c11565b6001600160a01b038316600090815260208190526040902055600254611bc99082611fe6565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008184841115611ca05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c65578181015183820152602001611c4d565b50505050905090810190601f168015611c925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000610a8a8383612028565b6000610a8a836001600160a01b03841661208c565b6000610a64611cd66116a6565b8484611e65565b6000610a68826120a4565b6000611cfc846001600160a01b0316611fd5565b611d0857506000610a8a565b6000846001600160a01b0316637b04a2d0611d216116a6565b86866040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d84578181015183820152602001611d6c565b50505050905090810190601f168015611db15780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611dd257600080fd5b505af1158015611de6573d6000803e3d6000fd5b505050506040513d6020811015611dfc57600080fd5b50516001600160e01b0319166307b04a2d60e41b149150509392505050565b6000611e27838361208c565b611e5d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a68565b506000610a68565b6001600160a01b038316611eaa5760405162461bcd60e51b81526004018080602001828103825260258152602001806123a66025913960400191505060405180910390fd5b6001600160a01b038216611eef5760405162461bcd60e51b81526004018080602001828103825260238152602001806121916023913960400191505060405180910390fd5b611efa838383611fdb565b611f3781604051806060016040528060268152602001612272602691396001600160a01b0386166000908152602081905260409020549190611c11565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611f6690826115b6565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000610a8a836001600160a01b0384166120a8565b3b151590565b610ef3838383611625565b6000610a8a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c11565b8154600090821061206a5760405162461bcd60e51b815260040180806020018281038252602281526020018061216f6022913960400191505060405180910390fd5b82600001828154811061207957fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000818152600183016020526040812054801561216457835460001980830191908101906000908790839081106120db57fe5b90600052602060002001549050808760000184815481106120f857fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061212857fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a68565b6000915050610a6856fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373455243313336333a205f636865636b416e6443616c6c417070726f7665207265766572747345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65526f6c65733a2063616c6c657220646f6573206e6f74206861766520746865204d494e54455220726f6c65455243313336333a205f636865636b416e6443616c6c5472616e73666572207265766572747345524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734552433230426173653a207472616e73666572206973206e6f7420656e61626c6564206f722066726f6d20646f6573206e6f74206861766520746865204f50455241544f5220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212206b81452bce86a5abf5fae78870ee2ac9e30c18cecb1b0cd1683a4c9f4373b0d764736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102485760003560e01c806379cc67901161013b578063c1d34b89116100b8578063d8fbe9941161007c578063d8fbe994146108f1578063dd62ed3e14610927578063f1b50c1d14610955578063f2fde38b1461095d578063f5b541a61461098357610248565b8063c1d34b891461071f578063ca15c873146107e5578063cae9ca5114610802578063d5391393146108bd578063d547741f146108c557610248565b806391d14854116100ff57806391d148541461068b57806395d89b41146106b7578063a217fddf146106bf578063a457c2d7146106c7578063a9059cbb146106f357610248565b806379cc6790146105e45780637d64bcb4146106105780638980f11f146106185780638da5cb5b146106445780639010d07c1461066857610248565b80633177029f116101c957806340c10f191161018d57806340c10f191461056557806342966c68146105915780634cd412d5146105ae57806370a08231146105b6578063715018a6146105dc57610248565b80633177029f1461041e578063355274ea1461044a57806336568abe14610452578063395093511461047e5780634000aea0146104aa57610248565b806318160ddd1161021057806318160ddd1461036557806323b872dd1461037f578063248a9ca3146103b55780632f2ff15d146103d2578063313ce5671461040057610248565b806301ffc9a71461024d57806305d2035b1461028857806306fdde0314610290578063095ea7b31461030d5780631296ee6214610339575b600080fd5b6102746004803603602081101561026357600080fd5b50356001600160e01b03191661098b565b604080519115158252519081900360200190f35b6102746109aa565b6102986109ba565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d25781810151838201526020016102ba565b50505050905090810190601f1680156102ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102746004803603604081101561032357600080fd5b506001600160a01b038135169060200135610a50565b6102746004803603604081101561034f57600080fd5b506001600160a01b038135169060200135610a6e565b61036d610a91565b60408051918252519081900360200190f35b6102746004803603606081101561039557600080fd5b506001600160a01b03813581169160208101359091169060400135610a97565b61036d600480360360208110156103cb57600080fd5b5035610b28565b6103fe600480360360408110156103e857600080fd5b50803590602001356001600160a01b0316610b3d565b005b610408610ba9565b6040805160ff9092168252519081900360200190f35b6102746004803603604081101561043457600080fd5b506001600160a01b038135169060200135610bb2565b61036d610bce565b6103fe6004803603604081101561046857600080fd5b50803590602001356001600160a01b0316610bd4565b6102746004803603604081101561049457600080fd5b506001600160a01b038135169060200135610c35565b610274600480360360608110156104c057600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156104f057600080fd5b82018360208201111561050257600080fd5b8035906020019184600183028401116401000000008311171561052457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c88945050505050565b6103fe6004803603604081101561057b57600080fd5b506001600160a01b038135169060200135610ced565b6103fe600480360360208110156105a757600080fd5b5035610dbd565b610274610dd1565b61036d600480360360208110156105cc57600080fd5b50356001600160a01b0316610de1565b6103fe610dfc565b6103fe600480360360408110156105fa57600080fd5b506001600160a01b038135169060200135610e9e565b6103fe610ef8565b6103fe6004803603604081101561062e57600080fd5b506001600160a01b038135169060200135610fed565b61064c6110d3565b604080516001600160a01b039092168252519081900360200190f35b61064c6004803603604081101561067e57600080fd5b50803590602001356110e2565b610274600480360360408110156106a157600080fd5b50803590602001356001600160a01b03166110fa565b610298611112565b61036d611173565b610274600480360360408110156106dd57600080fd5b506001600160a01b038135169060200135611178565b6102746004803603604081101561070957600080fd5b506001600160a01b0381351690602001356111e0565b6102746004803603608081101561073557600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561077057600080fd5b82018360208201111561078257600080fd5b803590602001918460018302840111640100000000831117156107a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611274945050505050565b61036d600480360360208110156107fb57600080fd5b50356112d4565b6102746004803603606081101561081857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561084857600080fd5b82018360208201111561085a57600080fd5b8035906020019184600183028401116401000000008311171561087c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112eb945050505050565b61036d61133e565b6103fe600480360360408110156108db57600080fd5b50803590602001356001600160a01b0316611362565b6102746004803603606081101561090757600080fd5b506001600160a01b038135811691602081013590911690604001356113bb565b61036d6004803603604081101561093d57600080fd5b506001600160a01b03813581169160200135166113d8565b6103fe611403565b6103fe6004803603602081101561097357600080fd5b50356001600160a01b0316611499565b61036d611592565b6001600160e01b03191660009081526007602052604090205460ff1690565b600954600160a01b900460ff1690565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a465780601f10610a1b57610100808354040283529160200191610a46565b820191906000526020600020905b815481529060010190602001808311610a2957829003601f168201915b5050505050905090565b6000610a64610a5d6116a6565b84846116aa565b5060015b92915050565b6000610a8a838360405180602001604052806000815250610c88565b9392505050565b60025490565b6009546000908490600160a81b900460ff1680610ad95750610ad97f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c826110fa565b610b145760405162461bcd60e51b815260040180806020018281038252604a8152602001806123ef604a913960600191505060405180910390fd5b610b1f858585611796565b95945050505050565b60009081526008602052604090206002015490565b600082815260086020526040902060020154610b6090610b5b6116a6565b6110fa565b610b9b5760405162461bcd60e51b815260040180806020018281038252602f8152602001806121b4602f913960400191505060405180910390fd5b610ba5828261180e565b5050565b60055460ff1690565b6000610a8a8383604051806020016040528060008152506112eb565b60065490565b610bdc6116a6565b6001600160a01b0316816001600160a01b031614610c2b5760405162461bcd60e51b815260040180806020018281038252602f81526020018061245e602f913960400191505060405180910390fd5b610ba58282611877565b6000610a64610c426116a6565b84610c838560016000610c536116a6565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906115b6565b6116aa565b6000610c9484846111e0565b50610ca8610ca06116a6565b8585856118e0565b610ce35760405162461bcd60e51b81526004018080602001828103825260268152602001806122f36026913960400191505060405180910390fd5b5060019392505050565b600954600160a01b900460ff1615610d4c576040805162461bcd60e51b815260206004820152601e60248201527f4552433230426173653a206d696e74696e672069732066696e69736865640000604482015290519081900360640190fd5b610d787ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9610b5b6116a6565b610db35760405162461bcd60e51b815260040180806020018281038252602b8152602001806122c8602b913960400191505060405180910390fd5b610ba58282611a25565b610dce610dc86116a6565b82611b15565b50565b600954600160a81b900460ff1690565b6001600160a01b031660009081526020819052604090205490565b610e046116a6565b6009546001600160a01b03908116911614610e54576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b6009546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600980546001600160a01b0319169055565b6000610ed58260405180606001604052806024815260200161236160249139610ece86610ec96116a6565b6113d8565b9190611c11565b9050610ee983610ee36116a6565b836116aa565b610ef38383611b15565b505050565b600954600160a01b900460ff1615610f57576040805162461bcd60e51b815260206004820152601e60248201527f4552433230426173653a206d696e74696e672069732066696e69736865640000604482015290519081900360640190fd5b610f5f6116a6565b6009546001600160a01b03908116911614610faf576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b6009805460ff60a01b1916600160a01b1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a1565b610ff56116a6565b6009546001600160a01b03908116911614611045576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b816001600160a01b031663a9059cbb61105c6110d3565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b505050506040513d60208110156110cd57600080fd5b50505050565b6009546001600160a01b031690565b6000828152600860205260408120610a8a9083611ca8565b6000828152600860205260408120610a8a9083611cb4565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a465780601f10610a1b57610100808354040283529160200191610a46565b600081565b6000610a646111856116a6565b84610c838560405180606001604052806025815260200161243960259139600160006111af6116a6565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611c11565b60006111ea6116a6565b600954600160a81b900460ff168061122757506112277f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c826110fa565b6112625760405162461bcd60e51b815260040180806020018281038252604a8152602001806123ef604a913960600191505060405180910390fd5b61126c8484611cc9565b949350505050565b6000611281858585610a97565b5061128e858585856118e0565b6112c95760405162461bcd60e51b81526004018080602001828103825260268152602001806122f36026913960400191505060405180910390fd5b506001949350505050565b6000818152600860205260408120610a6890611cdd565b60006112f78484610a50565b50611303848484611ce8565b610ce35760405162461bcd60e51b815260040180806020018281038252602581526020018061224d6025913960400191505060405180910390fd5b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b60008281526008602052604090206002015461138090610b5b6116a6565b610c2b5760405162461bcd60e51b81526004018080602001828103825260308152602001806122986030913960400191505060405180910390fd5b600061126c84848460405180602001604052806000815250611274565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61140b6116a6565b6009546001600160a01b0390811691161461145b576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b6009805460ff60a81b1916600160a81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b6114a16116a6565b6009546001600160a01b039081169116146114f1576040805162461bcd60e51b81526020600482018190526024820152600080516020612341833981519152604482015290519081900360640190fd5b6001600160a01b0381166115365760405162461bcd60e51b81526004018080602001828103825260268152602001806122056026913960400191505060405180910390fd5b6009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b600082820183811015610a8a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610a8a836001600160a01b038416611e1b565b611630838383610ef3565b6001600160a01b038316610ef3576006546116538261164d610a91565b906115b6565b1115610ef3576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b3390565b6001600160a01b0383166116ef5760405162461bcd60e51b81526004018080602001828103825260248152602001806123cb6024913960400191505060405180910390fd5b6001600160a01b0382166117345760405162461bcd60e51b815260040180806020018281038252602281526020018061222b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006117a3848484611e65565b610ce3846117af6116a6565b610c8385604051806060016040528060288152602001612319602891396001600160a01b038a166000908152600160205260408120906117ed6116a6565b6001600160a01b031681526020810191909152604001600020549190611c11565b60008281526008602052604090206118269082611610565b15610ba5576118336116a6565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260086020526040902061188f9082611fc0565b15610ba55761189c6116a6565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006118f4846001600160a01b0316611fd5565b6119005750600061126c565b6000846001600160a01b03166388a7ca5c6119196116a6565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561198c578181015183820152602001611974565b50505050905090810190601f1680156119b95780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156119db57600080fd5b505af11580156119ef573d6000803e3d6000fd5b505050506040513d6020811015611a0557600080fd5b50516001600160e01b031916632229f29760e21b14915050949350505050565b6001600160a01b038216611a80576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611a8c60008383611fdb565b600254611a9990826115b6565b6002556001600160a01b038216600090815260208190526040902054611abf90826115b6565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611b5a5760405162461bcd60e51b81526004018080602001828103825260218152602001806123856021913960400191505060405180910390fd5b611b6682600083611fdb565b611ba3816040518060600160405280602281526020016121e3602291396001600160a01b0385166000908152602081905260409020549190611c11565b6001600160a01b038316600090815260208190526040902055600254611bc99082611fe6565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008184841115611ca05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c65578181015183820152602001611c4d565b50505050905090810190601f168015611c925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000610a8a8383612028565b6000610a8a836001600160a01b03841661208c565b6000610a64611cd66116a6565b8484611e65565b6000610a68826120a4565b6000611cfc846001600160a01b0316611fd5565b611d0857506000610a8a565b6000846001600160a01b0316637b04a2d0611d216116a6565b86866040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d84578181015183820152602001611d6c565b50505050905090810190601f168015611db15780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611dd257600080fd5b505af1158015611de6573d6000803e3d6000fd5b505050506040513d6020811015611dfc57600080fd5b50516001600160e01b0319166307b04a2d60e41b149150509392505050565b6000611e27838361208c565b611e5d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a68565b506000610a68565b6001600160a01b038316611eaa5760405162461bcd60e51b81526004018080602001828103825260258152602001806123a66025913960400191505060405180910390fd5b6001600160a01b038216611eef5760405162461bcd60e51b81526004018080602001828103825260238152602001806121916023913960400191505060405180910390fd5b611efa838383611fdb565b611f3781604051806060016040528060268152602001612272602691396001600160a01b0386166000908152602081905260409020549190611c11565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611f6690826115b6565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000610a8a836001600160a01b0384166120a8565b3b151590565b610ef3838383611625565b6000610a8a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c11565b8154600090821061206a5760405162461bcd60e51b815260040180806020018281038252602281526020018061216f6022913960400191505060405180910390fd5b82600001828154811061207957fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000818152600183016020526040812054801561216457835460001980830191908101906000908790839081106120db57fe5b90600052602060002001549050808760000184815481106120f857fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061212857fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a68565b6000915050610a6856fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373455243313336333a205f636865636b416e6443616c6c417070726f7665207265766572747345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65526f6c65733a2063616c6c657220646f6573206e6f74206861766520746865204d494e54455220726f6c65455243313336333a205f636865636b416e6443616c6c5472616e73666572207265766572747345524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734552433230426173653a207472616e73666572206973206e6f7420656e61626c6564206f722066726f6d20646f6573206e6f74206861766520746865204f50455241544f5220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212206b81452bce86a5abf5fae78870ee2ac9e30c18cecb1b0cd1683a4c9f4373b0d764736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "465:3954:18:-:0;;;591:37;;;-1:-1:-1;;;;675:37:18;;;1833:441;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1833:441:18;;;;;;;;;;-1:-1:-1;1833:441:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1833:441:18;;;;;;;;;;-1:-1:-1;1833:441:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1833:441:18;;;;;;;;;;;;;;;;;;;;;;2030:13:11;;1833:441:18;;-1:-1:-1;1833:441:18;;-1:-1:-1;1833:441:18;2056:4;;2062:6;;1833:441;;2056:4;;2062:6;;2030:13:11;;:5;;:13;;;;:::i;:::-;-1:-1:-1;2053:17:11;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2080:9:11;:14;;-1:-1:-1;;2080:14:11;2092:2;2080:14;;;-1:-1:-1;460:8:13;452:42;;;;;-1:-1:-1;;;452:42:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:4;:11;768:40:7;-1:-1:-1;;;768:18:7;:40::i;:::-;2126:50:20::1;-1:-1:-1::0;;;2126:18:20::1;:50::i;:::-;2186:49;-1:-1:-1::0;;;2186:18:20::1;:49::i;:::-;-1:-1:-1::0;313:44:19;;-1:-1:-1;1770:4:5;344:12:19;:10;:12::i;:::-;313:10;:44::i;:::-;367:37;195:19;391:12;:10;:12::i;367:37::-;414:39;260:21;440:12;:10;:12::i;414:39::-;882:17:6;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:6;-1:-1:-1;;;;;924:18:6;;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:6;-1:-1:-1;;957:43:6;;-1:-1:-1;;957:43:6;-1:-1:-1;2084:24:18::2;2099:8:::0;2084:14:::2;:24::i;:::-;2123:17:::0;;2119:77:::2;;2156:29;2162:7;:5;:7::i;:::-;2171:13:::0;2156:5:::2;:29::i;:::-;2210:15;2206:62;;;2241:16;:14;:16::i;:::-;1833:441:::0;;;;;;465:3954;;1499:198:7;-1:-1:-1;;;;;;1582:25:7;;;;;1574:66;;;;;-1:-1:-1;;;1574:66:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1650:33:7;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1650:40:7;1686:4;1650:40;;;1499:198::o;598:104:4:-;685:10;598:104;:::o;6586:110:5:-;6664:25;6675:4;6681:7;6664:10;:25::i;:::-;6586:110;;:::o;9976:88:11:-;10036:9;:21;;-1:-1:-1;;10036:21:11;;;;;;;;;;;;9976:88::o;1083:77:6:-;1147:6;;-1:-1:-1;;;;;1147:6:6;1083:77;:::o;7790:370:11:-;-1:-1:-1;;;;;7873:21:11;;7865:65;;;;;-1:-1:-1;;;7865:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;7941:49;7970:1;7974:7;7983:6;7941:20;:49::i;:::-;8016:24;8033:6;8016:12;;:16;;;;;;:24;;;;:::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:11;;:9;:18;;;;;;;;;;;;:30;;8094:6;;8071:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8050:18:11;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;;;;;;8050:18;;:9;;8116:37;;;;;;;;;;7790:370;;:::o;4054:116:18:-;1297:12:6;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:6;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4107:16:18::1;:23:::0;;-1:-1:-1;;;;4107:23:18::1;-1:-1:-1::0;;;4107:23:18::1;::::0;;4146:17:::1;::::0;::::1;::::0;4107:23;;4146:17:::1;4054:116::o:0;7023:184:5:-;7096:12;;;;:6;:12;;;;;;;;:33;;7121:7;;7096:24;;;;;:33;;:::i;:::-;7092:109;;;7177:12;:10;:12::i;:::-;-1:-1:-1;;;;;7150:40:5;7168:7;-1:-1:-1;;;;;7150:40:5;7162:4;7150:40;;;;;;;;;;7023:184;;:::o;4238:179:18:-;4366:44;4393:4;4399:2;4403:6;4366:26;;;;;:44;;:::i;:::-;4238:179;;;:::o;882:176:10:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;-1:-1:-1;882:176:10;;;;;:::o;6429:141:16:-;6499:4;6522:41;6527:3;-1:-1:-1;;;;;6547:14:16;;6522:4;:41::i;852:312:13:-;960:44;987:4;993:2;997:6;960:26;;;;;:44;;:::i;:::-;-1:-1:-1;;;;;1019:18:13;;1015:143;;1113:4;;1084:25;1102:6;1084:13;:11;:13::i;:::-;:17;;;;;;:25;;;;:::i;:::-;:33;;1076:71;;;;;-1:-1:-1;;;1076:71:13;;;;;;;;;;;;;;;;;;;;;;;;;;;1640:404:16;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:16;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:16;2015:12;;3209:98:11;3288:12;;3209:98;:::o;3805:127:16:-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;465:3954:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:3954:18;;;-1:-1:-1;465:3954:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "465:3954:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:140:7;;;;;;;;;;;;;;;;-1:-1:-1;965:140:7;-1:-1:-1;;;;;;965:140:7;;:::i;:::-;;;;;;;;;;;;;;;;;;2342:94:18;;;:::i;2166:81:11:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4202:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4202:166:11;;;;;;;;:::i;2525:137:20:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2525:137:20;;;;;;;;:::i;3209:98:11:-;;;:::i;:::-;;;;;;;;;;;;;;;;3613:186:18;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3613:186:18;;;;;;;;;;;;;;;;;:::i;4280:112:5:-;;;;;;;;;;;;;;;;-1:-1:-1;4280:112:5;;:::i;4642:223::-;;;;;;;;;;;;;;;;-1:-1:-1;4642:223:5;;;;;;-1:-1:-1;;;;;4642:223:5;;:::i;:::-;;3068:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4844:145:20;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4844:145:20;;;;;;;;:::i;601:73:13:-;;;:::i;5816:205:5:-;;;;;;;;;;;;;;;;-1:-1:-1;5816:205:5;;;;;;-1:-1:-1;;;;;5816:205:5;;:::i;5547:215:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5547:215:11;;;;;;;;:::i;3003:272:20:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3003:272:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3003:272:20;;-1:-1:-1;3003:272:20;;-1:-1:-1;;;;;3003:272:20:i;2771:100:18:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2771:100:18;;;;;;;;:::i;522:89:12:-;;;;;;;;;;;;;;;;-1:-1:-1;522:89:12;;:::i;2504:94:18:-;;;:::i;3365:117:11:-;;;;;;;;;;;;;;;;-1:-1:-1;3365:117:11;-1:-1:-1;;;;;3365:117:11;;:::i;1706:145:6:-;;;:::i;917:290:12:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;917:290:12;;;;;;;;:::i;3870:120:18:-;;;:::i;610:150:24:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;610:150:24;;;;;;;;:::i;1083:77:6:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1083:77:6;;;;;;;;;;;;;;3963:136:5;;;;;;;;;;;;;;;;-1:-1:-1;3963:136:5;;;;;;;:::i;2948:137::-;;;;;;;;;;;;;;;;-1:-1:-1;2948:137:5;;;;;;-1:-1:-1;;;;;2948:137:5;;:::i;2360:85:11:-;;;:::i;1725:49:5:-;;;:::i;6249:266:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6249:266:11;;;;;;;;:::i;3111:166:18:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3111:166:18;;;;;;;;:::i;4254:292:20:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:292:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4254:292:20;;-1:-1:-1;4254:292:20;;-1:-1:-1;;;;;4254:292:20:i;3253:125:5:-;;;;;;;;;;;;;;;;-1:-1:-1;3253:125:5;;:::i;5350:269:20:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5350:269:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5350:269:20;;-1:-1:-1;5350:269:20;;-1:-1:-1;;;;;5350:269:20:i;157:57:19:-;;;:::i;5099:226:5:-;;;;;;;;;;;;;;;;-1:-1:-1;5099:226:5;;;;;;-1:-1:-1;;;;;5099:226:5;;:::i;3652:165:20:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3652:165:20;;;;;;;;;;;;;;;;;:::i;3915:149:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3915:149:11;;;;;;;;;;:::i;4054:116:18:-;;;:::i;2000:240:6:-;;;;;;;;;;;;;;;;-1:-1:-1;2000:240:6;-1:-1:-1;;;;;2000:240:6;;:::i;220:61:19:-;;;:::i;965:140:7:-;-1:-1:-1;;;;;;1065:33:7;1042:4;1065:33;;;:20;:33;;;;;;;;;965:140::o;2342:94:18:-;2413:16;;-1:-1:-1;;;2413:16:18;;;;;2342:94::o;2166:81:11:-;2235:5;2228:12;;;;;;;;-1:-1:-1;;2228:12:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:13;;2228:12;;2235:5;;2228:12;;2235:5;2228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81;:::o;4202:166::-;4285:4;4301:39;4310:12;:10;:12::i;:::-;4324:7;4333:6;4301:8;:39::i;:::-;-1:-1:-1;4357:4:11;4202:166;;;;;:::o;2525:137:20:-;2602:4;2625:30;2641:2;2645:5;2625:30;;;;;;;;;;;;:15;:30::i;:::-;2618:37;2525:137;-1:-1:-1;;;2525:137:20:o;3209:98:11:-;3288:12;;3209:98;:::o;3613:186:18:-;1268:16;;3734:4;;3719;;-1:-1:-1;;;1268:16:18;;;;;:48;;;1288:28;260:21:19;1311:4:18;1288:7;:28::i;:::-;1247:169;;;;-1:-1:-1;;;1247:169:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3757:35:::1;3776:4;3782:2;3786:5;3757:18;:35::i;:::-;3750:42:::0;3613:186;-1:-1:-1;;;;;3613:186:18:o;4280:112:5:-;4337:7;4363:12;;;:6;:12;;;;;:22;;;;4280:112::o;4642:223::-;4733:12;;;;:6;:12;;;;;:22;;;4725:45;;4757:12;:10;:12::i;:::-;4725:7;:45::i;:::-;4717:105;;;;-1:-1:-1;;;4717:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4833:25;4844:4;4850:7;4833:10;:25::i;:::-;4642:223;;:::o;3068:81:11:-;3133:9;;;;3068:81;:::o;4844:145:20:-;4925:4;4948:34;4963:7;4972:5;4948:34;;;;;;;;;;;;:14;:34::i;601:73:13:-;663:4;;601:73;:::o;5816:205:5:-;5913:12;:10;:12::i;:::-;-1:-1:-1;;;;;5902:23:5;:7;-1:-1:-1;;;;;5902:23:5;;5894:83;;;;-1:-1:-1;;;5894:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5988:26;6000:4;6006:7;5988:11;:26::i;5547:215:11:-;5635:4;5651:83;5660:12;:10;:12::i;:::-;5674:7;5683:50;5722:10;5683:11;:25;5695:12;:10;:12::i;:::-;-1:-1:-1;;;;;5683:25:11;;;;;;;;;;;;;;;;;-1:-1:-1;5683:25:11;;;:34;;;;;;;;;;;:38;:50::i;:::-;5651:8;:83::i;3003:272:20:-;3099:4;3115:19;3124:2;3128:5;3115:8;:19::i;:::-;;3152:52;3174:12;:10;:12::i;:::-;3188:2;3192:5;3199:4;3152:21;:52::i;:::-;3144:103;;;;-1:-1:-1;;;3144:103:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3264:4:20;3003:272;;;;;:::o;2771:100:18:-;1012:16;;-1:-1:-1;;;1012:16:18;;;;1011:17;1003:60;;;;;-1:-1:-1;;;1003:60:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:34:19::1;195:19;527:12;:10;:12::i;506:34::-;498:90;;;;-1:-1:-1::0;;;498:90:19::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2848:16:18::2;2854:2;2858:5;2848;:16::i;522:89:12:-:0;577:27;583:12;:10;:12::i;:::-;597:6;577:5;:27::i;:::-;522:89;:::o;2504:94:18:-;2575:16;;-1:-1:-1;;;2575:16:18;;;;;2504:94::o;3365:117:11:-;-1:-1:-1;;;;;3457:18:11;3431:7;3457:18;;;;;;;;;;;;3365:117::o;1706:145:6:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:6;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:6;;;;;;;;;;;;;;;1796:6:::1;::::0;1775:40:::1;::::0;1812:1:::1;::::0;-1:-1:-1;;;;;1796:6:6::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1825:6;:19:::0;;-1:-1:-1;;;;;;1825:19:6::1;::::0;;1706:145::o;917:290:12:-;993:26;1022:84;1059:6;1022:84;;;;;;;;;;;;;;;;;:32;1032:7;1041:12;:10;:12::i;:::-;1022:9;:32::i;:::-;:36;:84;:36;:84::i;:::-;993:113;;1117:51;1126:7;1135:12;:10;:12::i;:::-;1149:18;1117:8;:51::i;:::-;1178:22;1184:7;1193:6;1178:5;:22::i;:::-;917:290;;;:::o;3870:120:18:-;1012:16;;-1:-1:-1;;;1012:16:18;;;;1011:17;1003:60;;;;;-1:-1:-1;;;1003:60:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:12:6::1;:10;:12::i;:::-;1287:6;::::0;-1:-1:-1;;;;;1287:6:6;;::::1;:22:::0;::::1;;1279:67;;;::::0;;-1:-1:-1;;;1279:67:6;;::::1;;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:6;;;;;;;;;;;;;::::1;;3930:16:18::2;:23:::0;;-1:-1:-1;;;;3930:23:18::2;-1:-1:-1::0;;;3930:23:18::2;::::0;;3969:14:::2;::::0;::::2;::::0;3930:23;;3969:14:::2;3870:120::o:0;610:150:24:-;1297:12:6;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:6;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:6;;;;;;;;;;;;;;;709:12:24::1;-1:-1:-1::0;;;;;702:29:24::1;;732:7;:5;:7::i;:::-;741:11;702:51;;;;;;;;;;;;;-1:-1:-1::0;;;;;702:51:24::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;610:150:24:o;1083:77:6:-;1147:6;;-1:-1:-1;;;;;1147:6:6;1083:77;:::o;3963:136:5:-;4036:7;4062:12;;;:6;:12;;;;;:30;;4086:5;4062:23;:30::i;2948:137::-;3017:4;3040:12;;;:6;:12;;;;;:38;;3070:7;3040:29;:38::i;2360:85:11:-;2431:7;2424:14;;;;;;;;-1:-1:-1;;2424:14:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:13;;2424:14;;2431:7;;2424:14;;2431:7;2424:14;;;;;;;;;;;;;;;;;;;;;;;;1725:49:5;1770:4;1725:49;:::o;6249:266:11:-;6342:4;6358:129;6367:12;:10;:12::i;:::-;6381:7;6390:96;6429:15;6390:96;;;;;;;;;;;;;;;;;:11;:25;6402:12;:10;:12::i;:::-;-1:-1:-1;;;;;6390:25:11;;;;;;;;;;;;;;;;;-1:-1:-1;6390:25:11;;;:34;;;;;;;;;;;:96;:38;:96::i;3111:166:18:-;3222:4;3199:12;:10;:12::i;:::-;1268:16;;-1:-1:-1;;;1268:16:18;;;;;:48;;;1288:28;260:21:19;1311:4:18;1288:7;:28::i;:::-;1247:169;;;;-1:-1:-1;;;1247:169:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3245:25:::1;3260:2;3264:5;3245:14;:25::i;:::-;3238:32:::0;3111:166;-1:-1:-1;;;;3111:166:18:o;4254:292:20:-;4368:4;4384:29;4397:4;4403:2;4407:5;4384:12;:29::i;:::-;;4431:44;4453:4;4459:2;4463:5;4470:4;4431:21;:44::i;:::-;4423:95;;;;-1:-1:-1;;;4423:95:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4535:4:20;4254:292;;;;;;:::o;3253:125:5:-;3316:7;3342:12;;;:6;:12;;;;;:29;;:27;:29::i;5350:269:20:-;5450:4;5466:23;5474:7;5483:5;5466:7;:23::i;:::-;;5507:42;5528:7;5537:5;5544:4;5507:20;:42::i;:::-;5499:92;;;;-1:-1:-1;;;5499:92:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;157:57:19;195:19;157:57;:::o;5099:226:5:-;5191:12;;;;:6;:12;;;;;:22;;;5183:45;;5215:12;:10;:12::i;5183:45::-;5175:106;;;;-1:-1:-1;;;5175:106:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3652:165:20;3747:4;3770:40;3790:4;3796:2;3800:5;3770:40;;;;;;;;;;;;:19;:40::i;3915:149:11:-;-1:-1:-1;;;;;4030:18:11;;;4004:7;4030:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3915:149::o;4054:116:18:-;1297:12:6;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:6;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:6;;;;;;;;;;;;;;;4107:16:18::1;:23:::0;;-1:-1:-1;;;;4107:23:18::1;-1:-1:-1::0;;;4107:23:18::1;::::0;;4146:17:::1;::::0;::::1;::::0;4107:23;;4146:17:::1;4054:116::o:0;2000:240:6:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:6;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:6;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:6;;::::1;::::0;2189:6:::1;::::0;2168:38:::1;::::0;2189:6:::1;::::0;2168:38:::1;2216:6;:17:::0;;-1:-1:-1;;;;;;2216:17:6::1;-1:-1:-1::0;;;;;2216:17:6;;;::::1;::::0;;;::::1;::::0;;2000:240::o;220:61:19:-;260:21;220:61;:::o;882:176:10:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;6429:141:16;6499:4;6522:41;6527:3;-1:-1:-1;;;;;6547:14:16;;6522:4;:41::i;852:312:13:-;960:44;987:4;993:2;997:6;960:26;:44::i;:::-;-1:-1:-1;;;;;1019:18:13;;1015:143;;1113:4;;1084:25;1102:6;1084:13;:11;:13::i;:::-;:17;;:25::i;:::-;:33;;1076:71;;;;;-1:-1:-1;;;1076:71:13;;;;;;;;;;;;;;;;;;;;;;;;;;;598:104:4;685:10;598:104;:::o;9313:340:11:-;-1:-1:-1;;;;;9414:19:11;;9406:68;;;;-1:-1:-1;;;9406:68:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9492:21:11;;9484:68;;;;-1:-1:-1;;;9484:68:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9563:18:11;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9614:32;;;;;;;;;;;;;;;;;9313:340;;;:::o;4835:317::-;4941:4;4957:36;4967:6;4975:9;4986:6;4957:9;:36::i;:::-;5003:121;5012:6;5020:12;:10;:12::i;:::-;5034:89;5072:6;5034:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5034:19:11;;;;;;:11;:19;;;;;;5054:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:33:11;;;;;;;;;;;;-1:-1:-1;5034:33:11;;;:89;:37;:89::i;7023:184:5:-;7096:12;;;;:6;:12;;;;;:33;;7121:7;7096:24;:33::i;:::-;7092:109;;;7177:12;:10;:12::i;:::-;-1:-1:-1;;;;;7150:40:5;7168:7;-1:-1:-1;;;;;7150:40:5;7162:4;7150:40;;;;;;;;;;7023:184;;:::o;7213:188::-;7287:12;;;;:6;:12;;;;;:36;;7315:7;7287:27;:36::i;:::-;7283:112;;;7371:12;:10;:12::i;:::-;-1:-1:-1;;;;;7344:40:5;7362:7;-1:-1:-1;;;;;7344:40:5;7356:4;7344:40;;;;;;;;;;7213:188;;:::o;6164:356:20:-;6273:4;6294:15;:2;-1:-1:-1;;;;;6294:13:20;;:15::i;:::-;6289:59;;-1:-1:-1;6332:5:20;6325:12;;6289:59;6357:13;6390:2;-1:-1:-1;;;;;6373:39:20;;6426:12;:10;:12::i;:::-;6440:4;6446:5;6453:4;6373:94;;;;;;;;;;;;;-1:-1:-1;;;;;6373:94:20;;;;;;-1:-1:-1;;;;;6373:94:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6373:94:20;-1:-1:-1;;;;;;6485:27:20;-1:-1:-1;;;6485:27:20;;-1:-1:-1;;6164:356:20;;;;;;:::o;7790:370:11:-;-1:-1:-1;;;;;7873:21:11;;7865:65;;;;;-1:-1:-1;;;7865:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;7941:49;7970:1;7974:7;7983:6;7941:20;:49::i;:::-;8016:12;;:24;;8033:6;8016:16;:24::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:11;;:9;:18;;;;;;;;;;;:30;;8094:6;8071:22;:30::i;:::-;-1:-1:-1;;;;;8050:18:11;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;;;;;;8050:18;;:9;;8116:37;;;;;;;;;;7790:370;;:::o;8480:410::-;-1:-1:-1;;;;;8563:21:11;;8555:67;;;;-1:-1:-1;;;8555:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8633:49;8654:7;8671:1;8675:6;8633:20;:49::i;:::-;8714:68;8737:6;8714:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8714:18:11;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8693:18:11;;:9;:18;;;;;;;;;;:89;8807:12;;:24;;8824:6;8807:16;:24::i;:::-;8792:12;:39;8846:37;;;;;;;;8872:1;;-1:-1:-1;;;;;8846:37:11;;;;;;;;;;;;8480:410;;:::o;1754:187:10:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:10;;;1754:187::o;7650:147:16:-;7724:7;7766:22;7770:3;7782:5;7766:3;:22::i;6966:156::-;7046:4;7069:46;7079:3;-1:-1:-1;;;;;7099:14:16;;7069:9;:46::i;3685:172:11:-;3771:4;3787:42;3797:12;:10;:12::i;:::-;3811:9;3822:6;3787:9;:42::i;7203:115:16:-;7266:7;7292:19;7300:3;7292:7;:19::i;6969:349:20:-;7068:4;7089:20;:7;-1:-1:-1;;;;;7089:18:20;;:20::i;:::-;7084:64;;-1:-1:-1;7132:5:20;7125:12;;7084:64;7157:13;7189:7;-1:-1:-1;;;;;7173:43:20;;7230:12;:10;:12::i;:::-;7244:5;7251:4;7173:92;;;;;;;;;;;;;-1:-1:-1;;;;;7173:92:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7173:92:20;-1:-1:-1;;;;;;7283:27:20;-1:-1:-1;;;7283:27:20;;-1:-1:-1;;6969:349:20;;;;;:::o;1640:404:16:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:16;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:16;2015:12;;6989:530:11;-1:-1:-1;;;;;7094:20:11;;7086:70;;;;-1:-1:-1;;;7086:70:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7174:23:11;;7166:71;;;;-1:-1:-1;;;7166:71:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7248:47;7269:6;7277:9;7288:6;7248:20;:47::i;:::-;7326:71;7348:6;7326:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7326:17:11;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7306:17:11;;;:9;:17;;;;;;;;;;;:91;;;;7430:20;;;;;;;:32;;7455:6;7430:24;:32::i;:::-;-1:-1:-1;;;;;7407:20:11;;;:9;:20;;;;;;;;;;;;:55;;;;7477:35;;;;;;;7407:20;;7477:35;;;;;;;;;;;;;6989:530;;;:::o;6738:147:16:-;6811:4;6834:44;6842:3;-1:-1:-1;;;;;6862:14:16;;6834:7;:44::i;726:413:15:-;1086:20;1124:8;;;726:413::o;4238:179:18:-;4366:44;4393:4;4399:2;4403:6;4366:26;:44::i;1329:134:10:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;4452:201:16:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:16;;;;-1:-1:-1;;;4538:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;4013:107::-;4095:18;;4013:107::o;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:16;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"erc-payable-token/contracts/token/ERC1363/ERC1363.sol\";\nimport \"eth-token-recover/contracts/TokenRecover.sol\";\nimport \"./access/Roles.sol\";\n\n/**\n * @title ERC20Base\n * @author Vittorio Minacori (https://github.com/vittominacori)\n * @dev Implementation of the ERC20Base\n */\ncontract ERC20Base is ERC20Capped, ERC20Burnable, ERC1363, Roles, TokenRecover {\n\n    // indicates if minting is finished\n    bool private _mintingFinished = false;\n\n    // indicates if transfer is enabled\n    bool private _transferEnabled = false;\n\n    /**\n     * @dev Emitted during finish minting\n     */\n    event MintFinished();\n\n    /**\n     * @dev Emitted during transfer enabling\n     */\n    event TransferEnabled();\n\n    /**\n     * @dev Tokens can be minted only before minting finished.\n     */\n    modifier canMint() {\n        require(!_mintingFinished, \"ERC20Base: minting is finished\");\n        _;\n    }\n\n    /**\n     * @dev Tokens can be moved only after if transfer enabled or if you are an approved operator.\n     */\n    modifier canTransfer(address from) {\n        require(\n            _transferEnabled || hasRole(OPERATOR_ROLE, from),\n            \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\"\n        );\n        _;\n    }\n\n    /**\n     * @param name Name of the token\n     * @param symbol A symbol to be used as ticker\n     * @param decimals Number of decimals. All the operations are done using the smallest and indivisible token unit\n     * @param cap Maximum number of tokens mintable\n     * @param initialSupply Initial token supply\n     * @param transferEnabled If transfer is enabled on token creation\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        uint256 cap,\n        uint256 initialSupply,\n        bool transferEnabled\n    )\n        ERC20Capped(cap)\n        ERC1363(name, symbol)\n    {\n        _setupDecimals(decimals);\n\n        if (initialSupply > 0) {\n            _mint(owner(), initialSupply);\n        }\n\n        if (transferEnabled) {\n            enableTransfer();\n        }\n    }\n\n    /**\n     * @return if minting is finished or not.\n     */\n    function mintingFinished() public view returns (bool) {\n        return _mintingFinished;\n    }\n\n    /**\n     * @return if transfer is enabled or not.\n     */\n    function transferEnabled() public view returns (bool) {\n        return _transferEnabled;\n    }\n\n    /**\n     * @dev Function to mint tokens.\n     * @param to The address that will receive the minted tokens\n     * @param value The amount of tokens to mint\n     */\n    function mint(address to, uint256 value) public canMint onlyMinter {\n        _mint(to, value);\n    }\n\n    /**\n     * @dev Transfer tokens to a specified address.\n     * @param to The address to transfer to\n     * @param value The amount to be transferred\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function transfer(address to, uint256 value) public virtual override(ERC20) canTransfer(_msgSender()) returns (bool) {\n        return super.transfer(to, value);\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another.\n     * @param from The address which you want to send tokens from\n     * @param to The address which you want to transfer to\n     * @param value the amount of tokens to be transferred\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual override(ERC20) canTransfer(from) returns (bool) {\n        return super.transferFrom(from, to, value);\n    }\n\n    /**\n     * @dev Function to stop minting new tokens.\n     */\n    function finishMinting() public canMint onlyOwner {\n        _mintingFinished = true;\n\n        emit MintFinished();\n    }\n\n    /**\n     * @dev Function to enable transfers.\n     */\n    function enableTransfer() public onlyOwner {\n        _transferEnabled = true;\n\n        emit TransferEnabled();\n    }\n\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Capped) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourcePath": "@vittominacori/erc20-token/contracts/ERC20Base.sol",
  "ast": {
    "absolutePath": "@vittominacori/erc20-token/contracts/ERC20Base.sol",
    "exportedSymbols": {
      "AccessControl": [
        1276
      ],
      "Address": [
        2784
      ],
      "Context": [
        993
      ],
      "ERC1363": [
        3943
      ],
      "ERC165": [
        1442
      ],
      "ERC165Checker": [
        1614
      ],
      "ERC20": [
        2325
      ],
      "ERC20Base": [
        3594
      ],
      "ERC20Burnable": [
        2384
      ],
      "ERC20Capped": [
        2462
      ],
      "EnumerableSet": [
        3264
      ],
      "IERC1363": [
        4023
      ],
      "IERC1363Receiver": [
        4041
      ],
      "IERC1363Spender": [
        4057
      ],
      "IERC165": [
        1626
      ],
      "IERC20": [
        2540
      ],
      "Ownable": [
        1385
      ],
      "Roles": [
        3658
      ],
      "SafeMath": [
        1822
      ],
      "TokenRecover": [
        4085
      ]
    },
    "id": 3595,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3356,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "id": 3357,
        "nodeType": "ImportDirective",
        "scope": 3595,
        "sourceUnit": 2463,
        "src": "58:61:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 3358,
        "nodeType": "ImportDirective",
        "scope": 3595,
        "sourceUnit": 2385,
        "src": "120:63:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "erc-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "file": "erc-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "id": 3359,
        "nodeType": "ImportDirective",
        "scope": 3595,
        "sourceUnit": 3944,
        "src": "184:63:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "eth-token-recover/contracts/TokenRecover.sol",
        "file": "eth-token-recover/contracts/TokenRecover.sol",
        "id": 3360,
        "nodeType": "ImportDirective",
        "scope": 3595,
        "sourceUnit": 4086,
        "src": "248:54:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@vittominacori/erc20-token/contracts/access/Roles.sol",
        "file": "./access/Roles.sol",
        "id": 3361,
        "nodeType": "ImportDirective",
        "scope": 3595,
        "sourceUnit": 3659,
        "src": "303:28:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3363,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2462,
              "src": "487:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$2462",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 3364,
            "nodeType": "InheritanceSpecifier",
            "src": "487:11:18"
          },
          {
            "baseName": {
              "id": 3365,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2384,
              "src": "500:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$2384",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 3366,
            "nodeType": "InheritanceSpecifier",
            "src": "500:13:18"
          },
          {
            "baseName": {
              "id": 3367,
              "name": "ERC1363",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3943,
              "src": "515:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1363_$3943",
                "typeString": "contract ERC1363"
              }
            },
            "id": 3368,
            "nodeType": "InheritanceSpecifier",
            "src": "515:7:18"
          },
          {
            "baseName": {
              "id": 3369,
              "name": "Roles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3658,
              "src": "524:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Roles_$3658",
                "typeString": "contract Roles"
              }
            },
            "id": 3370,
            "nodeType": "InheritanceSpecifier",
            "src": "524:5:18"
          },
          {
            "baseName": {
              "id": 3371,
              "name": "TokenRecover",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4085,
              "src": "531:12:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenRecover_$4085",
                "typeString": "contract TokenRecover"
              }
            },
            "id": 3372,
            "nodeType": "InheritanceSpecifier",
            "src": "531:12:18"
          }
        ],
        "contractDependencies": [
          993,
          1276,
          1385,
          1442,
          1626,
          2325,
          2384,
          2462,
          2540,
          3658,
          3943,
          4023,
          4085
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3362,
          "nodeType": "StructuredDocumentation",
          "src": "333:131:18",
          "text": " @title ERC20Base\n @author Vittorio Minacori (https://github.com/vittominacori)\n @dev Implementation of the ERC20Base"
        },
        "fullyImplemented": true,
        "id": 3594,
        "linearizedBaseContracts": [
          3594,
          4085,
          1385,
          3658,
          1276,
          3943,
          1442,
          4023,
          1626,
          2384,
          2462,
          2325,
          2540,
          993
        ],
        "name": "ERC20Base",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3375,
            "mutability": "mutable",
            "name": "_mintingFinished",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "591:37:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3373,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "591:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3374,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "623:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3378,
            "mutability": "mutable",
            "name": "_transferEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 3594,
            "src": "675:37:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3376,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "675:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3377,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "707:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3379,
              "nodeType": "StructuredDocumentation",
              "src": "719:53:18",
              "text": " @dev Emitted during finish minting"
            },
            "id": 3381,
            "name": "MintFinished",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:18"
            },
            "src": "777:21:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3382,
              "nodeType": "StructuredDocumentation",
              "src": "804:56:18",
              "text": " @dev Emitted during transfer enabling"
            },
            "id": 3384,
            "name": "TransferEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:18"
            },
            "src": "865:24:18"
          },
          {
            "body": {
              "id": 3394,
              "nodeType": "Block",
              "src": "993:88:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1011:17:18",
                        "subExpression": {
                          "id": 3388,
                          "name": "_mintingFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3375,
                          "src": "1012:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230426173653a206d696e74696e672069732066696e6973686564",
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1030:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c6dcef62ac17c027b55c3549c0b638efb9e278812b840c5ee3a15f98489b60",
                          "typeString": "literal_string \"ERC20Base: minting is finished\""
                        },
                        "value": "ERC20Base: minting is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c6dcef62ac17c027b55c3549c0b638efb9e278812b840c5ee3a15f98489b60",
                          "typeString": "literal_string \"ERC20Base: minting is finished\""
                        }
                      ],
                      "id": 3387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1003:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:60:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3392,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:60:18"
                },
                {
                  "id": 3393,
                  "nodeType": "PlaceholderStatement",
                  "src": "1073:1:18"
                }
              ]
            },
            "documentation": {
              "id": 3385,
              "nodeType": "StructuredDocumentation",
              "src": "895:74:18",
              "text": " @dev Tokens can be minted only before minting finished."
            },
            "id": 3395,
            "name": "canMint",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:2:18"
            },
            "src": "974:107:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3411,
              "nodeType": "Block",
              "src": "1237:197:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3401,
                          "name": "_transferEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3378,
                          "src": "1268:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3403,
                              "name": "OPERATOR_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3609,
                              "src": "1296:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 3404,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3398,
                              "src": "1311:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3402,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "1288:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 3405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:28:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1268:48:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230426173653a207472616e73666572206973206e6f7420656e61626c6564206f722066726f6d20646f6573206e6f74206861766520746865204f50455241544f5220726f6c65",
                        "id": 3407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:76:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da1c42d1d02279a1dd86b17a6b552f3ac4ba3c316dff5077fa057fce761b8e5a",
                          "typeString": "literal_string \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\""
                        },
                        "value": "ERC20Base: transfer is not enabled or from does not have the OPERATOR role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da1c42d1d02279a1dd86b17a6b552f3ac4ba3c316dff5077fa057fce761b8e5a",
                          "typeString": "literal_string \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\""
                        }
                      ],
                      "id": 3400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1247:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:169:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3409,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:169:18"
                },
                {
                  "id": 3410,
                  "nodeType": "PlaceholderStatement",
                  "src": "1426:1:18"
                }
              ]
            },
            "documentation": {
              "id": 3396,
              "nodeType": "StructuredDocumentation",
              "src": "1087:110:18",
              "text": " @dev Tokens can be moved only after if transfer enabled or if you are an approved operator."
            },
            "id": 3412,
            "name": "canTransfer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3398,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3412,
                  "src": "1223:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1222:14:18"
            },
            "src": "1202:232:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3456,
              "nodeType": "Block",
              "src": "2074:200:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3436,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3419,
                        "src": "2099:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 3435,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2313,
                      "src": "2084:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2084:24:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3438,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:24:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3439,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3423,
                      "src": "2123:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2139:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2123:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3449,
                  "nodeType": "IfStatement",
                  "src": "2119:77:18",
                  "trueBody": {
                    "id": 3448,
                    "nodeType": "Block",
                    "src": "2142:54:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3443,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1321,
                                "src": "2162:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2162:7:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3445,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3423,
                              "src": "2171:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3442,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2201,
                            "src": "2156:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2156:29:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3447,
                        "nodeType": "ExpressionStatement",
                        "src": "2156:29:18"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 3450,
                    "name": "transferEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3425,
                    "src": "2210:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3455,
                  "nodeType": "IfStatement",
                  "src": "2206:62:18",
                  "trueBody": {
                    "id": 3454,
                    "nodeType": "Block",
                    "src": "2227:41:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3451,
                            "name": "enableTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3571,
                            "src": "2241:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2241:16:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3453,
                        "nodeType": "ExpressionStatement",
                        "src": "2241:16:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3413,
              "nodeType": "StructuredDocumentation",
              "src": "1440:388:18",
              "text": " @param name Name of the token\n @param symbol A symbol to be used as ticker\n @param decimals Number of decimals. All the operations are done using the smallest and indivisible token unit\n @param cap Maximum number of tokens mintable\n @param initialSupply Initial token supply\n @param transferEnabled If transfer is enabled on token creation"
            },
            "id": 3457,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3428,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3421,
                    "src": "2035:3:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3429,
                "modifierName": {
                  "id": 3427,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2462,
                  "src": "2023:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$2462_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2023:16:18"
              },
              {
                "arguments": [
                  {
                    "id": 3431,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3415,
                    "src": "2056:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3432,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3417,
                    "src": "2062:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3433,
                "modifierName": {
                  "id": 3430,
                  "name": "ERC1363",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3943,
                  "src": "2048:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1363_$3943_$",
                    "typeString": "type(contract ERC1363)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2048:21:18"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3415,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "1854:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3414,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3417,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "1882:20:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3416,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3419,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "1912:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3418,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3421,
                  "mutability": "mutable",
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "1936:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3423,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "1957:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3425,
                  "mutability": "mutable",
                  "name": "transferEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "1988:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1844:170:18"
            },
            "returnParameters": {
              "id": 3434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:0:18"
            },
            "scope": 3594,
            "src": "1833:441:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3465,
              "nodeType": "Block",
              "src": "2396:40:18",
              "statements": [
                {
                  "expression": {
                    "id": 3463,
                    "name": "_mintingFinished",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3375,
                    "src": "2413:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3462,
                  "id": 3464,
                  "nodeType": "Return",
                  "src": "2406:23:18"
                }
              ]
            },
            "documentation": {
              "id": 3458,
              "nodeType": "StructuredDocumentation",
              "src": "2280:57:18",
              "text": " @return if minting is finished or not."
            },
            "functionSelector": "05d2035b",
            "id": 3466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintingFinished",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:2:18"
            },
            "returnParameters": {
              "id": 3462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3466,
                  "src": "2390:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:6:18"
            },
            "scope": 3594,
            "src": "2342:94:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3474,
              "nodeType": "Block",
              "src": "2558:40:18",
              "statements": [
                {
                  "expression": {
                    "id": 3472,
                    "name": "_transferEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3378,
                    "src": "2575:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3471,
                  "id": 3473,
                  "nodeType": "Return",
                  "src": "2568:23:18"
                }
              ]
            },
            "documentation": {
              "id": 3467,
              "nodeType": "StructuredDocumentation",
              "src": "2442:57:18",
              "text": " @return if transfer is enabled or not."
            },
            "functionSelector": "4cd412d5",
            "id": 3475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:2:18"
            },
            "returnParameters": {
              "id": 3471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3470,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3475,
                  "src": "2552:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:18"
            },
            "scope": 3594,
            "src": "2504:94:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3492,
              "nodeType": "Block",
              "src": "2838:33:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3488,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3478,
                        "src": "2854:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3489,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3480,
                        "src": "2858:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3487,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2201,
                      "src": "2848:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:16:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3491,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:16:18"
                }
              ]
            },
            "documentation": {
              "id": 3476,
              "nodeType": "StructuredDocumentation",
              "src": "2604:162:18",
              "text": " @dev Function to mint tokens.\n @param to The address that will receive the minted tokens\n @param value The amount of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "id": 3493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3483,
                "modifierName": {
                  "id": 3482,
                  "name": "canMint",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3395,
                  "src": "2819:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2819:7:18"
              },
              {
                "id": 3485,
                "modifierName": {
                  "id": 3484,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3644,
                  "src": "2827:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2827:10:18"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3478,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2785:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2785:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3480,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3493,
                  "src": "2797:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2784:27:18"
            },
            "returnParameters": {
              "id": 3486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2838:0:18"
            },
            "scope": 3594,
            "src": "2771:100:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1946
            ],
            "body": {
              "id": 3515,
              "nodeType": "Block",
              "src": "3228:49:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3511,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3496,
                        "src": "3260:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3512,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "3264:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3509,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3245:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$3594",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 3510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1946,
                      "src": "3245:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:25:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3508,
                  "id": 3514,
                  "nodeType": "Return",
                  "src": "3238:32:18"
                }
              ]
            },
            "documentation": {
              "id": 3494,
              "nodeType": "StructuredDocumentation",
              "src": "2877:229:18",
              "text": " @dev Transfer tokens to a specified address.\n @param to The address to transfer to\n @param value The amount to be transferred\n @return A boolean that indicates if the operation was successful."
            },
            "functionSelector": "a9059cbb",
            "id": 3516,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3503,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "3199:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 3504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3199:12:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3505,
                "modifierName": {
                  "id": 3502,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3412,
                  "src": "3187:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:25:18"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3501,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3500,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2325,
                  "src": "3180:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2325",
                    "typeString": "contract ERC20"
                  }
                }
              ],
              "src": "3171:15:18"
            },
            "parameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3496,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3516,
                  "src": "3129:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3516,
                  "src": "3141:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3141:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3128:27:18"
            },
            "returnParameters": {
              "id": 3508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3516,
                  "src": "3222:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3221:6:18"
            },
            "scope": 3594,
            "src": "3111:166:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2023
            ],
            "body": {
              "id": 3540,
              "nodeType": "Block",
              "src": "3740:59:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3535,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "3776:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3536,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3521,
                        "src": "3782:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3537,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3523,
                        "src": "3786:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3533,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3757:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$3594",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 3534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2023,
                      "src": "3757:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 3538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3532,
                  "id": 3539,
                  "nodeType": "Return",
                  "src": "3750:42:18"
                }
              ]
            },
            "documentation": {
              "id": 3517,
              "nodeType": "StructuredDocumentation",
              "src": "3283:325:18",
              "text": " @dev Transfer tokens from one address to another.\n @param from The address which you want to send tokens from\n @param to The address which you want to transfer to\n @param value the amount of tokens to be transferred\n @return A boolean that indicates if the operation was successful."
            },
            "functionSelector": "23b872dd",
            "id": 3541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3528,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3519,
                    "src": "3719:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3529,
                "modifierName": {
                  "id": 3527,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3412,
                  "src": "3707:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3707:17:18"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3526,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3525,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2325,
                  "src": "3700:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2325",
                    "typeString": "contract ERC20"
                  }
                }
              ],
              "src": "3691:15:18"
            },
            "parameters": {
              "id": 3524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3519,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3541,
                  "src": "3635:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3521,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3541,
                  "src": "3649:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3649:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3523,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3541,
                  "src": "3661:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:41:18"
            },
            "returnParameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3541,
                  "src": "3734:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3733:6:18"
            },
            "scope": 3594,
            "src": "3613:186:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3556,
              "nodeType": "Block",
              "src": "3920:70:18",
              "statements": [
                {
                  "expression": {
                    "id": 3551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3549,
                      "name": "_mintingFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3375,
                      "src": "3930:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3949:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3930:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3552,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:23:18"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3553,
                      "name": "MintFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3381,
                      "src": "3969:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:14:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3555,
                  "nodeType": "EmitStatement",
                  "src": "3964:19:18"
                }
              ]
            },
            "documentation": {
              "id": 3542,
              "nodeType": "StructuredDocumentation",
              "src": "3805:60:18",
              "text": " @dev Function to stop minting new tokens."
            },
            "functionSelector": "7d64bcb4",
            "id": 3557,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3545,
                "modifierName": {
                  "id": 3544,
                  "name": "canMint",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3395,
                  "src": "3902:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3902:7:18"
              },
              {
                "id": 3547,
                "modifierName": {
                  "id": 3546,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1334,
                  "src": "3910:9:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3910:9:18"
              }
            ],
            "name": "finishMinting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3892:2:18"
            },
            "returnParameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3920:0:18"
            },
            "scope": 3594,
            "src": "3870:120:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3570,
              "nodeType": "Block",
              "src": "4097:73:18",
              "statements": [
                {
                  "expression": {
                    "id": 3565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3563,
                      "name": "_transferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3378,
                      "src": "4107:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4126:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4107:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3566,
                  "nodeType": "ExpressionStatement",
                  "src": "4107:23:18"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3567,
                      "name": "TransferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3384,
                      "src": "4146:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4146:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3569,
                  "nodeType": "EmitStatement",
                  "src": "4141:22:18"
                }
              ]
            },
            "documentation": {
              "id": 3558,
              "nodeType": "StructuredDocumentation",
              "src": "3996:53:18",
              "text": " @dev Function to enable transfers."
            },
            "functionSelector": "f1b50c1d",
            "id": 3571,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3561,
                "modifierName": {
                  "id": 3560,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1334,
                  "src": "4087:9:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4087:9:18"
              }
            ],
            "name": "enableTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4077:2:18"
            },
            "returnParameters": {
              "id": 3562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4097:0:18"
            },
            "scope": 3594,
            "src": "4054:116:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2324,
              2461
            ],
            "body": {
              "id": 3592,
              "nodeType": "Block",
              "src": "4356:61:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3587,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3574,
                        "src": "4393:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3588,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3576,
                        "src": "4399:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3589,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3578,
                        "src": "4403:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3584,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4366:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$3594",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 3586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2461,
                      "src": "4366:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:44:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "4366:44:18"
                }
              ]
            },
            "documentation": {
              "id": 3572,
              "nodeType": "StructuredDocumentation",
              "src": "4176:57:18",
              "text": " @dev See {ERC20-_beforeTokenTransfer}."
            },
            "id": 3593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3582,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3580,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2325,
                  "src": "4336:5:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$2325",
                    "typeString": "contract ERC20"
                  }
                },
                {
                  "id": 3581,
                  "name": "ERC20Capped",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2462,
                  "src": "4343:11:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Capped_$2462",
                    "typeString": "contract ERC20Capped"
                  }
                }
              ],
              "src": "4327:28:18"
            },
            "parameters": {
              "id": 3579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3574,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "4268:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3576,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "4282:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3578,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3593,
                  "src": "4294:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4267:42:18"
            },
            "returnParameters": {
              "id": 3583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4356:0:18"
            },
            "scope": 3594,
            "src": "4238:179:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3595,
        "src": "465:3954:18"
      }
    ],
    "src": "33:4387:18"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@vittominacori/erc20-token/contracts/ERC20Base.sol",
      "exportedSymbols": {
        "AccessControl": [
          1276
        ],
        "Address": [
          2784
        ],
        "Context": [
          993
        ],
        "ERC1363": [
          3943
        ],
        "ERC165": [
          1442
        ],
        "ERC165Checker": [
          1614
        ],
        "ERC20": [
          2325
        ],
        "ERC20Base": [
          3594
        ],
        "ERC20Burnable": [
          2384
        ],
        "ERC20Capped": [
          2462
        ],
        "EnumerableSet": [
          3264
        ],
        "IERC1363": [
          4023
        ],
        "IERC1363Receiver": [
          4041
        ],
        "IERC1363Spender": [
          4057
        ],
        "IERC165": [
          1626
        ],
        "IERC20": [
          2540
        ],
        "Ownable": [
          1385
        ],
        "Roles": [
          3658
        ],
        "SafeMath": [
          1822
        ],
        "TokenRecover": [
          4085
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 3356,
        "name": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "attributes": {
          "SourceUnit": 2463,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
          "scope": 3595,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3357,
        "name": "ImportDirective",
        "src": "58:61:18"
      },
      {
        "attributes": {
          "SourceUnit": 2385,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
          "scope": 3595,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3358,
        "name": "ImportDirective",
        "src": "120:63:18"
      },
      {
        "attributes": {
          "SourceUnit": 3944,
          "absolutePath": "erc-payable-token/contracts/token/ERC1363/ERC1363.sol",
          "file": "erc-payable-token/contracts/token/ERC1363/ERC1363.sol",
          "scope": 3595,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3359,
        "name": "ImportDirective",
        "src": "184:63:18"
      },
      {
        "attributes": {
          "SourceUnit": 4086,
          "absolutePath": "eth-token-recover/contracts/TokenRecover.sol",
          "file": "eth-token-recover/contracts/TokenRecover.sol",
          "scope": 3595,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3360,
        "name": "ImportDirective",
        "src": "248:54:18"
      },
      {
        "attributes": {
          "SourceUnit": 3659,
          "absolutePath": "@vittominacori/erc20-token/contracts/access/Roles.sol",
          "file": "./access/Roles.sol",
          "scope": 3595,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3361,
        "name": "ImportDirective",
        "src": "303:28:18"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            993,
            1276,
            1385,
            1442,
            1626,
            2325,
            2384,
            2462,
            2540,
            3658,
            3943,
            4023,
            4085
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3594,
            4085,
            1385,
            3658,
            1276,
            3943,
            1442,
            4023,
            1626,
            2384,
            2462,
            2325,
            2540,
            993
          ],
          "name": "ERC20Base",
          "scope": 3595
        },
        "children": [
          {
            "attributes": {
              "text": " @title ERC20Base\n @author Vittorio Minacori (https://github.com/vittominacori)\n @dev Implementation of the ERC20Base"
            },
            "id": 3362,
            "name": "StructuredDocumentation",
            "src": "333:131:18"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20Capped",
                  "referencedDeclaration": 2462,
                  "type": "contract ERC20Capped"
                },
                "id": 3363,
                "name": "UserDefinedTypeName",
                "src": "487:11:18"
              }
            ],
            "id": 3364,
            "name": "InheritanceSpecifier",
            "src": "487:11:18"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20Burnable",
                  "referencedDeclaration": 2384,
                  "type": "contract ERC20Burnable"
                },
                "id": 3365,
                "name": "UserDefinedTypeName",
                "src": "500:13:18"
              }
            ],
            "id": 3366,
            "name": "InheritanceSpecifier",
            "src": "500:13:18"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC1363",
                  "referencedDeclaration": 3943,
                  "type": "contract ERC1363"
                },
                "id": 3367,
                "name": "UserDefinedTypeName",
                "src": "515:7:18"
              }
            ],
            "id": 3368,
            "name": "InheritanceSpecifier",
            "src": "515:7:18"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Roles",
                  "referencedDeclaration": 3658,
                  "type": "contract Roles"
                },
                "id": 3369,
                "name": "UserDefinedTypeName",
                "src": "524:5:18"
              }
            ],
            "id": 3370,
            "name": "InheritanceSpecifier",
            "src": "524:5:18"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "TokenRecover",
                  "referencedDeclaration": 4085,
                  "type": "contract TokenRecover"
                },
                "id": 3371,
                "name": "UserDefinedTypeName",
                "src": "531:12:18"
              }
            ],
            "id": 3372,
            "name": "InheritanceSpecifier",
            "src": "531:12:18"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_mintingFinished",
              "scope": 3594,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 3373,
                "name": "ElementaryTypeName",
                "src": "591:4:18"
              },
              {
                "attributes": {
                  "hexvalue": "66616c7365",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "bool",
                  "type": "bool",
                  "value": "false"
                },
                "id": 3374,
                "name": "Literal",
                "src": "623:5:18"
              }
            ],
            "id": 3375,
            "name": "VariableDeclaration",
            "src": "591:37:18"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_transferEnabled",
              "scope": 3594,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 3376,
                "name": "ElementaryTypeName",
                "src": "675:4:18"
              },
              {
                "attributes": {
                  "hexvalue": "66616c7365",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "bool",
                  "type": "bool",
                  "value": "false"
                },
                "id": 3377,
                "name": "Literal",
                "src": "707:5:18"
              }
            ],
            "id": 3378,
            "name": "VariableDeclaration",
            "src": "675:37:18"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "MintFinished"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Emitted during finish minting"
                },
                "id": 3379,
                "name": "StructuredDocumentation",
                "src": "719:53:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3380,
                "name": "ParameterList",
                "src": "795:2:18"
              }
            ],
            "id": 3381,
            "name": "EventDefinition",
            "src": "777:21:18"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "TransferEnabled"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Emitted during transfer enabling"
                },
                "id": 3382,
                "name": "StructuredDocumentation",
                "src": "804:56:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3383,
                "name": "ParameterList",
                "src": "886:2:18"
              }
            ],
            "id": 3384,
            "name": "EventDefinition",
            "src": "865:24:18"
          },
          {
            "attributes": {
              "name": "canMint",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Tokens can be minted only before minting finished."
                },
                "id": 3385,
                "name": "StructuredDocumentation",
                "src": "895:74:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3386,
                "name": "ParameterList",
                "src": "990:2:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_99c6dcef62ac17c027b55c3549c0b638efb9e278812b840c5ee3a15f98489b60",
                                  "typeString": "literal_string \"ERC20Base: minting is finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3387,
                            "name": "Identifier",
                            "src": "1003:7:18"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3375,
                                  "type": "bool",
                                  "value": "_mintingFinished"
                                },
                                "id": 3388,
                                "name": "Identifier",
                                "src": "1012:16:18"
                              }
                            ],
                            "id": 3389,
                            "name": "UnaryOperation",
                            "src": "1011:17:18"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4552433230426173653a206d696e74696e672069732066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20Base: minting is finished\"",
                              "value": "ERC20Base: minting is finished"
                            },
                            "id": 3390,
                            "name": "Literal",
                            "src": "1030:32:18"
                          }
                        ],
                        "id": 3391,
                        "name": "FunctionCall",
                        "src": "1003:60:18"
                      }
                    ],
                    "id": 3392,
                    "name": "ExpressionStatement",
                    "src": "1003:60:18"
                  },
                  {
                    "id": 3393,
                    "name": "PlaceholderStatement",
                    "src": "1073:1:18"
                  }
                ],
                "id": 3394,
                "name": "Block",
                "src": "993:88:18"
              }
            ],
            "id": 3395,
            "name": "ModifierDefinition",
            "src": "974:107:18"
          },
          {
            "attributes": {
              "name": "canTransfer",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Tokens can be moved only after if transfer enabled or if you are an approved operator."
                },
                "id": 3396,
                "name": "StructuredDocumentation",
                "src": "1087:110:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 3412,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3397,
                        "name": "ElementaryTypeName",
                        "src": "1223:7:18"
                      }
                    ],
                    "id": 3398,
                    "name": "VariableDeclaration",
                    "src": "1223:12:18"
                  }
                ],
                "id": 3399,
                "name": "ParameterList",
                "src": "1222:14:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_da1c42d1d02279a1dd86b17a6b552f3ac4ba3c316dff5077fa057fce761b8e5a",
                                  "typeString": "literal_string \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3400,
                            "name": "Identifier",
                            "src": "1247:7:18"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "||",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3378,
                                  "type": "bool",
                                  "value": "_transferEnabled"
                                },
                                "id": 3401,
                                "name": "Identifier",
                                "src": "1268:16:18"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1065,
                                      "type": "function (bytes32,address) view returns (bool)",
                                      "value": "hasRole"
                                    },
                                    "id": 3402,
                                    "name": "Identifier",
                                    "src": "1288:7:18"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3609,
                                      "type": "bytes32",
                                      "value": "OPERATOR_ROLE"
                                    },
                                    "id": 3403,
                                    "name": "Identifier",
                                    "src": "1296:13:18"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3398,
                                      "type": "address",
                                      "value": "from"
                                    },
                                    "id": 3404,
                                    "name": "Identifier",
                                    "src": "1311:4:18"
                                  }
                                ],
                                "id": 3405,
                                "name": "FunctionCall",
                                "src": "1288:28:18"
                              }
                            ],
                            "id": 3406,
                            "name": "BinaryOperation",
                            "src": "1268:48:18"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4552433230426173653a207472616e73666572206973206e6f7420656e61626c6564206f722066726f6d20646f6573206e6f74206861766520746865204f50455241544f5220726f6c65",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\"",
                              "value": "ERC20Base: transfer is not enabled or from does not have the OPERATOR role"
                            },
                            "id": 3407,
                            "name": "Literal",
                            "src": "1330:76:18"
                          }
                        ],
                        "id": 3408,
                        "name": "FunctionCall",
                        "src": "1247:169:18"
                      }
                    ],
                    "id": 3409,
                    "name": "ExpressionStatement",
                    "src": "1247:169:18"
                  },
                  {
                    "id": 3410,
                    "name": "PlaceholderStatement",
                    "src": "1426:1:18"
                  }
                ],
                "id": 3411,
                "name": "Block",
                "src": "1237:197:18"
              }
            ],
            "id": 3412,
            "name": "ModifierDefinition",
            "src": "1202:232:18"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 3594,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @param name Name of the token\n @param symbol A symbol to be used as ticker\n @param decimals Number of decimals. All the operations are done using the smallest and indivisible token unit\n @param cap Maximum number of tokens mintable\n @param initialSupply Initial token supply\n @param transferEnabled If transfer is enabled on token creation"
                },
                "id": 3413,
                "name": "StructuredDocumentation",
                "src": "1440:388:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "scope": 3457,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 3414,
                        "name": "ElementaryTypeName",
                        "src": "1854:6:18"
                      }
                    ],
                    "id": 3415,
                    "name": "VariableDeclaration",
                    "src": "1854:18:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "scope": 3457,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 3416,
                        "name": "ElementaryTypeName",
                        "src": "1882:6:18"
                      }
                    ],
                    "id": 3417,
                    "name": "VariableDeclaration",
                    "src": "1882:20:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "decimals",
                      "scope": 3457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 3418,
                        "name": "ElementaryTypeName",
                        "src": "1912:5:18"
                      }
                    ],
                    "id": 3419,
                    "name": "VariableDeclaration",
                    "src": "1912:14:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "cap",
                      "scope": 3457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3420,
                        "name": "ElementaryTypeName",
                        "src": "1936:7:18"
                      }
                    ],
                    "id": 3421,
                    "name": "VariableDeclaration",
                    "src": "1936:11:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "initialSupply",
                      "scope": 3457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3422,
                        "name": "ElementaryTypeName",
                        "src": "1957:7:18"
                      }
                    ],
                    "id": 3423,
                    "name": "VariableDeclaration",
                    "src": "1957:21:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "transferEnabled",
                      "scope": 3457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3424,
                        "name": "ElementaryTypeName",
                        "src": "1988:4:18"
                      }
                    ],
                    "id": 3425,
                    "name": "VariableDeclaration",
                    "src": "1988:20:18"
                  }
                ],
                "id": 3426,
                "name": "ParameterList",
                "src": "1844:170:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3434,
                "name": "ParameterList",
                "src": "2074:0:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2462,
                      "type": "type(contract ERC20Capped)",
                      "value": "ERC20Capped"
                    },
                    "id": 3427,
                    "name": "Identifier",
                    "src": "2023:11:18"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3421,
                      "type": "uint256",
                      "value": "cap"
                    },
                    "id": 3428,
                    "name": "Identifier",
                    "src": "2035:3:18"
                  }
                ],
                "id": 3429,
                "name": "ModifierInvocation",
                "src": "2023:16:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3943,
                      "type": "type(contract ERC1363)",
                      "value": "ERC1363"
                    },
                    "id": 3430,
                    "name": "Identifier",
                    "src": "2048:7:18"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3415,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 3431,
                    "name": "Identifier",
                    "src": "2056:4:18"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3417,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 3432,
                    "name": "Identifier",
                    "src": "2062:6:18"
                  }
                ],
                "id": 3433,
                "name": "ModifierInvocation",
                "src": "2048:21:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2313,
                              "type": "function (uint8)",
                              "value": "_setupDecimals"
                            },
                            "id": 3435,
                            "name": "Identifier",
                            "src": "2084:14:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3419,
                              "type": "uint8",
                              "value": "decimals"
                            },
                            "id": 3436,
                            "name": "Identifier",
                            "src": "2099:8:18"
                          }
                        ],
                        "id": 3437,
                        "name": "FunctionCall",
                        "src": "2084:24:18"
                      }
                    ],
                    "id": 3438,
                    "name": "ExpressionStatement",
                    "src": "2084:24:18"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3423,
                              "type": "uint256",
                              "value": "initialSupply"
                            },
                            "id": 3439,
                            "name": "Identifier",
                            "src": "2123:13:18"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 3440,
                            "name": "Literal",
                            "src": "2139:1:18"
                          }
                        ],
                        "id": 3441,
                        "name": "BinaryOperation",
                        "src": "2123:17:18"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2201,
                                      "type": "function (address,uint256)",
                                      "value": "_mint"
                                    },
                                    "id": 3442,
                                    "name": "Identifier",
                                    "src": "2156:5:18"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1321,
                                          "type": "function () view returns (address)",
                                          "value": "owner"
                                        },
                                        "id": 3443,
                                        "name": "Identifier",
                                        "src": "2162:5:18"
                                      }
                                    ],
                                    "id": 3444,
                                    "name": "FunctionCall",
                                    "src": "2162:7:18"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3423,
                                      "type": "uint256",
                                      "value": "initialSupply"
                                    },
                                    "id": 3445,
                                    "name": "Identifier",
                                    "src": "2171:13:18"
                                  }
                                ],
                                "id": 3446,
                                "name": "FunctionCall",
                                "src": "2156:29:18"
                              }
                            ],
                            "id": 3447,
                            "name": "ExpressionStatement",
                            "src": "2156:29:18"
                          }
                        ],
                        "id": 3448,
                        "name": "Block",
                        "src": "2142:54:18"
                      }
                    ],
                    "id": 3449,
                    "name": "IfStatement",
                    "src": "2119:77:18"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 3425,
                          "type": "bool",
                          "value": "transferEnabled"
                        },
                        "id": 3450,
                        "name": "Identifier",
                        "src": "2210:15:18"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3571,
                                      "type": "function ()",
                                      "value": "enableTransfer"
                                    },
                                    "id": 3451,
                                    "name": "Identifier",
                                    "src": "2241:14:18"
                                  }
                                ],
                                "id": 3452,
                                "name": "FunctionCall",
                                "src": "2241:16:18"
                              }
                            ],
                            "id": 3453,
                            "name": "ExpressionStatement",
                            "src": "2241:16:18"
                          }
                        ],
                        "id": 3454,
                        "name": "Block",
                        "src": "2227:41:18"
                      }
                    ],
                    "id": 3455,
                    "name": "IfStatement",
                    "src": "2206:62:18"
                  }
                ],
                "id": 3456,
                "name": "Block",
                "src": "2074:200:18"
              }
            ],
            "id": 3457,
            "name": "FunctionDefinition",
            "src": "1833:441:18"
          },
          {
            "attributes": {
              "functionSelector": "05d2035b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintingFinished",
              "scope": 3594,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @return if minting is finished or not."
                },
                "id": 3458,
                "name": "StructuredDocumentation",
                "src": "2280:57:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3459,
                "name": "ParameterList",
                "src": "2366:2:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3466,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3460,
                        "name": "ElementaryTypeName",
                        "src": "2390:4:18"
                      }
                    ],
                    "id": 3461,
                    "name": "VariableDeclaration",
                    "src": "2390:4:18"
                  }
                ],
                "id": 3462,
                "name": "ParameterList",
                "src": "2389:6:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 3462
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 3375,
                          "type": "bool",
                          "value": "_mintingFinished"
                        },
                        "id": 3463,
                        "name": "Identifier",
                        "src": "2413:16:18"
                      }
                    ],
                    "id": 3464,
                    "name": "Return",
                    "src": "2406:23:18"
                  }
                ],
                "id": 3465,
                "name": "Block",
                "src": "2396:40:18"
              }
            ],
            "id": 3466,
            "name": "FunctionDefinition",
            "src": "2342:94:18"
          },
          {
            "attributes": {
              "functionSelector": "4cd412d5",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transferEnabled",
              "scope": 3594,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @return if transfer is enabled or not."
                },
                "id": 3467,
                "name": "StructuredDocumentation",
                "src": "2442:57:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3468,
                "name": "ParameterList",
                "src": "2528:2:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3475,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3469,
                        "name": "ElementaryTypeName",
                        "src": "2552:4:18"
                      }
                    ],
                    "id": 3470,
                    "name": "VariableDeclaration",
                    "src": "2552:4:18"
                  }
                ],
                "id": 3471,
                "name": "ParameterList",
                "src": "2551:6:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 3471
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 3378,
                          "type": "bool",
                          "value": "_transferEnabled"
                        },
                        "id": 3472,
                        "name": "Identifier",
                        "src": "2575:16:18"
                      }
                    ],
                    "id": 3473,
                    "name": "Return",
                    "src": "2568:23:18"
                  }
                ],
                "id": 3474,
                "name": "Block",
                "src": "2558:40:18"
              }
            ],
            "id": 3475,
            "name": "FunctionDefinition",
            "src": "2504:94:18"
          },
          {
            "attributes": {
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "scope": 3594,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Function to mint tokens.\n @param to The address that will receive the minted tokens\n @param value The amount of tokens to mint"
                },
                "id": 3476,
                "name": "StructuredDocumentation",
                "src": "2604:162:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 3493,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3477,
                        "name": "ElementaryTypeName",
                        "src": "2785:7:18"
                      }
                    ],
                    "id": 3478,
                    "name": "VariableDeclaration",
                    "src": "2785:10:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 3493,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3479,
                        "name": "ElementaryTypeName",
                        "src": "2797:7:18"
                      }
                    ],
                    "id": 3480,
                    "name": "VariableDeclaration",
                    "src": "2797:13:18"
                  }
                ],
                "id": 3481,
                "name": "ParameterList",
                "src": "2784:27:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3486,
                "name": "ParameterList",
                "src": "2838:0:18"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3395,
                      "type": "modifier ()",
                      "value": "canMint"
                    },
                    "id": 3482,
                    "name": "Identifier",
                    "src": "2819:7:18"
                  }
                ],
                "id": 3483,
                "name": "ModifierInvocation",
                "src": "2819:7:18"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3644,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 3484,
                    "name": "Identifier",
                    "src": "2827:10:18"
                  }
                ],
                "id": 3485,
                "name": "ModifierInvocation",
                "src": "2827:10:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2201,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 3487,
                            "name": "Identifier",
                            "src": "2848:5:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3478,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 3488,
                            "name": "Identifier",
                            "src": "2854:2:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3480,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 3489,
                            "name": "Identifier",
                            "src": "2858:5:18"
                          }
                        ],
                        "id": 3490,
                        "name": "FunctionCall",
                        "src": "2848:16:18"
                      }
                    ],
                    "id": 3491,
                    "name": "ExpressionStatement",
                    "src": "2848:16:18"
                  }
                ],
                "id": 3492,
                "name": "Block",
                "src": "2838:33:18"
              }
            ],
            "id": 3493,
            "name": "FunctionDefinition",
            "src": "2771:100:18"
          },
          {
            "attributes": {
              "baseFunctions": [
                1946
              ],
              "functionSelector": "a9059cbb",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "transfer",
              "scope": 3594,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Transfer tokens to a specified address.\n @param to The address to transfer to\n @param value The amount to be transferred\n @return A boolean that indicates if the operation was successful."
                },
                "id": 3494,
                "name": "StructuredDocumentation",
                "src": "2877:229:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "name": "ERC20",
                      "referencedDeclaration": 2325,
                      "type": "contract ERC20"
                    },
                    "id": 3500,
                    "name": "UserDefinedTypeName",
                    "src": "3180:5:18"
                  }
                ],
                "id": 3501,
                "name": "OverrideSpecifier",
                "src": "3171:15:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 3516,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3495,
                        "name": "ElementaryTypeName",
                        "src": "3129:7:18"
                      }
                    ],
                    "id": 3496,
                    "name": "VariableDeclaration",
                    "src": "3129:10:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 3516,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3497,
                        "name": "ElementaryTypeName",
                        "src": "3141:7:18"
                      }
                    ],
                    "id": 3498,
                    "name": "VariableDeclaration",
                    "src": "3141:13:18"
                  }
                ],
                "id": 3499,
                "name": "ParameterList",
                "src": "3128:27:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3516,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3506,
                        "name": "ElementaryTypeName",
                        "src": "3222:4:18"
                      }
                    ],
                    "id": 3507,
                    "name": "VariableDeclaration",
                    "src": "3222:4:18"
                  }
                ],
                "id": 3508,
                "name": "ParameterList",
                "src": "3221:6:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3412,
                      "type": "modifier (address)",
                      "value": "canTransfer"
                    },
                    "id": 3502,
                    "name": "Identifier",
                    "src": "3187:11:18"
                  },
                  {
                    "attributes": {
                      "arguments": [
                        null
                      ],
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "isStructConstructorCall": false,
                      "lValueRequested": false,
                      "names": [
                        null
                      ],
                      "tryCall": false,
                      "type": "address payable",
                      "type_conversion": false
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": [
                            null
                          ],
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 981,
                          "type": "function () view returns (address payable)",
                          "value": "_msgSender"
                        },
                        "id": 3503,
                        "name": "Identifier",
                        "src": "3199:10:18"
                      }
                    ],
                    "id": 3504,
                    "name": "FunctionCall",
                    "src": "3199:12:18"
                  }
                ],
                "id": 3505,
                "name": "ModifierInvocation",
                "src": "3187:25:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 3508
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": 1946,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967271,
                                  "type": "contract super ERC20Base",
                                  "value": "super"
                                },
                                "id": 3509,
                                "name": "Identifier",
                                "src": "3245:5:18"
                              }
                            ],
                            "id": 3510,
                            "name": "MemberAccess",
                            "src": "3245:14:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3496,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 3511,
                            "name": "Identifier",
                            "src": "3260:2:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3498,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 3512,
                            "name": "Identifier",
                            "src": "3264:5:18"
                          }
                        ],
                        "id": 3513,
                        "name": "FunctionCall",
                        "src": "3245:25:18"
                      }
                    ],
                    "id": 3514,
                    "name": "Return",
                    "src": "3238:32:18"
                  }
                ],
                "id": 3515,
                "name": "Block",
                "src": "3228:49:18"
              }
            ],
            "id": 3516,
            "name": "FunctionDefinition",
            "src": "3111:166:18"
          },
          {
            "attributes": {
              "baseFunctions": [
                2023
              ],
              "functionSelector": "23b872dd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "transferFrom",
              "scope": 3594,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Transfer tokens from one address to another.\n @param from The address which you want to send tokens from\n @param to The address which you want to transfer to\n @param value the amount of tokens to be transferred\n @return A boolean that indicates if the operation was successful."
                },
                "id": 3517,
                "name": "StructuredDocumentation",
                "src": "3283:325:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "name": "ERC20",
                      "referencedDeclaration": 2325,
                      "type": "contract ERC20"
                    },
                    "id": 3525,
                    "name": "UserDefinedTypeName",
                    "src": "3700:5:18"
                  }
                ],
                "id": 3526,
                "name": "OverrideSpecifier",
                "src": "3691:15:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 3541,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3518,
                        "name": "ElementaryTypeName",
                        "src": "3635:7:18"
                      }
                    ],
                    "id": 3519,
                    "name": "VariableDeclaration",
                    "src": "3635:12:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 3541,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3520,
                        "name": "ElementaryTypeName",
                        "src": "3649:7:18"
                      }
                    ],
                    "id": 3521,
                    "name": "VariableDeclaration",
                    "src": "3649:10:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 3541,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3522,
                        "name": "ElementaryTypeName",
                        "src": "3661:7:18"
                      }
                    ],
                    "id": 3523,
                    "name": "VariableDeclaration",
                    "src": "3661:13:18"
                  }
                ],
                "id": 3524,
                "name": "ParameterList",
                "src": "3634:41:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 3541,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3530,
                        "name": "ElementaryTypeName",
                        "src": "3734:4:18"
                      }
                    ],
                    "id": 3531,
                    "name": "VariableDeclaration",
                    "src": "3734:4:18"
                  }
                ],
                "id": 3532,
                "name": "ParameterList",
                "src": "3733:6:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3412,
                      "type": "modifier (address)",
                      "value": "canTransfer"
                    },
                    "id": 3527,
                    "name": "Identifier",
                    "src": "3707:11:18"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3519,
                      "type": "address",
                      "value": "from"
                    },
                    "id": 3528,
                    "name": "Identifier",
                    "src": "3719:4:18"
                  }
                ],
                "id": 3529,
                "name": "ModifierInvocation",
                "src": "3707:17:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 3532
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 2023,
                              "type": "function (address,address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967271,
                                  "type": "contract super ERC20Base",
                                  "value": "super"
                                },
                                "id": 3533,
                                "name": "Identifier",
                                "src": "3757:5:18"
                              }
                            ],
                            "id": 3534,
                            "name": "MemberAccess",
                            "src": "3757:18:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3519,
                              "type": "address",
                              "value": "from"
                            },
                            "id": 3535,
                            "name": "Identifier",
                            "src": "3776:4:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3521,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 3536,
                            "name": "Identifier",
                            "src": "3782:2:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3523,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 3537,
                            "name": "Identifier",
                            "src": "3786:5:18"
                          }
                        ],
                        "id": 3538,
                        "name": "FunctionCall",
                        "src": "3757:35:18"
                      }
                    ],
                    "id": 3539,
                    "name": "Return",
                    "src": "3750:42:18"
                  }
                ],
                "id": 3540,
                "name": "Block",
                "src": "3740:59:18"
              }
            ],
            "id": 3541,
            "name": "FunctionDefinition",
            "src": "3613:186:18"
          },
          {
            "attributes": {
              "functionSelector": "7d64bcb4",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "finishMinting",
              "scope": 3594,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Function to stop minting new tokens."
                },
                "id": 3542,
                "name": "StructuredDocumentation",
                "src": "3805:60:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3543,
                "name": "ParameterList",
                "src": "3892:2:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3548,
                "name": "ParameterList",
                "src": "3920:0:18"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3395,
                      "type": "modifier ()",
                      "value": "canMint"
                    },
                    "id": 3544,
                    "name": "Identifier",
                    "src": "3902:7:18"
                  }
                ],
                "id": 3545,
                "name": "ModifierInvocation",
                "src": "3902:7:18"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1334,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 3546,
                    "name": "Identifier",
                    "src": "3910:9:18"
                  }
                ],
                "id": 3547,
                "name": "ModifierInvocation",
                "src": "3910:9:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3375,
                              "type": "bool",
                              "value": "_mintingFinished"
                            },
                            "id": 3549,
                            "name": "Identifier",
                            "src": "3930:16:18"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 3550,
                            "name": "Literal",
                            "src": "3949:4:18"
                          }
                        ],
                        "id": 3551,
                        "name": "Assignment",
                        "src": "3930:23:18"
                      }
                    ],
                    "id": 3552,
                    "name": "ExpressionStatement",
                    "src": "3930:23:18"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3381,
                              "type": "function ()",
                              "value": "MintFinished"
                            },
                            "id": 3553,
                            "name": "Identifier",
                            "src": "3969:12:18"
                          }
                        ],
                        "id": 3554,
                        "name": "FunctionCall",
                        "src": "3969:14:18"
                      }
                    ],
                    "id": 3555,
                    "name": "EmitStatement",
                    "src": "3964:19:18"
                  }
                ],
                "id": 3556,
                "name": "Block",
                "src": "3920:70:18"
              }
            ],
            "id": 3557,
            "name": "FunctionDefinition",
            "src": "3870:120:18"
          },
          {
            "attributes": {
              "functionSelector": "f1b50c1d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "enableTransfer",
              "scope": 3594,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Function to enable transfers."
                },
                "id": 3558,
                "name": "StructuredDocumentation",
                "src": "3996:53:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3559,
                "name": "ParameterList",
                "src": "4077:2:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3562,
                "name": "ParameterList",
                "src": "4097:0:18"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1334,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 3560,
                    "name": "Identifier",
                    "src": "4087:9:18"
                  }
                ],
                "id": 3561,
                "name": "ModifierInvocation",
                "src": "4087:9:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3378,
                              "type": "bool",
                              "value": "_transferEnabled"
                            },
                            "id": 3563,
                            "name": "Identifier",
                            "src": "4107:16:18"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 3564,
                            "name": "Literal",
                            "src": "4126:4:18"
                          }
                        ],
                        "id": 3565,
                        "name": "Assignment",
                        "src": "4107:23:18"
                      }
                    ],
                    "id": 3566,
                    "name": "ExpressionStatement",
                    "src": "4107:23:18"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3384,
                              "type": "function ()",
                              "value": "TransferEnabled"
                            },
                            "id": 3567,
                            "name": "Identifier",
                            "src": "4146:15:18"
                          }
                        ],
                        "id": 3568,
                        "name": "FunctionCall",
                        "src": "4146:17:18"
                      }
                    ],
                    "id": 3569,
                    "name": "EmitStatement",
                    "src": "4141:22:18"
                  }
                ],
                "id": 3570,
                "name": "Block",
                "src": "4097:73:18"
              }
            ],
            "id": 3571,
            "name": "FunctionDefinition",
            "src": "4054:116:18"
          },
          {
            "attributes": {
              "baseFunctions": [
                2324,
                2461
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_beforeTokenTransfer",
              "scope": 3594,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev See {ERC20-_beforeTokenTransfer}."
                },
                "id": 3572,
                "name": "StructuredDocumentation",
                "src": "4176:57:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "name": "ERC20",
                      "referencedDeclaration": 2325,
                      "type": "contract ERC20"
                    },
                    "id": 3580,
                    "name": "UserDefinedTypeName",
                    "src": "4336:5:18"
                  },
                  {
                    "attributes": {
                      "name": "ERC20Capped",
                      "referencedDeclaration": 2462,
                      "type": "contract ERC20Capped"
                    },
                    "id": 3581,
                    "name": "UserDefinedTypeName",
                    "src": "4343:11:18"
                  }
                ],
                "id": 3582,
                "name": "OverrideSpecifier",
                "src": "4327:28:18"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 3593,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3573,
                        "name": "ElementaryTypeName",
                        "src": "4268:7:18"
                      }
                    ],
                    "id": 3574,
                    "name": "VariableDeclaration",
                    "src": "4268:12:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 3593,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3575,
                        "name": "ElementaryTypeName",
                        "src": "4282:7:18"
                      }
                    ],
                    "id": 3576,
                    "name": "VariableDeclaration",
                    "src": "4282:10:18"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 3593,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3577,
                        "name": "ElementaryTypeName",
                        "src": "4294:7:18"
                      }
                    ],
                    "id": 3578,
                    "name": "VariableDeclaration",
                    "src": "4294:14:18"
                  }
                ],
                "id": 3579,
                "name": "ParameterList",
                "src": "4267:42:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3583,
                "name": "ParameterList",
                "src": "4356:0:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 2461,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967271,
                                  "type": "contract super ERC20Base",
                                  "value": "super"
                                },
                                "id": 3584,
                                "name": "Identifier",
                                "src": "4366:5:18"
                              }
                            ],
                            "id": 3586,
                            "name": "MemberAccess",
                            "src": "4366:26:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3574,
                              "type": "address",
                              "value": "from"
                            },
                            "id": 3587,
                            "name": "Identifier",
                            "src": "4393:4:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3576,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 3588,
                            "name": "Identifier",
                            "src": "4399:2:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3578,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 3589,
                            "name": "Identifier",
                            "src": "4403:6:18"
                          }
                        ],
                        "id": 3590,
                        "name": "FunctionCall",
                        "src": "4366:44:18"
                      }
                    ],
                    "id": 3591,
                    "name": "ExpressionStatement",
                    "src": "4366:44:18"
                  }
                ],
                "id": 3592,
                "name": "Block",
                "src": "4356:61:18"
              }
            ],
            "id": 3593,
            "name": "FunctionDefinition",
            "src": "4238:179:18"
          }
        ],
        "id": 3594,
        "name": "ContractDefinition",
        "src": "465:3954:18"
      }
    ],
    "id": 3595,
    "name": "SourceUnit",
    "src": "33:4387:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-07T10:27:57.051Z",
  "devdoc": {
    "author": "Vittorio Minacori (https://github.com/vittominacori)",
    "details": "Implementation of the ERC20Base",
    "events": {
      "MintFinished()": {
        "details": "Emitted during finish minting"
      },
      "TransferEnabled()": {
        "details": "Emitted during transfer enabling"
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "approveAndCall(address,uint256)": {
        "details": "Approve spender to transfer tokens and then execute a callback on recipient.",
        "params": {
          "spender": "The address allowed to transfer to",
          "value": "The amount allowed to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "Approve spender to transfer tokens and then execute a callback on recipient.",
        "params": {
          "data": "Additional data with no specified format.",
          "spender": "The address allowed to transfer to.",
          "value": "The amount allowed to be transferred."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "constructor": {
        "params": {
          "cap": "Maximum number of tokens mintable",
          "decimals": "Number of decimals. All the operations are done using the smallest and indivisible token unit",
          "initialSupply": "Initial token supply",
          "name": "Name of the token",
          "symbol": "A symbol to be used as ticker",
          "transferEnabled": "If transfer is enabled on token creation"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "enableTransfer()": {
        "details": "Function to enable transfers."
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens",
          "value": "The amount of tokens to mint"
        }
      },
      "mintingFinished()": {
        "returns": {
          "_0": "if minting is finished or not."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverERC20(address,uint256)": {
        "details": "Remember that only owner can call so be careful when use on contracts generated from other contracts.",
        "params": {
          "tokenAddress": "The token contract address",
          "tokenAmount": "Number of tokens to be sent"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Transfer tokens to a specified address.",
        "params": {
          "to": "The address to transfer to",
          "value": "The amount to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferAndCall(address,uint256)": {
        "details": "Transfer tokens to a specified address and then execute a callback on recipient.",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "Transfer tokens to a specified address and then execute a callback on recipient.",
        "params": {
          "data": "Additional data with no specified format",
          "to": "The address to transfer to",
          "value": "The amount to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferEnabled()": {
        "returns": {
          "_0": "if transfer is enabled or not."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another.",
        "params": {
          "from": "The address which you want to send tokens from",
          "to": "The address which you want to transfer to",
          "value": "the amount of tokens to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferFromAndCall(address,address,uint256)": {
        "details": "Transfer tokens from one address to another and then execute a callback on recipient.",
        "params": {
          "from": "The address which you want to send tokens from",
          "to": "The address which you want to transfer to",
          "value": "The amount of tokens to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferFromAndCall(address,address,uint256,bytes)": {
        "details": "Transfer tokens from one address to another and then execute a callback on recipient.",
        "params": {
          "data": "Additional data with no specified format",
          "from": "The address which you want to send tokens from",
          "to": "The address which you want to transfer to",
          "value": "The amount of tokens to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "ERC20Base",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}