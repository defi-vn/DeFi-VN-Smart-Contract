{
  "contractName": "ERC20Base",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "transferEnabled",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "TransferEnabled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFromAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finishMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.2+commit.51b20bc0\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferEnabled\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransferEnabled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Vittorio Minacori (https://github.com/vittominacori)\",\"details\":\"Implementation of the ERC20Base\",\"events\":{\"MintFinished()\":{\"details\":\"Emitted during finish minting\"},\"TransferEnabled()\":{\"details\":\"Emitted during transfer enabling\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on recipient.\",\"params\":{\"spender\":\"The address allowed to transfer to\",\"value\":\"The amount allowed to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Approve spender to transfer tokens and then execute a callback on recipient.\",\"params\":{\"data\":\"Additional data with no specified format.\",\"spender\":\"The address allowed to transfer to.\",\"value\":\"The amount allowed to be transferred.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"params\":{\"cap\":\"Maximum number of tokens mintable\",\"decimals\":\"Number of decimals. All the operations are done using the smallest and indivisible token unit\",\"initialSupply\":\"Initial token supply\",\"name\":\"Name of the token\",\"symbol\":\"A symbol to be used as ticker\",\"transferEnabled\":\"If transfer is enabled on token creation\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"enableTransfer()\":{\"details\":\"Function to enable transfers.\"},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens\",\"value\":\"The amount of tokens to mint\"}},\"mintingFinished()\":{\"returns\":{\"_0\":\"if minting is finished or not.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverERC20(address,uint256)\":{\"details\":\"Remember that only owner can call so be careful when use on contracts generated from other contracts.\",\"params\":{\"tokenAddress\":\"The token contract address\",\"tokenAmount\":\"Number of tokens to be sent\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer tokens to a specified address.\",\"params\":{\"to\":\"The address to transfer to\",\"value\":\"The amount to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferAndCall(address,uint256)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on recipient.\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Transfer tokens to a specified address and then execute a callback on recipient.\",\"params\":{\"data\":\"Additional data with no specified format\",\"to\":\"The address to transfer to\",\"value\":\"The amount to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferEnabled()\":{\"returns\":{\"_0\":\"if transfer is enabled or not.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another.\",\"params\":{\"from\":\"The address which you want to send tokens from\",\"to\":\"The address which you want to transfer to\",\"value\":\"the amount of tokens to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on recipient.\",\"params\":{\"from\":\"The address which you want to send tokens from\",\"to\":\"The address which you want to transfer to\",\"value\":\"The amount of tokens to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Transfer tokens from one address to another and then execute a callback on recipient.\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which you want to send tokens from\",\"to\":\"The address which you want to transfer to\",\"value\":\"The amount of tokens to be transferred\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ERC20Base\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@vittominacori/erc20-token/contracts/ERC20Base.sol\":\"ERC20Base\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c\",\"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa322b8cae9025e521e0cdbad331af3578db8d6841159fc2c857be56582bd76a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ac295d8ec062dbca395a7acd51ccf14b788e890ab66fa2a271e978ef25fb9c\",\"dweb:/ipfs/QmeXZYWA46T7t2hV8yEa64xd57Q1dpHWHMCrmG974Tiyt3\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x74b0525c81e47810f1bd795755962bdb84de3a4f71cfcb063f4c4d4999a3e96b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cd0b71a794900681c8bcc255599fac53c211fc6a530a58d7dd7246bfde6c4f5\",\"dweb:/ipfs/QmdAB1mFyuN2i25DRf9szWgp1FLCByqJ4F8aYzXWe3mfTR\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xe959f6a1c2d844fd0f9f49709f1091de1303c7233431379a20963db18565ebf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://316603e8a4a5b4a5bc4bbb87acfd016ae17b4b199164c0b7823b96515be330d6\",\"dweb:/ipfs/QmTXn5UAQo4k4dvtEiYN6tJ17uZ1osDUezyZ421PUA6kx6\"]},\"@openzeppelin/contracts/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x6fd4018439998575e4702b0fe3cacbf77984f44f11aa26687214267d1865bd88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91c4ec52eb7649aafad19123ae3c7ba2838db20cb7081effca26ef89778d5f09\",\"dweb:/ipfs/QmWNH2ciUvYD8neCkhWUpaj6mG7oyoYtpDxde1a7Fhv3ha\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xf1ac0ee2ca2b36f90574d3b2b37422ced4fa829741d80794c62f5958a2d8f474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d527ba022dc8eb272c76aa637913aa261e37847e5b465404328af1916fec55e2\",\"dweb:/ipfs/Qmei5afXj1pbucjpi7N3Epjb4o5AuzYXsSaUgYZmdPJHbu\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xe4180240b62082d70cffb0a0964699273195cd7c013f1d294dfe18d5e981dffb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a74d9e8b7d904012eb345f5b483c6c521bd935e9801a403871a0469e699efae\",\"dweb:/ipfs/Qmeqm5iXdXTue6vJAaC7htFBxnENMTtWr3BM5JVZJT5RP1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0x6d34fcf105a37da8aa0b7f4b38e99edd3db75c1e03565707439c77912f583cf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://544bfa8988da4e4ec282f88712d57abaf0fc417a527f0b7f9fa9dd23d446d859\",\"dweb:/ipfs/QmVNeeXHDSChvx3eLmE3XyDzcZ7Z4JAe1s6XqPRZ6aUABR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x698f929f1097637d051976b322a2d532c27df022b09010e8d091e2888a5ebdf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bd4c9419d1182612ef415c60a83a9039b227fccb799937963448114c0473b58\",\"dweb:/ipfs/Qmat1U571v55F5JDDHHX7igGcmLF8Ehk9CzsWpjbdx3RTH\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x5420cb92cf72960b0be9dacec46b15a5558f89688d846cc6e53ec1c2d807f673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6dd826d43bc5d033e6197236f8b55e56dfdda6d1a364f5ddfa79c134a664875\",\"dweb:/ipfs/Qmcztt4dk38dzvUtDQoJrnWNvafotNRttyah1zRVmsNyB6\"]},\"@vittominacori/erc20-token/contracts/ERC20Base.sol\":{\"keccak256\":\"0xa5b4e229862f1bcb8c9af82f682e99c25855ce483a9fbdcc1cff5392fb6e0c24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14207ea9d2066559e1e23982f6ef965bee40c7a9ae06e10c4eea81d01338411f\",\"dweb:/ipfs/Qmaj65QcFRbGKaNvLMQPGnpVmF15JCvrf71DoXbHSLA77E\"]},\"@vittominacori/erc20-token/contracts/access/Roles.sol\":{\"keccak256\":\"0x51aa8e4be20b3299ada42ea6a8ae567f70238e839e73d56acac24a3e4e7b4f11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e11e8a67b2e1c63bf08c46cd68f73e903c0128c5d828fbf454e6eac1c1c40c7\",\"dweb:/ipfs/QmYh2VaMX7TPYKtb7BRiES1aHNUigjJtDX4c7YhGkHwjCG\"]},\"erc-payable-token/contracts/token/ERC1363/ERC1363.sol\":{\"keccak256\":\"0xb1fbd98a62e4f53fa72243a200dd9f32512ba10a09becbbaf618163eb8d8b286\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9503481bff3b620969072ce46e0971101ae74bdcf02765521af9cd805c85df8\",\"dweb:/ipfs/QmbnWZwvNV5mAz4kEj52zoGMpu2XqmzTykW25p9Sj6Mdhv\"]},\"erc-payable-token/contracts/token/ERC1363/IERC1363.sol\":{\"keccak256\":\"0x2ffd4fc08a21a38fd0988d5293e0135f4b270b1a64d25227431f123bc3f70d01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0560feeece4984ec9ed178647a68c8b4754e8060666fa3d324d2f329913b799\",\"dweb:/ipfs/QmPGAU8CUZuuapQTBQ6g85EoJgPu6VaahBrCkY7uKgZMB6\"]},\"erc-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol\":{\"keccak256\":\"0x478bb11a3b4c0bc453e19428643582b2f2afa7d2420e4818e23e6d598c2df356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0ba6b9bee2379e4019c1e3bfe173f8adfb3527f19aa4966eac97f21ec679c4\",\"dweb:/ipfs/QmXZ4ktrYyHeRjT59RufrCGy8YnPwr37k5GKvTyx9dVqfs\"]},\"erc-payable-token/contracts/token/ERC1363/IERC1363Spender.sol\":{\"keccak256\":\"0xe6dd0bc06abcdd8a2fb131c5a44323d4b4fba46c156caba0d88e8a712c3a4192\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a872632ccd4821bd9c1714ef64f8f1c53e3b7667b75fe067c7b187f759e39d0\",\"dweb:/ipfs/QmRn84o9aHJGSV1bPCGnWESqMQpcuSXkVNjuLX2y7ZrXQw\"]},\"eth-token-recover/contracts/TokenRecover.sol\":{\"keccak256\":\"0x21cac11370b63473f1e656810829385167695277c945f599f75e2295a9269ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0d7ee54c6e06f5876ba8613a2d488db2a7b871b2bc8c82dd632e707a3754bd1\",\"dweb:/ipfs/Qmdvs2rHXkawFpmsByWteLWorpCy8pHP5esTZtycXPWaik\"]}},\"version\":1}",
  "bytecode": "0x60806040526009805461ffff60a01b191690553480156200001f57600080fd5b5060405162002de638038062002de6833981810160405260c08110156200004557600080fd5b81019080805160405193929190846401000000008211156200006657600080fd5b9083019060208201858111156200007c57600080fd5b82516401000000008111828201881017156200009757600080fd5b82525081516020918201929091019080838360005b83811015620000c6578181015183820152602001620000ac565b50505050905090810190601f168015620000f45780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011857600080fd5b9083019060208201858111156200012e57600080fd5b82516401000000008111828201881017156200014957600080fd5b82525081516020918201929091019080838360005b83811015620001785781810151838201526020016200015e565b50505050905090810190601f168015620001a65780820380516001836020036101000a031916815260200191505b50604090815260208281015191830151606084015160809094015188519396509094509187918791869184918491620001e59160039185019062000845565b508051620001fb90600490602084019062000845565b50506005805460ff1916601217905550806200025e576040805162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b600655620002736301ffc9a760e01b620003ac565b62000285634bbee2df60e01b620003ac565b62000297637dcf646760e11b620003ac565b50620002b090506000620002aa62000431565b62000435565b620002df7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9620002aa62000431565b6200030e7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c620002aa62000431565b60006200031a62000431565b600980546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620003738462000445565b81156200038f576200038f620003886200045b565b836200046a565b8015620003a057620003a062000579565b505050505050620008e1565b6001600160e01b031980821614156200040c576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600760205260409020805460ff19166001179055565b3390565b62000441828262000624565b5050565b6005805460ff191660ff92909216919091179055565b6009546001600160a01b031690565b6001600160a01b038216620004c6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620004d4600083836200069f565b620004f081600254620006bc60201b620015b61790919060201c565b6002556001600160a01b0382166000908152602081815260409091205462000523918390620015b6620006bc821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6200058362000431565b6009546001600160a01b03908116911614620005e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6009805460ff60a81b1916600160a81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b60008281526008602090815260409091206200064b9183906200161062000720821b17901c565b1562000441576200065b62000431565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b620006b78383836200073760201b620016251760201c565b505050565b60008282018381101562000717576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b600062000717836001600160a01b038416620007d8565b6200074f838383620006b760201b62000ef31760201c565b6001600160a01b038316620006b75760065462000784826200077062000827565b620006bc60201b620015b61790919060201c565b1115620006b7576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b6000620007e683836200082d565b6200081e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200071a565b5060006200071a565b60025490565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200088857805160ff1916838001178555620008b8565b82800160010185558215620008b8579182015b82811115620008b85782518255916020019190600101906200089b565b50620008c6929150620008ca565b5090565b5b80821115620008c65760008155600101620008cb565b6124f580620008f16000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c806379cc67901161013b578063c1d34b89116100b8578063d8fbe9941161007c578063d8fbe994146108f1578063dd62ed3e14610927578063f1b50c1d14610955578063f2fde38b1461095d578063f5b541a61461098357610248565b8063c1d34b891461071f578063ca15c873146107e5578063cae9ca5114610802578063d5391393146108bd578063d547741f146108c557610248565b806391d14854116100ff57806391d148541461068b57806395d89b41146106b7578063a217fddf146106bf578063a457c2d7146106c7578063a9059cbb146106f357610248565b806379cc6790146105e45780637d64bcb4146106105780638980f11f146106185780638da5cb5b146106445780639010d07c1461066857610248565b80633177029f116101c957806340c10f191161018d57806340c10f191461056557806342966c68146105915780634cd412d5146105ae57806370a08231146105b6578063715018a6146105dc57610248565b80633177029f1461041e578063355274ea1461044a57806336568abe14610452578063395093511461047e5780634000aea0146104aa57610248565b806318160ddd1161021057806318160ddd1461036557806323b872dd1461037f578063248a9ca3146103b55780632f2ff15d146103d2578063313ce5671461040057610248565b806301ffc9a71461024d57806305d2035b1461028857806306fdde0314610290578063095ea7b31461030d5780631296ee6214610339575b600080fd5b6102746004803603602081101561026357600080fd5b50356001600160e01b03191661098b565b604080519115158252519081900360200190f35b6102746109aa565b6102986109ba565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d25781810151838201526020016102ba565b50505050905090810190601f1680156102ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102746004803603604081101561032357600080fd5b506001600160a01b038135169060200135610a50565b6102746004803603604081101561034f57600080fd5b506001600160a01b038135169060200135610a6e565b61036d610a91565b60408051918252519081900360200190f35b6102746004803603606081101561039557600080fd5b506001600160a01b03813581169160208101359091169060400135610a97565b61036d600480360360208110156103cb57600080fd5b5035610b28565b6103fe600480360360408110156103e857600080fd5b50803590602001356001600160a01b0316610b3d565b005b610408610ba9565b6040805160ff9092168252519081900360200190f35b6102746004803603604081101561043457600080fd5b506001600160a01b038135169060200135610bb2565b61036d610bce565b6103fe6004803603604081101561046857600080fd5b50803590602001356001600160a01b0316610bd4565b6102746004803603604081101561049457600080fd5b506001600160a01b038135169060200135610c35565b610274600480360360608110156104c057600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156104f057600080fd5b82018360208201111561050257600080fd5b8035906020019184600183028401116401000000008311171561052457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c88945050505050565b6103fe6004803603604081101561057b57600080fd5b506001600160a01b038135169060200135610ced565b6103fe600480360360208110156105a757600080fd5b5035610dbd565b610274610dd1565b61036d600480360360208110156105cc57600080fd5b50356001600160a01b0316610de1565b6103fe610dfc565b6103fe600480360360408110156105fa57600080fd5b506001600160a01b038135169060200135610e9e565b6103fe610ef8565b6103fe6004803603604081101561062e57600080fd5b506001600160a01b038135169060200135610fed565b61064c6110d3565b604080516001600160a01b039092168252519081900360200190f35b61064c6004803603604081101561067e57600080fd5b50803590602001356110e2565b610274600480360360408110156106a157600080fd5b50803590602001356001600160a01b03166110fa565b610298611112565b61036d611173565b610274600480360360408110156106dd57600080fd5b506001600160a01b038135169060200135611178565b6102746004803603604081101561070957600080fd5b506001600160a01b0381351690602001356111e0565b6102746004803603608081101561073557600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561077057600080fd5b82018360208201111561078257600080fd5b803590602001918460018302840111640100000000831117156107a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611274945050505050565b61036d600480360360208110156107fb57600080fd5b50356112d4565b6102746004803603606081101561081857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561084857600080fd5b82018360208201111561085a57600080fd5b8035906020019184600183028401116401000000008311171561087c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112eb945050505050565b61036d61133e565b6103fe600480360360408110156108db57600080fd5b50803590602001356001600160a01b0316611362565b6102746004803603606081101561090757600080fd5b506001600160a01b038135811691602081013590911690604001356113bb565b61036d6004803603604081101561093d57600080fd5b506001600160a01b03813581169160200135166113d8565b6103fe611403565b6103fe6004803603602081101561097357600080fd5b50356001600160a01b0316611499565b61036d611592565b6001600160e01b03191660009081526007602052604090205460ff1690565b600954600160a01b900460ff1690565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a465780601f10610a1b57610100808354040283529160200191610a46565b820191906000526020600020905b815481529060010190602001808311610a2957829003601f168201915b5050505050905090565b6000610a64610a5d6116a6565b84846116aa565b5060015b92915050565b6000610a8a838360405180602001604052806000815250610c88565b9392505050565b60025490565b6009546000908490600160a81b900460ff1680610ad95750610ad97f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c826110fa565b610b145760405162461bcd60e51b815260040180806020018281038252604a815260200180612422604a913960600191505060405180910390fd5b610b1f858585611796565b95945050505050565b60009081526008602052604090206002015490565b600082815260086020526040902060020154610b6090610b5b6116a6565b6110fa565b610b9b5760405162461bcd60e51b815260040180806020018281038252602f8152602001806121e7602f913960400191505060405180910390fd5b610ba5828261180e565b5050565b60055460ff1690565b6000610a8a8383604051806020016040528060008152506112eb565b60065490565b610bdc6116a6565b6001600160a01b0316816001600160a01b031614610c2b5760405162461bcd60e51b815260040180806020018281038252602f815260200180612491602f913960400191505060405180910390fd5b610ba58282611877565b6000610a64610c426116a6565b84610c838560016000610c536116a6565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906115b6565b6116aa565b6000610c9484846111e0565b50610ca8610ca06116a6565b8585856118e0565b610ce35760405162461bcd60e51b81526004018080602001828103825260268152602001806123266026913960400191505060405180910390fd5b5060019392505050565b600954600160a01b900460ff1615610d4c576040805162461bcd60e51b815260206004820152601e60248201527f4552433230426173653a206d696e74696e672069732066696e69736865640000604482015290519081900360640190fd5b610d787ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9610b5b6116a6565b610db35760405162461bcd60e51b815260040180806020018281038252602b8152602001806122fb602b913960400191505060405180910390fd5b610ba58282611a25565b610dce610dc86116a6565b82611b15565b50565b600954600160a81b900460ff1690565b6001600160a01b031660009081526020819052604090205490565b610e046116a6565b6009546001600160a01b03908116911614610e54576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b6009546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600980546001600160a01b0319169055565b6000610ed58260405180606001604052806024815260200161239460249139610ece86610ec96116a6565b6113d8565b9190611c11565b9050610ee983610ee36116a6565b836116aa565b610ef38383611b15565b505050565b600954600160a01b900460ff1615610f57576040805162461bcd60e51b815260206004820152601e60248201527f4552433230426173653a206d696e74696e672069732066696e69736865640000604482015290519081900360640190fd5b610f5f6116a6565b6009546001600160a01b03908116911614610faf576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b6009805460ff60a01b1916600160a01b1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a1565b610ff56116a6565b6009546001600160a01b03908116911614611045576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b816001600160a01b031663a9059cbb61105c6110d3565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b505050506040513d60208110156110cd57600080fd5b50505050565b6009546001600160a01b031690565b6000828152600860205260408120610a8a9083611ca8565b6000828152600860205260408120610a8a9083611cb4565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a465780601f10610a1b57610100808354040283529160200191610a46565b600081565b6000610a646111856116a6565b84610c838560405180606001604052806025815260200161246c60259139600160006111af6116a6565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611c11565b60006111ea6116a6565b600954600160a81b900460ff168061122757506112277f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c826110fa565b6112625760405162461bcd60e51b815260040180806020018281038252604a815260200180612422604a913960600191505060405180910390fd5b61126c8484611cc9565b949350505050565b6000611281858585610a97565b5061128e858585856118e0565b6112c95760405162461bcd60e51b81526004018080602001828103825260268152602001806123266026913960400191505060405180910390fd5b506001949350505050565b6000818152600860205260408120610a6890611cdd565b60006112f78484610a50565b50611303848484611ce8565b610ce35760405162461bcd60e51b81526004018080602001828103825260258152602001806122806025913960400191505060405180910390fd5b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b60008281526008602052604090206002015461138090610b5b6116a6565b610c2b5760405162461bcd60e51b81526004018080602001828103825260308152602001806122cb6030913960400191505060405180910390fd5b600061126c84848460405180602001604052806000815250611274565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61140b6116a6565b6009546001600160a01b0390811691161461145b576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b6009805460ff60a81b1916600160a81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b6114a16116a6565b6009546001600160a01b039081169116146114f1576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b6001600160a01b0381166115365760405162461bcd60e51b81526004018080602001828103825260268152602001806122386026913960400191505060405180910390fd5b6009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b600082820183811015610a8a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610a8a836001600160a01b038416611e1b565b611630838383610ef3565b6001600160a01b038316610ef3576006546116538261164d610a91565b906115b6565b1115610ef3576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b3390565b6001600160a01b0383166116ef5760405162461bcd60e51b81526004018080602001828103825260248152602001806123fe6024913960400191505060405180910390fd5b6001600160a01b0382166117345760405162461bcd60e51b815260040180806020018281038252602281526020018061225e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006117a3848484611e65565b610ce3846117af6116a6565b610c838560405180606001604052806028815260200161234c602891396001600160a01b038a166000908152600160205260408120906117ed6116a6565b6001600160a01b031681526020810191909152604001600020549190611c11565b60008281526008602052604090206118269082611610565b15610ba5576118336116a6565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260086020526040902061188f9082611fc0565b15610ba55761189c6116a6565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006118f4846001600160a01b0316611fd5565b6119005750600061126c565b6000846001600160a01b03166388a7ca5c6119196116a6565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561198c578181015183820152602001611974565b50505050905090810190601f1680156119b95780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156119db57600080fd5b505af11580156119ef573d6000803e3d6000fd5b505050506040513d6020811015611a0557600080fd5b50516001600160e01b031916632229f29760e21b14915050949350505050565b6001600160a01b038216611a80576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611a8c6000838361200e565b600254611a9990826115b6565b6002556001600160a01b038216600090815260208190526040902054611abf90826115b6565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611b5a5760405162461bcd60e51b81526004018080602001828103825260218152602001806123b86021913960400191505060405180910390fd5b611b668260008361200e565b611ba381604051806060016040528060228152602001612216602291396001600160a01b0385166000908152602081905260409020549190611c11565b6001600160a01b038316600090815260208190526040902055600254611bc99082612019565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008184841115611ca05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c65578181015183820152602001611c4d565b50505050905090810190601f168015611c925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000610a8a838361205b565b6000610a8a836001600160a01b0384166120bf565b6000610a64611cd66116a6565b8484611e65565b6000610a68826120d7565b6000611cfc846001600160a01b0316611fd5565b611d0857506000610a8a565b6000846001600160a01b0316637b04a2d0611d216116a6565b86866040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d84578181015183820152602001611d6c565b50505050905090810190601f168015611db15780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611dd257600080fd5b505af1158015611de6573d6000803e3d6000fd5b505050506040513d6020811015611dfc57600080fd5b50516001600160e01b0319166307b04a2d60e41b149150509392505050565b6000611e2783836120bf565b611e5d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a68565b506000610a68565b6001600160a01b038316611eaa5760405162461bcd60e51b81526004018080602001828103825260258152602001806123d96025913960400191505060405180910390fd5b6001600160a01b038216611eef5760405162461bcd60e51b81526004018080602001828103825260238152602001806121c46023913960400191505060405180910390fd5b611efa83838361200e565b611f37816040518060600160405280602681526020016122a5602691396001600160a01b0386166000908152602081905260409020549190611c11565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611f6690826115b6565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000610a8a836001600160a01b0384166120db565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061126c575050151592915050565b610ef3838383611625565b6000610a8a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c11565b8154600090821061209d5760405162461bcd60e51b81526004018080602001828103825260228152602001806121a26022913960400191505060405180910390fd5b8260000182815481106120ac57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60008181526001830160205260408120548015612197578354600019808301919081019060009087908390811061210e57fe5b906000526020600020015490508087600001848154811061212b57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061215b57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a68565b6000915050610a6856fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373455243313336333a205f636865636b416e6443616c6c417070726f7665207265766572747345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65526f6c65733a2063616c6c657220646f6573206e6f74206861766520746865204d494e54455220726f6c65455243313336333a205f636865636b416e6443616c6c5472616e73666572207265766572747345524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734552433230426173653a207472616e73666572206973206e6f7420656e61626c6564206f722066726f6d20646f6573206e6f74206861766520746865204f50455241544f5220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212205551a716966af3eb0c51277561259424fd7a696b85f9f5879bac14cd49d1ce8364736f6c63430007020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102485760003560e01c806379cc67901161013b578063c1d34b89116100b8578063d8fbe9941161007c578063d8fbe994146108f1578063dd62ed3e14610927578063f1b50c1d14610955578063f2fde38b1461095d578063f5b541a61461098357610248565b8063c1d34b891461071f578063ca15c873146107e5578063cae9ca5114610802578063d5391393146108bd578063d547741f146108c557610248565b806391d14854116100ff57806391d148541461068b57806395d89b41146106b7578063a217fddf146106bf578063a457c2d7146106c7578063a9059cbb146106f357610248565b806379cc6790146105e45780637d64bcb4146106105780638980f11f146106185780638da5cb5b146106445780639010d07c1461066857610248565b80633177029f116101c957806340c10f191161018d57806340c10f191461056557806342966c68146105915780634cd412d5146105ae57806370a08231146105b6578063715018a6146105dc57610248565b80633177029f1461041e578063355274ea1461044a57806336568abe14610452578063395093511461047e5780634000aea0146104aa57610248565b806318160ddd1161021057806318160ddd1461036557806323b872dd1461037f578063248a9ca3146103b55780632f2ff15d146103d2578063313ce5671461040057610248565b806301ffc9a71461024d57806305d2035b1461028857806306fdde0314610290578063095ea7b31461030d5780631296ee6214610339575b600080fd5b6102746004803603602081101561026357600080fd5b50356001600160e01b03191661098b565b604080519115158252519081900360200190f35b6102746109aa565b6102986109ba565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d25781810151838201526020016102ba565b50505050905090810190601f1680156102ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102746004803603604081101561032357600080fd5b506001600160a01b038135169060200135610a50565b6102746004803603604081101561034f57600080fd5b506001600160a01b038135169060200135610a6e565b61036d610a91565b60408051918252519081900360200190f35b6102746004803603606081101561039557600080fd5b506001600160a01b03813581169160208101359091169060400135610a97565b61036d600480360360208110156103cb57600080fd5b5035610b28565b6103fe600480360360408110156103e857600080fd5b50803590602001356001600160a01b0316610b3d565b005b610408610ba9565b6040805160ff9092168252519081900360200190f35b6102746004803603604081101561043457600080fd5b506001600160a01b038135169060200135610bb2565b61036d610bce565b6103fe6004803603604081101561046857600080fd5b50803590602001356001600160a01b0316610bd4565b6102746004803603604081101561049457600080fd5b506001600160a01b038135169060200135610c35565b610274600480360360608110156104c057600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156104f057600080fd5b82018360208201111561050257600080fd5b8035906020019184600183028401116401000000008311171561052457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c88945050505050565b6103fe6004803603604081101561057b57600080fd5b506001600160a01b038135169060200135610ced565b6103fe600480360360208110156105a757600080fd5b5035610dbd565b610274610dd1565b61036d600480360360208110156105cc57600080fd5b50356001600160a01b0316610de1565b6103fe610dfc565b6103fe600480360360408110156105fa57600080fd5b506001600160a01b038135169060200135610e9e565b6103fe610ef8565b6103fe6004803603604081101561062e57600080fd5b506001600160a01b038135169060200135610fed565b61064c6110d3565b604080516001600160a01b039092168252519081900360200190f35b61064c6004803603604081101561067e57600080fd5b50803590602001356110e2565b610274600480360360408110156106a157600080fd5b50803590602001356001600160a01b03166110fa565b610298611112565b61036d611173565b610274600480360360408110156106dd57600080fd5b506001600160a01b038135169060200135611178565b6102746004803603604081101561070957600080fd5b506001600160a01b0381351690602001356111e0565b6102746004803603608081101561073557600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561077057600080fd5b82018360208201111561078257600080fd5b803590602001918460018302840111640100000000831117156107a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611274945050505050565b61036d600480360360208110156107fb57600080fd5b50356112d4565b6102746004803603606081101561081857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561084857600080fd5b82018360208201111561085a57600080fd5b8035906020019184600183028401116401000000008311171561087c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112eb945050505050565b61036d61133e565b6103fe600480360360408110156108db57600080fd5b50803590602001356001600160a01b0316611362565b6102746004803603606081101561090757600080fd5b506001600160a01b038135811691602081013590911690604001356113bb565b61036d6004803603604081101561093d57600080fd5b506001600160a01b03813581169160200135166113d8565b6103fe611403565b6103fe6004803603602081101561097357600080fd5b50356001600160a01b0316611499565b61036d611592565b6001600160e01b03191660009081526007602052604090205460ff1690565b600954600160a01b900460ff1690565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a465780601f10610a1b57610100808354040283529160200191610a46565b820191906000526020600020905b815481529060010190602001808311610a2957829003601f168201915b5050505050905090565b6000610a64610a5d6116a6565b84846116aa565b5060015b92915050565b6000610a8a838360405180602001604052806000815250610c88565b9392505050565b60025490565b6009546000908490600160a81b900460ff1680610ad95750610ad97f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c826110fa565b610b145760405162461bcd60e51b815260040180806020018281038252604a815260200180612422604a913960600191505060405180910390fd5b610b1f858585611796565b95945050505050565b60009081526008602052604090206002015490565b600082815260086020526040902060020154610b6090610b5b6116a6565b6110fa565b610b9b5760405162461bcd60e51b815260040180806020018281038252602f8152602001806121e7602f913960400191505060405180910390fd5b610ba5828261180e565b5050565b60055460ff1690565b6000610a8a8383604051806020016040528060008152506112eb565b60065490565b610bdc6116a6565b6001600160a01b0316816001600160a01b031614610c2b5760405162461bcd60e51b815260040180806020018281038252602f815260200180612491602f913960400191505060405180910390fd5b610ba58282611877565b6000610a64610c426116a6565b84610c838560016000610c536116a6565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906115b6565b6116aa565b6000610c9484846111e0565b50610ca8610ca06116a6565b8585856118e0565b610ce35760405162461bcd60e51b81526004018080602001828103825260268152602001806123266026913960400191505060405180910390fd5b5060019392505050565b600954600160a01b900460ff1615610d4c576040805162461bcd60e51b815260206004820152601e60248201527f4552433230426173653a206d696e74696e672069732066696e69736865640000604482015290519081900360640190fd5b610d787ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9610b5b6116a6565b610db35760405162461bcd60e51b815260040180806020018281038252602b8152602001806122fb602b913960400191505060405180910390fd5b610ba58282611a25565b610dce610dc86116a6565b82611b15565b50565b600954600160a81b900460ff1690565b6001600160a01b031660009081526020819052604090205490565b610e046116a6565b6009546001600160a01b03908116911614610e54576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b6009546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600980546001600160a01b0319169055565b6000610ed58260405180606001604052806024815260200161239460249139610ece86610ec96116a6565b6113d8565b9190611c11565b9050610ee983610ee36116a6565b836116aa565b610ef38383611b15565b505050565b600954600160a01b900460ff1615610f57576040805162461bcd60e51b815260206004820152601e60248201527f4552433230426173653a206d696e74696e672069732066696e69736865640000604482015290519081900360640190fd5b610f5f6116a6565b6009546001600160a01b03908116911614610faf576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b6009805460ff60a01b1916600160a01b1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a1565b610ff56116a6565b6009546001600160a01b03908116911614611045576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b816001600160a01b031663a9059cbb61105c6110d3565b836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b505050506040513d60208110156110cd57600080fd5b50505050565b6009546001600160a01b031690565b6000828152600860205260408120610a8a9083611ca8565b6000828152600860205260408120610a8a9083611cb4565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a465780601f10610a1b57610100808354040283529160200191610a46565b600081565b6000610a646111856116a6565b84610c838560405180606001604052806025815260200161246c60259139600160006111af6116a6565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611c11565b60006111ea6116a6565b600954600160a81b900460ff168061122757506112277f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c826110fa565b6112625760405162461bcd60e51b815260040180806020018281038252604a815260200180612422604a913960600191505060405180910390fd5b61126c8484611cc9565b949350505050565b6000611281858585610a97565b5061128e858585856118e0565b6112c95760405162461bcd60e51b81526004018080602001828103825260268152602001806123266026913960400191505060405180910390fd5b506001949350505050565b6000818152600860205260408120610a6890611cdd565b60006112f78484610a50565b50611303848484611ce8565b610ce35760405162461bcd60e51b81526004018080602001828103825260258152602001806122806025913960400191505060405180910390fd5b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b60008281526008602052604090206002015461138090610b5b6116a6565b610c2b5760405162461bcd60e51b81526004018080602001828103825260308152602001806122cb6030913960400191505060405180910390fd5b600061126c84848460405180602001604052806000815250611274565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61140b6116a6565b6009546001600160a01b0390811691161461145b576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b6009805460ff60a81b1916600160a81b1790556040517f75fce015c314a132947a3e42f6ab79ab8e05397dabf35b4d742dea228bbadc2d90600090a1565b6114a16116a6565b6009546001600160a01b039081169116146114f1576040805162461bcd60e51b81526020600482018190526024820152600080516020612374833981519152604482015290519081900360640190fd5b6001600160a01b0381166115365760405162461bcd60e51b81526004018080602001828103825260268152602001806122386026913960400191505060405180910390fd5b6009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b600082820183811015610a8a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610a8a836001600160a01b038416611e1b565b611630838383610ef3565b6001600160a01b038316610ef3576006546116538261164d610a91565b906115b6565b1115610ef3576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b3390565b6001600160a01b0383166116ef5760405162461bcd60e51b81526004018080602001828103825260248152602001806123fe6024913960400191505060405180910390fd5b6001600160a01b0382166117345760405162461bcd60e51b815260040180806020018281038252602281526020018061225e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60006117a3848484611e65565b610ce3846117af6116a6565b610c838560405180606001604052806028815260200161234c602891396001600160a01b038a166000908152600160205260408120906117ed6116a6565b6001600160a01b031681526020810191909152604001600020549190611c11565b60008281526008602052604090206118269082611610565b15610ba5576118336116a6565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260086020526040902061188f9082611fc0565b15610ba55761189c6116a6565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60006118f4846001600160a01b0316611fd5565b6119005750600061126c565b6000846001600160a01b03166388a7ca5c6119196116a6565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561198c578181015183820152602001611974565b50505050905090810190601f1680156119b95780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156119db57600080fd5b505af11580156119ef573d6000803e3d6000fd5b505050506040513d6020811015611a0557600080fd5b50516001600160e01b031916632229f29760e21b14915050949350505050565b6001600160a01b038216611a80576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611a8c6000838361200e565b600254611a9990826115b6565b6002556001600160a01b038216600090815260208190526040902054611abf90826115b6565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611b5a5760405162461bcd60e51b81526004018080602001828103825260218152602001806123b86021913960400191505060405180910390fd5b611b668260008361200e565b611ba381604051806060016040528060228152602001612216602291396001600160a01b0385166000908152602081905260409020549190611c11565b6001600160a01b038316600090815260208190526040902055600254611bc99082612019565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60008184841115611ca05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c65578181015183820152602001611c4d565b50505050905090810190601f168015611c925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000610a8a838361205b565b6000610a8a836001600160a01b0384166120bf565b6000610a64611cd66116a6565b8484611e65565b6000610a68826120d7565b6000611cfc846001600160a01b0316611fd5565b611d0857506000610a8a565b6000846001600160a01b0316637b04a2d0611d216116a6565b86866040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611d84578181015183820152602001611d6c565b50505050905090810190601f168015611db15780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611dd257600080fd5b505af1158015611de6573d6000803e3d6000fd5b505050506040513d6020811015611dfc57600080fd5b50516001600160e01b0319166307b04a2d60e41b149150509392505050565b6000611e2783836120bf565b611e5d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a68565b506000610a68565b6001600160a01b038316611eaa5760405162461bcd60e51b81526004018080602001828103825260258152602001806123d96025913960400191505060405180910390fd5b6001600160a01b038216611eef5760405162461bcd60e51b81526004018080602001828103825260238152602001806121c46023913960400191505060405180910390fd5b611efa83838361200e565b611f37816040518060600160405280602681526020016122a5602691396001600160a01b0386166000908152602081905260409020549190611c11565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611f6690826115b6565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000610a8a836001600160a01b0384166120db565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061126c575050151592915050565b610ef3838383611625565b6000610a8a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c11565b8154600090821061209d5760405162461bcd60e51b81526004018080602001828103825260228152602001806121a26022913960400191505060405180910390fd5b8260000182815481106120ac57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b60008181526001830160205260408120548015612197578354600019808301919081019060009087908390811061210e57fe5b906000526020600020015490508087600001848154811061212b57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061215b57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a68565b6000915050610a6856fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373455243313336333a205f636865636b416e6443616c6c417070726f7665207265766572747345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65526f6c65733a2063616c6c657220646f6573206e6f74206861766520746865204d494e54455220726f6c65455243313336333a205f636865636b416e6443616c6c5472616e73666572207265766572747345524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734552433230426173653a207472616e73666572206973206e6f7420656e61626c6564206f722066726f6d20646f6573206e6f74206861766520746865204f50455241544f5220726f6c6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212205551a716966af3eb0c51277561259424fd7a696b85f9f5879bac14cd49d1ce8364736f6c63430007020033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "465:3954:16:-:0;;;591:37;;;-1:-1:-1;;;;675:37:16;;;1833:441;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1833:441:16;;;;;;;;;;-1:-1:-1;1833:441:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1833:441:16;;;;;;;;;;-1:-1:-1;1833:441:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1833:441:16;;;;;;;;;;;;;;;;;;;;;;2078:12:9;;1833:441:16;;-1:-1:-1;1833:441:16;;-1:-1:-1;1833:441:16;2056:4;;2062:6;;1833:441;;2056:4;;2062:6;;2078:12:9;;:5;;:12;;;;:::i;:::-;-1:-1:-1;2100:16:9;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2126:9:9;:14;;-1:-1:-1;;2126:14:9;2138:2;2126:14;;;-1:-1:-1;442:7:11;434:41;;;;;-1:-1:-1;;;434:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;485:4;:10;742:40:5;-1:-1:-1;;;742:18:5;:40::i;:::-;2126:50:18::1;-1:-1:-1::0;;;2126:18:18::1;:50::i;:::-;2186:49;-1:-1:-1::0;;;2186:18:18::1;:49::i;:::-;-1:-1:-1::0;313:44:17;;-1:-1:-1;1762:4:3;344:12:17;:10;:12::i;:::-;313:10;:44::i;:::-;367:37;195:19;391:12;:10;:12::i;367:37::-;414:39;260:21;440:12;:10;:12::i;414:39::-;856:17:4;876:12;:10;:12::i;:::-;898:6;:18;;-1:-1:-1;;;;;;898:18:4;-1:-1:-1;;;;;898:18:4;;;;;;;;931:43;;898:18;;-1:-1:-1;898:18:4;-1:-1:-1;;931:43:4;;-1:-1:-1;;931:43:4;-1:-1:-1;2084:24:16::2;2099:8:::0;2084:14:::2;:24::i;:::-;2123:17:::0;;2119:77:::2;;2156:29;2162:7;:5;:7::i;:::-;2171:13:::0;2156:5:::2;:29::i;:::-;2210:15;2206:62;;;2241:16;:14;:16::i;:::-;1833:441:::0;;;;;;465:3954;;1473:198:5;-1:-1:-1;;;;;;1556:25:5;;;;;1548:66;;;;;-1:-1:-1;;;1548:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1624:33:5;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1624:40:5;1660:4;1624:40;;;1473:198::o;590:104:2:-;677:10;590:104;:::o;6578:110:3:-;6656:25;6667:4;6673:7;6656:10;:25::i;:::-;6578:110;;:::o;10013:88:9:-;10073:9;:21;;-1:-1:-1;;10073:21:9;;;;;;;;;;;;10013:88::o;1057:77:4:-;1121:6;;-1:-1:-1;;;;;1121:6:4;1057:77;:::o;7828:370:9:-;-1:-1:-1;;;;;7911:21:9;;7903:65;;;;;-1:-1:-1;;;7903:65:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;7979:49;8008:1;8012:7;8021:6;7979:20;:49::i;:::-;8054:24;8071:6;8054:12;;:16;;;;;;:24;;;;:::i;:::-;8039:12;:39;-1:-1:-1;;;;;8109:18:9;;:9;:18;;;;;;;;;;;;:30;;8132:6;;8109:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8088:18:9;;:9;:18;;;;;;;;;;;:51;;;;8154:37;;;;;;;8088:18;;:9;;8154:37;;;;;;;;;;7828:370;;:::o;4054:116:16:-;1271:12:4;:10;:12::i;:::-;1261:6;;-1:-1:-1;;;;;1261:6:4;;;:22;;;1253:67;;;;;-1:-1:-1;;;1253:67:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4107:16:16::1;:23:::0;;-1:-1:-1;;;;4107:23:16::1;-1:-1:-1::0;;;4107:23:16::1;::::0;;4146:17:::1;::::0;::::1;::::0;4107:23;;4146:17:::1;4054:116::o:0;7015:184:3:-;7088:12;;;;:6;:12;;;;;;;;:33;;7113:7;;7088:24;;;;;:33;;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:3;7160:7;-1:-1:-1;;;;;7142:40:3;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;4238:179:16:-;4366:44;4393:4;4399:2;4403:6;4366:26;;;;;:44;;:::i;:::-;4238:179;;;:::o;874:176:8:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;-1:-1:-1;874:176:8;;;;;:::o;4864:141:14:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:14;;4957:4;:41::i;832:312:11:-;940:44;967:4;973:2;977:6;940:26;;;;;:44;;:::i;:::-;-1:-1:-1;;;;;999:18:11;;995:143;;1093:4;;1064:25;1082:6;1064:13;:11;:13::i;:::-;:17;;;;;;:25;;;;:::i;:::-;:33;;1056:71;;;;;-1:-1:-1;;;1056:71:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:404:14;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:14;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:14;1986:12;;3255:98:9;3334:12;;3255:98;:::o;3776:127:14:-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;465:3954:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:3954:16;;;-1:-1:-1;465:3954:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "465:3954:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;939:140:5;;;;;;;;;;;;;;;;-1:-1:-1;939:140:5;-1:-1:-1;;;;;;939:140:5;;:::i;:::-;;;;;;;;;;;;;;;;;;2342:94:16;;;:::i;2212:81:9:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4248:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4248:166:9;;;;;;;;:::i;2525:137:18:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2525:137:18;;;;;;;;:::i;3255:98:9:-;;;:::i;:::-;;;;;;;;;;;;;;;;3613:186:16;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3613:186:16;;;;;;;;;;;;;;;;;:::i;4272:112:3:-;;;;;;;;;;;;;;;;-1:-1:-1;4272:112:3;;:::i;4634:223::-;;;;;;;;;;;;;;;;-1:-1:-1;4634:223:3;;;;;;-1:-1:-1;;;;;4634:223:3;;:::i;:::-;;3114:81:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4844:145:18;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4844:145:18;;;;;;;;:::i;581:73:11:-;;;:::i;5808:205:3:-;;;;;;;;;;;;;;;;-1:-1:-1;5808:205:3;;;;;;-1:-1:-1;;;;;5808:205:3;;:::i;5586:215:9:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5586:215:9;;;;;;;;:::i;3003:272:18:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3003:272:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3003:272:18;;-1:-1:-1;3003:272:18;;-1:-1:-1;;;;;3003:272:18:i;2771:100:16:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2771:100:16;;;;;;;;:::i;514:89:10:-;;;;;;;;;;;;;;;;-1:-1:-1;514:89:10;;:::i;2504:94:16:-;;;:::i;3411:117:9:-;;;;;;;;;;;;;;;;-1:-1:-1;3411:117:9;-1:-1:-1;;;;;3411:117:9;;:::i;1680:145:4:-;;;:::i;909:290:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;909:290:10;;;;;;;;:::i;3870:120:16:-;;;:::i;610:150:22:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;610:150:22;;;;;;;;:::i;1057:77:4:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1057:77:4;;;;;;;;;;;;;;3955:136:3;;;;;;;;;;;;;;;;-1:-1:-1;3955:136:3;;;;;;;:::i;2940:137::-;;;;;;;;;;;;;;;;-1:-1:-1;2940:137:3;;;;;;-1:-1:-1;;;;;2940:137:3;;:::i;2406:85:9:-;;;:::i;1717:49:3:-;;;:::i;6288:266:9:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6288:266:9;;;;;;;;:::i;3111:166:16:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3111:166:16;;;;;;;;:::i;4254:292:18:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4254:292:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4254:292:18;;-1:-1:-1;4254:292:18;;-1:-1:-1;;;;;4254:292:18:i;3245:125:3:-;;;;;;;;;;;;;;;;-1:-1:-1;3245:125:3;;:::i;5350:269:18:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5350:269:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5350:269:18;;-1:-1:-1;5350:269:18;;-1:-1:-1;;;;;5350:269:18:i;157:57:17:-;;;:::i;5091:226:3:-;;;;;;;;;;;;;;;;-1:-1:-1;5091:226:3;;;;;;-1:-1:-1;;;;;5091:226:3;;:::i;3652:165:18:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3652:165:18;;;;;;;;;;;;;;;;;:::i;3961:149:9:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3961:149:9;;;;;;;;;;:::i;4054:116:16:-;;;:::i;1974:240:4:-;;;;;;;;;;;;;;;;-1:-1:-1;1974:240:4;-1:-1:-1;;;;;1974:240:4;;:::i;220:61:17:-;;;:::i;939:140:5:-;-1:-1:-1;;;;;;1039:33:5;1016:4;1039:33;;;:20;:33;;;;;;;;;939:140::o;2342:94:16:-;2413:16;;-1:-1:-1;;;2413:16:16;;;;;2342:94::o;2212:81:9:-;2281:5;2274:12;;;;;;;;-1:-1:-1;;2274:12:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2249:13;;2274:12;;2281:5;;2274:12;;2281:5;2274:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:81;:::o;4248:166::-;4331:4;4347:39;4356:12;:10;:12::i;:::-;4370:7;4379:6;4347:8;:39::i;:::-;-1:-1:-1;4403:4:9;4248:166;;;;;:::o;2525:137:18:-;2602:4;2625:30;2641:2;2645:5;2625:30;;;;;;;;;;;;:15;:30::i;:::-;2618:37;2525:137;-1:-1:-1;;;2525:137:18:o;3255:98:9:-;3334:12;;3255:98;:::o;3613:186:16:-;1268:16;;3734:4;;3719;;-1:-1:-1;;;1268:16:16;;;;;:48;;;1288:28;260:21:17;1311:4:16;1288:7;:28::i;:::-;1247:169;;;;-1:-1:-1;;;1247:169:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3757:35:::1;3776:4;3782:2;3786:5;3757:18;:35::i;:::-;3750:42:::0;3613:186;-1:-1:-1;;;;;3613:186:16:o;4272:112:3:-;4329:7;4355:12;;;:6;:12;;;;;:22;;;;4272:112::o;4634:223::-;4725:12;;;;:6;:12;;;;;:22;;;4717:45;;4749:12;:10;:12::i;:::-;4717:7;:45::i;:::-;4709:105;;;;-1:-1:-1;;;4709:105:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;3114:81:9:-;3179:9;;;;3114:81;:::o;4844:145:18:-;4925:4;4948:34;4963:7;4972:5;4948:34;;;;;;;;;;;;:14;:34::i;581:73:11:-;643:4;;581:73;:::o;5808:205:3:-;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:3;:7;-1:-1:-1;;;;;5894:23:3;;5886:83;;;;-1:-1:-1;;;5886:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;5586:215:9:-;5674:4;5690:83;5699:12;:10;:12::i;:::-;5713:7;5722:50;5761:10;5722:11;:25;5734:12;:10;:12::i;:::-;-1:-1:-1;;;;;5722:25:9;;;;;;;;;;;;;;;;;-1:-1:-1;5722:25:9;;;:34;;;;;;;;;;;:38;:50::i;:::-;5690:8;:83::i;3003:272:18:-;3099:4;3115:19;3124:2;3128:5;3115:8;:19::i;:::-;;3152:52;3174:12;:10;:12::i;:::-;3188:2;3192:5;3199:4;3152:21;:52::i;:::-;3144:103;;;;-1:-1:-1;;;3144:103:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3264:4:18;3003:272;;;;;:::o;2771:100:16:-;1012:16;;-1:-1:-1;;;1012:16:16;;;;1011:17;1003:60;;;;;-1:-1:-1;;;1003:60:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:34:17::1;195:19;527:12;:10;:12::i;506:34::-;498:90;;;;-1:-1:-1::0;;;498:90:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2848:16:16::2;2854:2;2858:5;2848;:16::i;514:89:10:-:0;569:27;575:12;:10;:12::i;:::-;589:6;569:5;:27::i;:::-;514:89;:::o;2504:94:16:-;2575:16;;-1:-1:-1;;;2575:16:16;;;;;2504:94::o;3411:117:9:-;-1:-1:-1;;;;;3503:18:9;3477:7;3503:18;;;;;;;;;;;;3411:117::o;1680:145:4:-;1271:12;:10;:12::i;:::-;1261:6;;-1:-1:-1;;;;;1261:6:4;;;:22;;;1253:67;;;;;-1:-1:-1;;;1253:67:4;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1253:67:4;;;;;;;;;;;;;;;1770:6:::1;::::0;1749:40:::1;::::0;1786:1:::1;::::0;-1:-1:-1;;;;;1770:6:4::1;::::0;1749:40:::1;::::0;1786:1;;1749:40:::1;1799:6;:19:::0;;-1:-1:-1;;;;;;1799:19:4::1;::::0;;1680:145::o;909:290:10:-;985:26;1014:84;1051:6;1014:84;;;;;;;;;;;;;;;;;:32;1024:7;1033:12;:10;:12::i;:::-;1014:9;:32::i;:::-;:36;:84;:36;:84::i;:::-;985:113;;1109:51;1118:7;1127:12;:10;:12::i;:::-;1141:18;1109:8;:51::i;:::-;1170:22;1176:7;1185:6;1170:5;:22::i;:::-;909:290;;;:::o;3870:120:16:-;1012:16;;-1:-1:-1;;;1012:16:16;;;;1011:17;1003:60;;;;;-1:-1:-1;;;1003:60:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:12:4::1;:10;:12::i;:::-;1261:6;::::0;-1:-1:-1;;;;;1261:6:4;;::::1;:22:::0;::::1;;1253:67;;;::::0;;-1:-1:-1;;;1253:67:4;;::::1;;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;;;;;;;1253:67:4;;;;;;;;;;;;;::::1;;3930:16:16::2;:23:::0;;-1:-1:-1;;;;3930:23:16::2;-1:-1:-1::0;;;3930:23:16::2;::::0;;3969:14:::2;::::0;::::2;::::0;3930:23;;3969:14:::2;3870:120::o:0;610:150:22:-;1271:12:4;:10;:12::i;:::-;1261:6;;-1:-1:-1;;;;;1261:6:4;;;:22;;;1253:67;;;;;-1:-1:-1;;;1253:67:4;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1253:67:4;;;;;;;;;;;;;;;709:12:22::1;-1:-1:-1::0;;;;;702:29:22::1;;732:7;:5;:7::i;:::-;741:11;702:51;;;;;;;;;;;;;-1:-1:-1::0;;;;;702:51:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;610:150:22:o;1057:77:4:-;1121:6;;-1:-1:-1;;;;;1121:6:4;1057:77;:::o;3955:136:3:-;4028:7;4054:12;;;:6;:12;;;;;:30;;4078:5;4054:23;:30::i;2940:137::-;3009:4;3032:12;;;:6;:12;;;;;:38;;3062:7;3032:29;:38::i;2406:85:9:-;2477:7;2470:14;;;;;;;;-1:-1:-1;;2470:14:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2445:13;;2470:14;;2477:7;;2470:14;;2477:7;2470:14;;;;;;;;;;;;;;;;;;;;;;;;1717:49:3;1762:4;1717:49;:::o;6288:266:9:-;6381:4;6397:129;6406:12;:10;:12::i;:::-;6420:7;6429:96;6468:15;6429:96;;;;;;;;;;;;;;;;;:11;:25;6441:12;:10;:12::i;:::-;-1:-1:-1;;;;;6429:25:9;;;;;;;;;;;;;;;;;-1:-1:-1;6429:25:9;;;:34;;;;;;;;;;;:96;:38;:96::i;3111:166:16:-;3222:4;3199:12;:10;:12::i;:::-;1268:16;;-1:-1:-1;;;1268:16:16;;;;;:48;;;1288:28;260:21:17;1311:4:16;1288:7;:28::i;:::-;1247:169;;;;-1:-1:-1;;;1247:169:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3245:25:::1;3260:2;3264:5;3245:14;:25::i;:::-;3238:32:::0;3111:166;-1:-1:-1;;;;3111:166:16:o;4254:292:18:-;4368:4;4384:29;4397:4;4403:2;4407:5;4384:12;:29::i;:::-;;4431:44;4453:4;4459:2;4463:5;4470:4;4431:21;:44::i;:::-;4423:95;;;;-1:-1:-1;;;4423:95:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4535:4:18;4254:292;;;;;;:::o;3245:125:3:-;3308:7;3334:12;;;:6;:12;;;;;:29;;:27;:29::i;5350:269:18:-;5450:4;5466:23;5474:7;5483:5;5466:7;:23::i;:::-;;5507:42;5528:7;5537:5;5544:4;5507:20;:42::i;:::-;5499:92;;;;-1:-1:-1;;;5499:92:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;157:57:17;195:19;157:57;:::o;5091:226:3:-;5183:12;;;;:6;:12;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3652:165:18;3747:4;3770:40;3790:4;3796:2;3800:5;3770:40;;;;;;;;;;;;:19;:40::i;3961:149:9:-;-1:-1:-1;;;;;4076:18:9;;;4050:7;4076:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3961:149::o;4054:116:16:-;1271:12:4;:10;:12::i;:::-;1261:6;;-1:-1:-1;;;;;1261:6:4;;;:22;;;1253:67;;;;;-1:-1:-1;;;1253:67:4;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1253:67:4;;;;;;;;;;;;;;;4107:16:16::1;:23:::0;;-1:-1:-1;;;;4107:23:16::1;-1:-1:-1::0;;;4107:23:16::1;::::0;;4146:17:::1;::::0;::::1;::::0;4107:23;;4146:17:::1;4054:116::o:0;1974:240:4:-;1271:12;:10;:12::i;:::-;1261:6;;-1:-1:-1;;;;;1261:6:4;;;:22;;;1253:67;;;;;-1:-1:-1;;;1253:67:4;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1253:67:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;2062:22:4;::::1;2054:73;;;;-1:-1:-1::0;;;2054:73:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2163:6;::::0;2142:38:::1;::::0;-1:-1:-1;;;;;2142:38:4;;::::1;::::0;2163:6:::1;::::0;2142:38:::1;::::0;2163:6:::1;::::0;2142:38:::1;2190:6;:17:::0;;-1:-1:-1;;;;;;2190:17:4::1;-1:-1:-1::0;;;;;2190:17:4;;;::::1;::::0;;;::::1;::::0;;1974:240::o;220:61:17:-;260:21;220:61;:::o;874:176:8:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;4864:141:14;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:14;;4957:4;:41::i;832:312:11:-;940:44;967:4;973:2;977:6;940:26;:44::i;:::-;-1:-1:-1;;;;;999:18:11;;995:143;;1093:4;;1064:25;1082:6;1064:13;:11;:13::i;:::-;:17;;:25::i;:::-;:33;;1056:71;;;;;-1:-1:-1;;;1056:71:11;;;;;;;;;;;;;;;;;;;;;;;;;;;590:104:2;677:10;590:104;:::o;9350:340:9:-;-1:-1:-1;;;;;9451:19:9;;9443:68;;;;-1:-1:-1;;;9443:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9529:21:9;;9521:68;;;;-1:-1:-1;;;9521:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9600:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9651:32;;;;;;;;;;;;;;;;;9350:340;;;:::o;4874:317::-;4980:4;4996:36;5006:6;5014:9;5025:6;4996:9;:36::i;:::-;5042:121;5051:6;5059:12;:10;:12::i;:::-;5073:89;5111:6;5073:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5073:19:9;;;;;;:11;:19;;;;;;5093:12;:10;:12::i;:::-;-1:-1:-1;;;;;5073:33:9;;;;;;;;;;;;-1:-1:-1;5073:33:9;;;:89;:37;:89::i;7015:184:3:-;7088:12;;;;:6;:12;;;;;:33;;7113:7;7088:24;:33::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:3;7160:7;-1:-1:-1;;;;;7142:40:3;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;7205:188::-;7279:12;;;;:6;:12;;;;;:36;;7307:7;7279:27;:36::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:3;7354:7;-1:-1:-1;;;;;7336:40:3;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;6164:356:18:-;6273:4;6294:15;:2;-1:-1:-1;;;;;6294:13:18;;:15::i;:::-;6289:59;;-1:-1:-1;6332:5:18;6325:12;;6289:59;6357:13;6390:2;-1:-1:-1;;;;;6373:39:18;;6426:12;:10;:12::i;:::-;6440:4;6446:5;6453:4;6373:94;;;;;;;;;;;;;-1:-1:-1;;;;;6373:94:18;;;;;;-1:-1:-1;;;;;6373:94:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6373:94:18;-1:-1:-1;;;;;;6485:27:18;-1:-1:-1;;;6485:27:18;;-1:-1:-1;;6164:356:18;;;;;;:::o;7828:370:9:-;-1:-1:-1;;;;;7911:21:9;;7903:65;;;;;-1:-1:-1;;;7903:65:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;7979:49;8008:1;8012:7;8021:6;7979:20;:49::i;:::-;8054:12;;:24;;8071:6;8054:16;:24::i;:::-;8039:12;:39;-1:-1:-1;;;;;8109:18:9;;:9;:18;;;;;;;;;;;:30;;8132:6;8109:22;:30::i;:::-;-1:-1:-1;;;;;8088:18:9;;:9;:18;;;;;;;;;;;:51;;;;8154:37;;;;;;;8088:18;;:9;;8154:37;;;;;;;;;;7828:370;;:::o;8517:410::-;-1:-1:-1;;;;;8600:21:9;;8592:67;;;;-1:-1:-1;;;8592:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8670:49;8691:7;8708:1;8712:6;8670:20;:49::i;:::-;8751:68;8774:6;8751:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8751:18:9;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8730:18:9;;:9;:18;;;;;;;;;;:89;8844:12;;:24;;8861:6;8844:16;:24::i;:::-;8829:12;:39;8883:37;;;;;;;;8909:1;;-1:-1:-1;;;;;8883:37:9;;;;;;;;;;;;8517:410;;:::o;1746:187:8:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:8;;;1746:187::o;6085:147:14:-;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:14;;5504:9;:46::i;3731:172:9:-;3817:4;3833:42;3843:12;:10;:12::i;:::-;3857:9;3868:6;3833:9;:42::i;5638:115:14:-;5701:7;5727:19;5735:3;5727:7;:19::i;6969:349:18:-;7068:4;7089:20;:7;-1:-1:-1;;;;;7089:18:18;;:20::i;:::-;7084:64;;-1:-1:-1;7132:5:18;7125:12;;7084:64;7157:13;7189:7;-1:-1:-1;;;;;7173:43:18;;7230:12;:10;:12::i;:::-;7244:5;7251:4;7173:92;;;;;;;;;;;;;-1:-1:-1;;;;;7173:92:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7173:92:18;-1:-1:-1;;;;;;7283:27:18;-1:-1:-1;;;7283:27:18;;-1:-1:-1;;6969:349:18;;;;;:::o;1611:404:14:-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:14;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:14;1986:12;;7028:530:9;-1:-1:-1;;;;;7133:20:9;;7125:70;;;;-1:-1:-1;;;7125:70:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7213:23:9;;7205:71;;;;-1:-1:-1;;;7205:71:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7287:47;7308:6;7316:9;7327:6;7287:20;:47::i;:::-;7365:71;7387:6;7365:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7365:17:9;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7345:17:9;;;:9;:17;;;;;;;;;;;:91;;;;7469:20;;;;;;;:32;;7494:6;7469:24;:32::i;:::-;-1:-1:-1;;;;;7446:20:9;;;:9;:20;;;;;;;;;;;;:55;;;;7516:35;;;;;;;7446:20;;7516:35;;;;;;;;;;;;;7028:530;;;:::o;5173:147:14:-;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:14;;5269:7;:44::i;718:610:13:-;778:4;1239:20;;1084:66;1278:23;;;;;;:42;;-1:-1:-1;;1305:15:13;;;1270:51;-1:-1:-1;;718:610:13:o;4238:179:16:-;4366:44;4393:4;4399:2;4403:6;4366:26;:44::i;1321:134:8:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;4423:201:14:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:14;;;;-1:-1:-1;;;4509:73:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;2183:1512::-;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:14;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"erc-payable-token/contracts/token/ERC1363/ERC1363.sol\";\nimport \"eth-token-recover/contracts/TokenRecover.sol\";\nimport \"./access/Roles.sol\";\n\n/**\n * @title ERC20Base\n * @author Vittorio Minacori (https://github.com/vittominacori)\n * @dev Implementation of the ERC20Base\n */\ncontract ERC20Base is ERC20Capped, ERC20Burnable, ERC1363, Roles, TokenRecover {\n\n    // indicates if minting is finished\n    bool private _mintingFinished = false;\n\n    // indicates if transfer is enabled\n    bool private _transferEnabled = false;\n\n    /**\n     * @dev Emitted during finish minting\n     */\n    event MintFinished();\n\n    /**\n     * @dev Emitted during transfer enabling\n     */\n    event TransferEnabled();\n\n    /**\n     * @dev Tokens can be minted only before minting finished.\n     */\n    modifier canMint() {\n        require(!_mintingFinished, \"ERC20Base: minting is finished\");\n        _;\n    }\n\n    /**\n     * @dev Tokens can be moved only after if transfer enabled or if you are an approved operator.\n     */\n    modifier canTransfer(address from) {\n        require(\n            _transferEnabled || hasRole(OPERATOR_ROLE, from),\n            \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\"\n        );\n        _;\n    }\n\n    /**\n     * @param name Name of the token\n     * @param symbol A symbol to be used as ticker\n     * @param decimals Number of decimals. All the operations are done using the smallest and indivisible token unit\n     * @param cap Maximum number of tokens mintable\n     * @param initialSupply Initial token supply\n     * @param transferEnabled If transfer is enabled on token creation\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        uint256 cap,\n        uint256 initialSupply,\n        bool transferEnabled\n    )\n        ERC20Capped(cap)\n        ERC1363(name, symbol)\n    {\n        _setupDecimals(decimals);\n\n        if (initialSupply > 0) {\n            _mint(owner(), initialSupply);\n        }\n\n        if (transferEnabled) {\n            enableTransfer();\n        }\n    }\n\n    /**\n     * @return if minting is finished or not.\n     */\n    function mintingFinished() public view returns (bool) {\n        return _mintingFinished;\n    }\n\n    /**\n     * @return if transfer is enabled or not.\n     */\n    function transferEnabled() public view returns (bool) {\n        return _transferEnabled;\n    }\n\n    /**\n     * @dev Function to mint tokens.\n     * @param to The address that will receive the minted tokens\n     * @param value The amount of tokens to mint\n     */\n    function mint(address to, uint256 value) public canMint onlyMinter {\n        _mint(to, value);\n    }\n\n    /**\n     * @dev Transfer tokens to a specified address.\n     * @param to The address to transfer to\n     * @param value The amount to be transferred\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function transfer(address to, uint256 value) public virtual override(ERC20) canTransfer(_msgSender()) returns (bool) {\n        return super.transfer(to, value);\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another.\n     * @param from The address which you want to send tokens from\n     * @param to The address which you want to transfer to\n     * @param value the amount of tokens to be transferred\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual override(ERC20) canTransfer(from) returns (bool) {\n        return super.transferFrom(from, to, value);\n    }\n\n    /**\n     * @dev Function to stop minting new tokens.\n     */\n    function finishMinting() public canMint onlyOwner {\n        _mintingFinished = true;\n\n        emit MintFinished();\n    }\n\n    /**\n     * @dev Function to enable transfers.\n     */\n    function enableTransfer() public onlyOwner {\n        _transferEnabled = true;\n\n        emit TransferEnabled();\n    }\n\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Capped) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourcePath": "@vittominacori/erc20-token/contracts/ERC20Base.sol",
  "ast": {
    "absolutePath": "@vittominacori/erc20-token/contracts/ERC20Base.sol",
    "exportedSymbols": {
      "AccessControl": [
        654
      ],
      "Address": [
        2126
      ],
      "Context": [
        371
      ],
      "ERC1363": [
        3200
      ],
      "ERC165": [
        820
      ],
      "ERC165Checker": [
        992
      ],
      "ERC20": [
        1707
      ],
      "ERC20Base": [
        2851
      ],
      "ERC20Burnable": [
        1766
      ],
      "ERC20Capped": [
        1844
      ],
      "EnumerableSet": [
        2521
      ],
      "IERC1363": [
        3280
      ],
      "IERC1363Receiver": [
        3298
      ],
      "IERC1363Spender": [
        3314
      ],
      "IERC165": [
        1004
      ],
      "IERC20": [
        1922
      ],
      "Ownable": [
        763
      ],
      "Roles": [
        2915
      ],
      "SafeMath": [
        1200
      ],
      "TokenRecover": [
        3342
      ]
    },
    "id": 2852,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2613,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "id": 2614,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 1845,
        "src": "58:61:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 2615,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 1767,
        "src": "120:63:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "erc-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "file": "erc-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "id": 2616,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 3201,
        "src": "184:63:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "eth-token-recover/contracts/TokenRecover.sol",
        "file": "eth-token-recover/contracts/TokenRecover.sol",
        "id": 2617,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 3343,
        "src": "248:54:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@vittominacori/erc20-token/contracts/access/Roles.sol",
        "file": "./access/Roles.sol",
        "id": 2618,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 2916,
        "src": "303:28:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2620,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1844,
              "src": "487:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$1844",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 2621,
            "nodeType": "InheritanceSpecifier",
            "src": "487:11:16"
          },
          {
            "baseName": {
              "id": 2622,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1766,
              "src": "500:13:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$1766",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 2623,
            "nodeType": "InheritanceSpecifier",
            "src": "500:13:16"
          },
          {
            "baseName": {
              "id": 2624,
              "name": "ERC1363",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3200,
              "src": "515:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1363_$3200",
                "typeString": "contract ERC1363"
              }
            },
            "id": 2625,
            "nodeType": "InheritanceSpecifier",
            "src": "515:7:16"
          },
          {
            "baseName": {
              "id": 2626,
              "name": "Roles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2915,
              "src": "524:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Roles_$2915",
                "typeString": "contract Roles"
              }
            },
            "id": 2627,
            "nodeType": "InheritanceSpecifier",
            "src": "524:5:16"
          },
          {
            "baseName": {
              "id": 2628,
              "name": "TokenRecover",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3342,
              "src": "531:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenRecover_$3342",
                "typeString": "contract TokenRecover"
              }
            },
            "id": 2629,
            "nodeType": "InheritanceSpecifier",
            "src": "531:12:16"
          }
        ],
        "contractDependencies": [
          371,
          654,
          763,
          820,
          1004,
          1707,
          1766,
          1844,
          1922,
          2915,
          3200,
          3280,
          3342
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2619,
          "nodeType": "StructuredDocumentation",
          "src": "333:131:16",
          "text": " @title ERC20Base\n @author Vittorio Minacori (https://github.com/vittominacori)\n @dev Implementation of the ERC20Base"
        },
        "fullyImplemented": true,
        "id": 2851,
        "linearizedBaseContracts": [
          2851,
          3342,
          763,
          2915,
          654,
          3200,
          820,
          3280,
          1004,
          1766,
          1844,
          1707,
          1922,
          371
        ],
        "name": "ERC20Base",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2632,
            "mutability": "mutable",
            "name": "_mintingFinished",
            "nodeType": "VariableDeclaration",
            "scope": 2851,
            "src": "591:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2630,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "591:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2631,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "623:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2635,
            "mutability": "mutable",
            "name": "_transferEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 2851,
            "src": "675:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2633,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "675:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2634,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "707:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2636,
              "nodeType": "StructuredDocumentation",
              "src": "719:53:16",
              "text": " @dev Emitted during finish minting"
            },
            "id": 2638,
            "name": "MintFinished",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:16"
            },
            "src": "777:21:16"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2639,
              "nodeType": "StructuredDocumentation",
              "src": "804:56:16",
              "text": " @dev Emitted during transfer enabling"
            },
            "id": 2641,
            "name": "TransferEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:16"
            },
            "src": "865:24:16"
          },
          {
            "body": {
              "id": 2651,
              "nodeType": "Block",
              "src": "993:88:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1011:17:16",
                        "subExpression": {
                          "id": 2645,
                          "name": "_mintingFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2632,
                          "src": "1012:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230426173653a206d696e74696e672069732066696e6973686564",
                        "id": 2647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1030:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c6dcef62ac17c027b55c3549c0b638efb9e278812b840c5ee3a15f98489b60",
                          "typeString": "literal_string \"ERC20Base: minting is finished\""
                        },
                        "value": "ERC20Base: minting is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c6dcef62ac17c027b55c3549c0b638efb9e278812b840c5ee3a15f98489b60",
                          "typeString": "literal_string \"ERC20Base: minting is finished\""
                        }
                      ],
                      "id": 2644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1003:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2649,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:60:16"
                },
                {
                  "id": 2650,
                  "nodeType": "PlaceholderStatement",
                  "src": "1073:1:16"
                }
              ]
            },
            "documentation": {
              "id": 2642,
              "nodeType": "StructuredDocumentation",
              "src": "895:74:16",
              "text": " @dev Tokens can be minted only before minting finished."
            },
            "id": 2652,
            "name": "canMint",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:2:16"
            },
            "src": "974:107:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2668,
              "nodeType": "Block",
              "src": "1237:197:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2658,
                          "name": "_transferEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "1268:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2660,
                              "name": "OPERATOR_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2866,
                              "src": "1296:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2661,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2655,
                              "src": "1311:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2659,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "1288:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 2662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:28:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1268:48:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230426173653a207472616e73666572206973206e6f7420656e61626c6564206f722066726f6d20646f6573206e6f74206861766520746865204f50455241544f5220726f6c65",
                        "id": 2664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:76:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da1c42d1d02279a1dd86b17a6b552f3ac4ba3c316dff5077fa057fce761b8e5a",
                          "typeString": "literal_string \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\""
                        },
                        "value": "ERC20Base: transfer is not enabled or from does not have the OPERATOR role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da1c42d1d02279a1dd86b17a6b552f3ac4ba3c316dff5077fa057fce761b8e5a",
                          "typeString": "literal_string \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\""
                        }
                      ],
                      "id": 2657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1247:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:169:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:169:16"
                },
                {
                  "id": 2667,
                  "nodeType": "PlaceholderStatement",
                  "src": "1426:1:16"
                }
              ]
            },
            "documentation": {
              "id": 2653,
              "nodeType": "StructuredDocumentation",
              "src": "1087:110:16",
              "text": " @dev Tokens can be moved only after if transfer enabled or if you are an approved operator."
            },
            "id": 2669,
            "name": "canTransfer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2655,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2669,
                  "src": "1223:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1222:14:16"
            },
            "src": "1202:232:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2713,
              "nodeType": "Block",
              "src": "2074:200:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2693,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2676,
                        "src": "2099:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 2692,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "2084:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 2694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2084:24:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2695,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:24:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2696,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2680,
                      "src": "2123:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2139:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2123:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2706,
                  "nodeType": "IfStatement",
                  "src": "2119:77:16",
                  "trueBody": {
                    "id": 2705,
                    "nodeType": "Block",
                    "src": "2142:54:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2700,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 699,
                                "src": "2162:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2162:7:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2702,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2680,
                              "src": "2171:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2699,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1583,
                            "src": "2156:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2156:29:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2704,
                        "nodeType": "ExpressionStatement",
                        "src": "2156:29:16"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 2707,
                    "name": "transferEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2682,
                    "src": "2210:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2712,
                  "nodeType": "IfStatement",
                  "src": "2206:62:16",
                  "trueBody": {
                    "id": 2711,
                    "nodeType": "Block",
                    "src": "2227:41:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2708,
                            "name": "enableTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2828,
                            "src": "2241:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2241:16:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2710,
                        "nodeType": "ExpressionStatement",
                        "src": "2241:16:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2670,
              "nodeType": "StructuredDocumentation",
              "src": "1440:388:16",
              "text": " @param name Name of the token\n @param symbol A symbol to be used as ticker\n @param decimals Number of decimals. All the operations are done using the smallest and indivisible token unit\n @param cap Maximum number of tokens mintable\n @param initialSupply Initial token supply\n @param transferEnabled If transfer is enabled on token creation"
            },
            "id": 2714,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2685,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2678,
                    "src": "2035:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2686,
                "modifierName": {
                  "id": 2684,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1844,
                  "src": "2023:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1844_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2023:16:16"
              },
              {
                "arguments": [
                  {
                    "id": 2688,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2672,
                    "src": "2056:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2689,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2674,
                    "src": "2062:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2690,
                "modifierName": {
                  "id": 2687,
                  "name": "ERC1363",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3200,
                  "src": "2048:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1363_$3200_$",
                    "typeString": "type(contract ERC1363)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2048:21:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2672,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1854:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2671,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2674,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1882:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2673,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2676,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1912:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2678,
                  "mutability": "mutable",
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1936:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2680,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1957:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2682,
                  "mutability": "mutable",
                  "name": "transferEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1988:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2681,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1844:170:16"
            },
            "returnParameters": {
              "id": 2691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:0:16"
            },
            "scope": 2851,
            "src": "1833:441:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2722,
              "nodeType": "Block",
              "src": "2396:40:16",
              "statements": [
                {
                  "expression": {
                    "id": 2720,
                    "name": "_mintingFinished",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2632,
                    "src": "2413:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2719,
                  "id": 2721,
                  "nodeType": "Return",
                  "src": "2406:23:16"
                }
              ]
            },
            "documentation": {
              "id": 2715,
              "nodeType": "StructuredDocumentation",
              "src": "2280:57:16",
              "text": " @return if minting is finished or not."
            },
            "functionSelector": "05d2035b",
            "id": 2723,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintingFinished",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:2:16"
            },
            "returnParameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2723,
                  "src": "2390:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:6:16"
            },
            "scope": 2851,
            "src": "2342:94:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2731,
              "nodeType": "Block",
              "src": "2558:40:16",
              "statements": [
                {
                  "expression": {
                    "id": 2729,
                    "name": "_transferEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2635,
                    "src": "2575:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2728,
                  "id": 2730,
                  "nodeType": "Return",
                  "src": "2568:23:16"
                }
              ]
            },
            "documentation": {
              "id": 2724,
              "nodeType": "StructuredDocumentation",
              "src": "2442:57:16",
              "text": " @return if transfer is enabled or not."
            },
            "functionSelector": "4cd412d5",
            "id": 2732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:2:16"
            },
            "returnParameters": {
              "id": 2728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2727,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "2552:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2726,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:16"
            },
            "scope": 2851,
            "src": "2504:94:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2749,
              "nodeType": "Block",
              "src": "2838:33:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2745,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2735,
                        "src": "2854:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2746,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2737,
                        "src": "2858:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2744,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1583,
                      "src": "2848:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2748,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:16:16"
                }
              ]
            },
            "documentation": {
              "id": 2733,
              "nodeType": "StructuredDocumentation",
              "src": "2604:162:16",
              "text": " @dev Function to mint tokens.\n @param to The address that will receive the minted tokens\n @param value The amount of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "id": 2750,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2740,
                "modifierName": {
                  "id": 2739,
                  "name": "canMint",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2652,
                  "src": "2819:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2819:7:16"
              },
              {
                "id": 2742,
                "modifierName": {
                  "id": 2741,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2901,
                  "src": "2827:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2827:10:16"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2735,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "2785:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2785:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2737,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "2797:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2784:27:16"
            },
            "returnParameters": {
              "id": 2743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2838:0:16"
            },
            "scope": 2851,
            "src": "2771:100:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1328
            ],
            "body": {
              "id": 2772,
              "nodeType": "Block",
              "src": "3228:49:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2768,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2753,
                        "src": "3260:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2769,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2755,
                        "src": "3264:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2766,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3245:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$2851",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 2767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1328,
                      "src": "3245:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2765,
                  "id": 2771,
                  "nodeType": "Return",
                  "src": "3238:32:16"
                }
              ]
            },
            "documentation": {
              "id": 2751,
              "nodeType": "StructuredDocumentation",
              "src": "2877:229:16",
              "text": " @dev Transfer tokens to a specified address.\n @param to The address to transfer to\n @param value The amount to be transferred\n @return A boolean that indicates if the operation was successful."
            },
            "functionSelector": "a9059cbb",
            "id": 2773,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2760,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "3199:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3199:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2762,
                "modifierName": {
                  "id": 2759,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2669,
                  "src": "3187:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:25:16"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2758,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2757,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1707,
                  "src": "3180:5:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1707",
                    "typeString": "contract ERC20"
                  }
                }
              ],
              "src": "3171:15:16"
            },
            "parameters": {
              "id": 2756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2753,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "3129:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2755,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "3141:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3141:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3128:27:16"
            },
            "returnParameters": {
              "id": 2765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2764,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "3222:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2763,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3221:6:16"
            },
            "scope": 2851,
            "src": "3111:166:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1405
            ],
            "body": {
              "id": 2797,
              "nodeType": "Block",
              "src": "3740:59:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2792,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2776,
                        "src": "3776:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2793,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2778,
                        "src": "3782:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2794,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2780,
                        "src": "3786:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2790,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3757:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$2851",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 2791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1405,
                      "src": "3757:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 2795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2789,
                  "id": 2796,
                  "nodeType": "Return",
                  "src": "3750:42:16"
                }
              ]
            },
            "documentation": {
              "id": 2774,
              "nodeType": "StructuredDocumentation",
              "src": "3283:325:16",
              "text": " @dev Transfer tokens from one address to another.\n @param from The address which you want to send tokens from\n @param to The address which you want to transfer to\n @param value the amount of tokens to be transferred\n @return A boolean that indicates if the operation was successful."
            },
            "functionSelector": "23b872dd",
            "id": 2798,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2785,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2776,
                    "src": "3719:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2786,
                "modifierName": {
                  "id": 2784,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2669,
                  "src": "3707:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3707:17:16"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2783,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2782,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1707,
                  "src": "3700:5:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1707",
                    "typeString": "contract ERC20"
                  }
                }
              ],
              "src": "3691:15:16"
            },
            "parameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2798,
                  "src": "3635:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2778,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2798,
                  "src": "3649:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3649:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2780,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2798,
                  "src": "3661:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:41:16"
            },
            "returnParameters": {
              "id": 2789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2788,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2798,
                  "src": "3734:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2787,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3733:6:16"
            },
            "scope": 2851,
            "src": "3613:186:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2813,
              "nodeType": "Block",
              "src": "3920:70:16",
              "statements": [
                {
                  "expression": {
                    "id": 2808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2806,
                      "name": "_mintingFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2632,
                      "src": "3930:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3949:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3930:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2809,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:23:16"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2810,
                      "name": "MintFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2638,
                      "src": "3969:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:14:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2812,
                  "nodeType": "EmitStatement",
                  "src": "3964:19:16"
                }
              ]
            },
            "documentation": {
              "id": 2799,
              "nodeType": "StructuredDocumentation",
              "src": "3805:60:16",
              "text": " @dev Function to stop minting new tokens."
            },
            "functionSelector": "7d64bcb4",
            "id": 2814,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2802,
                "modifierName": {
                  "id": 2801,
                  "name": "canMint",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2652,
                  "src": "3902:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3902:7:16"
              },
              {
                "id": 2804,
                "modifierName": {
                  "id": 2803,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 712,
                  "src": "3910:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3910:9:16"
              }
            ],
            "name": "finishMinting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3892:2:16"
            },
            "returnParameters": {
              "id": 2805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3920:0:16"
            },
            "scope": 2851,
            "src": "3870:120:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2827,
              "nodeType": "Block",
              "src": "4097:73:16",
              "statements": [
                {
                  "expression": {
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2820,
                      "name": "_transferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2635,
                      "src": "4107:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4126:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4107:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2823,
                  "nodeType": "ExpressionStatement",
                  "src": "4107:23:16"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2824,
                      "name": "TransferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2641,
                      "src": "4146:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4146:17:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2826,
                  "nodeType": "EmitStatement",
                  "src": "4141:22:16"
                }
              ]
            },
            "documentation": {
              "id": 2815,
              "nodeType": "StructuredDocumentation",
              "src": "3996:53:16",
              "text": " @dev Function to enable transfers."
            },
            "functionSelector": "f1b50c1d",
            "id": 2828,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2818,
                "modifierName": {
                  "id": 2817,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 712,
                  "src": "4087:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4087:9:16"
              }
            ],
            "name": "enableTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4077:2:16"
            },
            "returnParameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4097:0:16"
            },
            "scope": 2851,
            "src": "4054:116:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1706,
              1843
            ],
            "body": {
              "id": 2849,
              "nodeType": "Block",
              "src": "4356:61:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2844,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2831,
                        "src": "4393:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2845,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "4399:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2846,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2835,
                        "src": "4403:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2841,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4366:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$2851",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 2843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1843,
                      "src": "4366:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2848,
                  "nodeType": "ExpressionStatement",
                  "src": "4366:44:16"
                }
              ]
            },
            "documentation": {
              "id": 2829,
              "nodeType": "StructuredDocumentation",
              "src": "4176:57:16",
              "text": " @dev See {ERC20-_beforeTokenTransfer}."
            },
            "id": 2850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2839,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2837,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1707,
                  "src": "4336:5:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1707",
                    "typeString": "contract ERC20"
                  }
                },
                {
                  "id": 2838,
                  "name": "ERC20Capped",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1844,
                  "src": "4343:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Capped_$1844",
                    "typeString": "contract ERC20Capped"
                  }
                }
              ],
              "src": "4327:28:16"
            },
            "parameters": {
              "id": 2836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2831,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "4268:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2833,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "4282:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2835,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "4294:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4267:42:16"
            },
            "returnParameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4356:0:16"
            },
            "scope": 2851,
            "src": "4238:179:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2852,
        "src": "465:3954:16"
      }
    ],
    "src": "33:4387:16"
  },
  "legacyAST": {
    "absolutePath": "@vittominacori/erc20-token/contracts/ERC20Base.sol",
    "exportedSymbols": {
      "AccessControl": [
        654
      ],
      "Address": [
        2126
      ],
      "Context": [
        371
      ],
      "ERC1363": [
        3200
      ],
      "ERC165": [
        820
      ],
      "ERC165Checker": [
        992
      ],
      "ERC20": [
        1707
      ],
      "ERC20Base": [
        2851
      ],
      "ERC20Burnable": [
        1766
      ],
      "ERC20Capped": [
        1844
      ],
      "EnumerableSet": [
        2521
      ],
      "IERC1363": [
        3280
      ],
      "IERC1363Receiver": [
        3298
      ],
      "IERC1363Spender": [
        3314
      ],
      "IERC165": [
        1004
      ],
      "IERC20": [
        1922
      ],
      "Ownable": [
        763
      ],
      "Roles": [
        2915
      ],
      "SafeMath": [
        1200
      ],
      "TokenRecover": [
        3342
      ]
    },
    "id": 2852,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2613,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "id": 2614,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 1845,
        "src": "58:61:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 2615,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 1767,
        "src": "120:63:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "erc-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "file": "erc-payable-token/contracts/token/ERC1363/ERC1363.sol",
        "id": 2616,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 3201,
        "src": "184:63:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "eth-token-recover/contracts/TokenRecover.sol",
        "file": "eth-token-recover/contracts/TokenRecover.sol",
        "id": 2617,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 3343,
        "src": "248:54:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@vittominacori/erc20-token/contracts/access/Roles.sol",
        "file": "./access/Roles.sol",
        "id": 2618,
        "nodeType": "ImportDirective",
        "scope": 2852,
        "sourceUnit": 2916,
        "src": "303:28:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2620,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1844,
              "src": "487:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$1844",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 2621,
            "nodeType": "InheritanceSpecifier",
            "src": "487:11:16"
          },
          {
            "baseName": {
              "id": 2622,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1766,
              "src": "500:13:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$1766",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 2623,
            "nodeType": "InheritanceSpecifier",
            "src": "500:13:16"
          },
          {
            "baseName": {
              "id": 2624,
              "name": "ERC1363",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3200,
              "src": "515:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1363_$3200",
                "typeString": "contract ERC1363"
              }
            },
            "id": 2625,
            "nodeType": "InheritanceSpecifier",
            "src": "515:7:16"
          },
          {
            "baseName": {
              "id": 2626,
              "name": "Roles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2915,
              "src": "524:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Roles_$2915",
                "typeString": "contract Roles"
              }
            },
            "id": 2627,
            "nodeType": "InheritanceSpecifier",
            "src": "524:5:16"
          },
          {
            "baseName": {
              "id": 2628,
              "name": "TokenRecover",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3342,
              "src": "531:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenRecover_$3342",
                "typeString": "contract TokenRecover"
              }
            },
            "id": 2629,
            "nodeType": "InheritanceSpecifier",
            "src": "531:12:16"
          }
        ],
        "contractDependencies": [
          371,
          654,
          763,
          820,
          1004,
          1707,
          1766,
          1844,
          1922,
          2915,
          3200,
          3280,
          3342
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2619,
          "nodeType": "StructuredDocumentation",
          "src": "333:131:16",
          "text": " @title ERC20Base\n @author Vittorio Minacori (https://github.com/vittominacori)\n @dev Implementation of the ERC20Base"
        },
        "fullyImplemented": true,
        "id": 2851,
        "linearizedBaseContracts": [
          2851,
          3342,
          763,
          2915,
          654,
          3200,
          820,
          3280,
          1004,
          1766,
          1844,
          1707,
          1922,
          371
        ],
        "name": "ERC20Base",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2632,
            "mutability": "mutable",
            "name": "_mintingFinished",
            "nodeType": "VariableDeclaration",
            "scope": 2851,
            "src": "591:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2630,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "591:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2631,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "623:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2635,
            "mutability": "mutable",
            "name": "_transferEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 2851,
            "src": "675:37:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2633,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "675:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2634,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "707:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2636,
              "nodeType": "StructuredDocumentation",
              "src": "719:53:16",
              "text": " @dev Emitted during finish minting"
            },
            "id": 2638,
            "name": "MintFinished",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:2:16"
            },
            "src": "777:21:16"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2639,
              "nodeType": "StructuredDocumentation",
              "src": "804:56:16",
              "text": " @dev Emitted during transfer enabling"
            },
            "id": 2641,
            "name": "TransferEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:16"
            },
            "src": "865:24:16"
          },
          {
            "body": {
              "id": 2651,
              "nodeType": "Block",
              "src": "993:88:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1011:17:16",
                        "subExpression": {
                          "id": 2645,
                          "name": "_mintingFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2632,
                          "src": "1012:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230426173653a206d696e74696e672069732066696e6973686564",
                        "id": 2647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1030:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c6dcef62ac17c027b55c3549c0b638efb9e278812b840c5ee3a15f98489b60",
                          "typeString": "literal_string \"ERC20Base: minting is finished\""
                        },
                        "value": "ERC20Base: minting is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c6dcef62ac17c027b55c3549c0b638efb9e278812b840c5ee3a15f98489b60",
                          "typeString": "literal_string \"ERC20Base: minting is finished\""
                        }
                      ],
                      "id": 2644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1003:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:60:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2649,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:60:16"
                },
                {
                  "id": 2650,
                  "nodeType": "PlaceholderStatement",
                  "src": "1073:1:16"
                }
              ]
            },
            "documentation": {
              "id": 2642,
              "nodeType": "StructuredDocumentation",
              "src": "895:74:16",
              "text": " @dev Tokens can be minted only before minting finished."
            },
            "id": 2652,
            "name": "canMint",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:2:16"
            },
            "src": "974:107:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2668,
              "nodeType": "Block",
              "src": "1237:197:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2658,
                          "name": "_transferEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "1268:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2660,
                              "name": "OPERATOR_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2866,
                              "src": "1296:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2661,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2655,
                              "src": "1311:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2659,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "1288:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 2662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:28:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1268:48:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230426173653a207472616e73666572206973206e6f7420656e61626c6564206f722066726f6d20646f6573206e6f74206861766520746865204f50455241544f5220726f6c65",
                        "id": 2664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:76:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da1c42d1d02279a1dd86b17a6b552f3ac4ba3c316dff5077fa057fce761b8e5a",
                          "typeString": "literal_string \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\""
                        },
                        "value": "ERC20Base: transfer is not enabled or from does not have the OPERATOR role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da1c42d1d02279a1dd86b17a6b552f3ac4ba3c316dff5077fa057fce761b8e5a",
                          "typeString": "literal_string \"ERC20Base: transfer is not enabled or from does not have the OPERATOR role\""
                        }
                      ],
                      "id": 2657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1247:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:169:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:169:16"
                },
                {
                  "id": 2667,
                  "nodeType": "PlaceholderStatement",
                  "src": "1426:1:16"
                }
              ]
            },
            "documentation": {
              "id": 2653,
              "nodeType": "StructuredDocumentation",
              "src": "1087:110:16",
              "text": " @dev Tokens can be moved only after if transfer enabled or if you are an approved operator."
            },
            "id": 2669,
            "name": "canTransfer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2655,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2669,
                  "src": "1223:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1222:14:16"
            },
            "src": "1202:232:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2713,
              "nodeType": "Block",
              "src": "2074:200:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2693,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2676,
                        "src": "2099:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 2692,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "2084:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 2694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2084:24:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2695,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:24:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2696,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2680,
                      "src": "2123:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2139:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2123:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2706,
                  "nodeType": "IfStatement",
                  "src": "2119:77:16",
                  "trueBody": {
                    "id": 2705,
                    "nodeType": "Block",
                    "src": "2142:54:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2700,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 699,
                                "src": "2162:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2162:7:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2702,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2680,
                              "src": "2171:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2699,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1583,
                            "src": "2156:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2156:29:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2704,
                        "nodeType": "ExpressionStatement",
                        "src": "2156:29:16"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 2707,
                    "name": "transferEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2682,
                    "src": "2210:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2712,
                  "nodeType": "IfStatement",
                  "src": "2206:62:16",
                  "trueBody": {
                    "id": 2711,
                    "nodeType": "Block",
                    "src": "2227:41:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2708,
                            "name": "enableTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2828,
                            "src": "2241:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2241:16:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2710,
                        "nodeType": "ExpressionStatement",
                        "src": "2241:16:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2670,
              "nodeType": "StructuredDocumentation",
              "src": "1440:388:16",
              "text": " @param name Name of the token\n @param symbol A symbol to be used as ticker\n @param decimals Number of decimals. All the operations are done using the smallest and indivisible token unit\n @param cap Maximum number of tokens mintable\n @param initialSupply Initial token supply\n @param transferEnabled If transfer is enabled on token creation"
            },
            "id": 2714,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2685,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2678,
                    "src": "2035:3:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2686,
                "modifierName": {
                  "id": 2684,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1844,
                  "src": "2023:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1844_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2023:16:16"
              },
              {
                "arguments": [
                  {
                    "id": 2688,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2672,
                    "src": "2056:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2689,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2674,
                    "src": "2062:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2690,
                "modifierName": {
                  "id": 2687,
                  "name": "ERC1363",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3200,
                  "src": "2048:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1363_$3200_$",
                    "typeString": "type(contract ERC1363)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2048:21:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2672,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1854:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2671,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2674,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1882:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2673,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2676,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1912:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2678,
                  "mutability": "mutable",
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1936:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2680,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1957:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2682,
                  "mutability": "mutable",
                  "name": "transferEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2714,
                  "src": "1988:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2681,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1844:170:16"
            },
            "returnParameters": {
              "id": 2691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:0:16"
            },
            "scope": 2851,
            "src": "1833:441:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2722,
              "nodeType": "Block",
              "src": "2396:40:16",
              "statements": [
                {
                  "expression": {
                    "id": 2720,
                    "name": "_mintingFinished",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2632,
                    "src": "2413:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2719,
                  "id": 2721,
                  "nodeType": "Return",
                  "src": "2406:23:16"
                }
              ]
            },
            "documentation": {
              "id": 2715,
              "nodeType": "StructuredDocumentation",
              "src": "2280:57:16",
              "text": " @return if minting is finished or not."
            },
            "functionSelector": "05d2035b",
            "id": 2723,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintingFinished",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:2:16"
            },
            "returnParameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2723,
                  "src": "2390:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:6:16"
            },
            "scope": 2851,
            "src": "2342:94:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2731,
              "nodeType": "Block",
              "src": "2558:40:16",
              "statements": [
                {
                  "expression": {
                    "id": 2729,
                    "name": "_transferEnabled",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2635,
                    "src": "2575:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2728,
                  "id": 2730,
                  "nodeType": "Return",
                  "src": "2568:23:16"
                }
              ]
            },
            "documentation": {
              "id": 2724,
              "nodeType": "StructuredDocumentation",
              "src": "2442:57:16",
              "text": " @return if transfer is enabled or not."
            },
            "functionSelector": "4cd412d5",
            "id": 2732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:2:16"
            },
            "returnParameters": {
              "id": 2728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2727,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2732,
                  "src": "2552:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2726,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:16"
            },
            "scope": 2851,
            "src": "2504:94:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2749,
              "nodeType": "Block",
              "src": "2838:33:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2745,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2735,
                        "src": "2854:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2746,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2737,
                        "src": "2858:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2744,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1583,
                      "src": "2848:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:16:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2748,
                  "nodeType": "ExpressionStatement",
                  "src": "2848:16:16"
                }
              ]
            },
            "documentation": {
              "id": 2733,
              "nodeType": "StructuredDocumentation",
              "src": "2604:162:16",
              "text": " @dev Function to mint tokens.\n @param to The address that will receive the minted tokens\n @param value The amount of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "id": 2750,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2740,
                "modifierName": {
                  "id": 2739,
                  "name": "canMint",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2652,
                  "src": "2819:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2819:7:16"
              },
              {
                "id": 2742,
                "modifierName": {
                  "id": 2741,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2901,
                  "src": "2827:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2827:10:16"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2735,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "2785:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2785:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2737,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2750,
                  "src": "2797:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2784:27:16"
            },
            "returnParameters": {
              "id": 2743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2838:0:16"
            },
            "scope": 2851,
            "src": "2771:100:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1328
            ],
            "body": {
              "id": 2772,
              "nodeType": "Block",
              "src": "3228:49:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2768,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2753,
                        "src": "3260:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2769,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2755,
                        "src": "3264:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2766,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3245:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$2851",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 2767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1328,
                      "src": "3245:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:25:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2765,
                  "id": 2771,
                  "nodeType": "Return",
                  "src": "3238:32:16"
                }
              ]
            },
            "documentation": {
              "id": 2751,
              "nodeType": "StructuredDocumentation",
              "src": "2877:229:16",
              "text": " @dev Transfer tokens to a specified address.\n @param to The address to transfer to\n @param value The amount to be transferred\n @return A boolean that indicates if the operation was successful."
            },
            "functionSelector": "a9059cbb",
            "id": 2773,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2760,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "3199:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3199:12:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 2762,
                "modifierName": {
                  "id": 2759,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2669,
                  "src": "3187:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3187:25:16"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2758,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2757,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1707,
                  "src": "3180:5:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1707",
                    "typeString": "contract ERC20"
                  }
                }
              ],
              "src": "3171:15:16"
            },
            "parameters": {
              "id": 2756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2753,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "3129:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2755,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "3141:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3141:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3128:27:16"
            },
            "returnParameters": {
              "id": 2765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2764,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2773,
                  "src": "3222:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2763,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3221:6:16"
            },
            "scope": 2851,
            "src": "3111:166:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1405
            ],
            "body": {
              "id": 2797,
              "nodeType": "Block",
              "src": "3740:59:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2792,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2776,
                        "src": "3776:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2793,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2778,
                        "src": "3782:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2794,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2780,
                        "src": "3786:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2790,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3757:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$2851",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 2791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1405,
                      "src": "3757:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 2795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2789,
                  "id": 2796,
                  "nodeType": "Return",
                  "src": "3750:42:16"
                }
              ]
            },
            "documentation": {
              "id": 2774,
              "nodeType": "StructuredDocumentation",
              "src": "3283:325:16",
              "text": " @dev Transfer tokens from one address to another.\n @param from The address which you want to send tokens from\n @param to The address which you want to transfer to\n @param value the amount of tokens to be transferred\n @return A boolean that indicates if the operation was successful."
            },
            "functionSelector": "23b872dd",
            "id": 2798,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2785,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2776,
                    "src": "3719:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2786,
                "modifierName": {
                  "id": 2784,
                  "name": "canTransfer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2669,
                  "src": "3707:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3707:17:16"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2783,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2782,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1707,
                  "src": "3700:5:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1707",
                    "typeString": "contract ERC20"
                  }
                }
              ],
              "src": "3691:15:16"
            },
            "parameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2776,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2798,
                  "src": "3635:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2778,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2798,
                  "src": "3649:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3649:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2780,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2798,
                  "src": "3661:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:41:16"
            },
            "returnParameters": {
              "id": 2789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2788,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2798,
                  "src": "3734:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2787,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3733:6:16"
            },
            "scope": 2851,
            "src": "3613:186:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2813,
              "nodeType": "Block",
              "src": "3920:70:16",
              "statements": [
                {
                  "expression": {
                    "id": 2808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2806,
                      "name": "_mintingFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2632,
                      "src": "3930:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3949:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3930:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2809,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:23:16"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2810,
                      "name": "MintFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2638,
                      "src": "3969:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:14:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2812,
                  "nodeType": "EmitStatement",
                  "src": "3964:19:16"
                }
              ]
            },
            "documentation": {
              "id": 2799,
              "nodeType": "StructuredDocumentation",
              "src": "3805:60:16",
              "text": " @dev Function to stop minting new tokens."
            },
            "functionSelector": "7d64bcb4",
            "id": 2814,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2802,
                "modifierName": {
                  "id": 2801,
                  "name": "canMint",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2652,
                  "src": "3902:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3902:7:16"
              },
              {
                "id": 2804,
                "modifierName": {
                  "id": 2803,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 712,
                  "src": "3910:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3910:9:16"
              }
            ],
            "name": "finishMinting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3892:2:16"
            },
            "returnParameters": {
              "id": 2805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3920:0:16"
            },
            "scope": 2851,
            "src": "3870:120:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2827,
              "nodeType": "Block",
              "src": "4097:73:16",
              "statements": [
                {
                  "expression": {
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2820,
                      "name": "_transferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2635,
                      "src": "4107:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4126:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4107:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2823,
                  "nodeType": "ExpressionStatement",
                  "src": "4107:23:16"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2824,
                      "name": "TransferEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2641,
                      "src": "4146:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4146:17:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2826,
                  "nodeType": "EmitStatement",
                  "src": "4141:22:16"
                }
              ]
            },
            "documentation": {
              "id": 2815,
              "nodeType": "StructuredDocumentation",
              "src": "3996:53:16",
              "text": " @dev Function to enable transfers."
            },
            "functionSelector": "f1b50c1d",
            "id": 2828,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2818,
                "modifierName": {
                  "id": 2817,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 712,
                  "src": "4087:9:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4087:9:16"
              }
            ],
            "name": "enableTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4077:2:16"
            },
            "returnParameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4097:0:16"
            },
            "scope": 2851,
            "src": "4054:116:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1706,
              1843
            ],
            "body": {
              "id": 2849,
              "nodeType": "Block",
              "src": "4356:61:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2844,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2831,
                        "src": "4393:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2845,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "4399:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2846,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2835,
                        "src": "4403:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2841,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4366:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Base_$2851",
                          "typeString": "contract super ERC20Base"
                        }
                      },
                      "id": 2843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1843,
                      "src": "4366:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4366:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2848,
                  "nodeType": "ExpressionStatement",
                  "src": "4366:44:16"
                }
              ]
            },
            "documentation": {
              "id": 2829,
              "nodeType": "StructuredDocumentation",
              "src": "4176:57:16",
              "text": " @dev See {ERC20-_beforeTokenTransfer}."
            },
            "id": 2850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2839,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2837,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1707,
                  "src": "4336:5:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1707",
                    "typeString": "contract ERC20"
                  }
                },
                {
                  "id": 2838,
                  "name": "ERC20Capped",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1844,
                  "src": "4343:11:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Capped_$1844",
                    "typeString": "contract ERC20Capped"
                  }
                }
              ],
              "src": "4327:28:16"
            },
            "parameters": {
              "id": 2836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2831,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "4268:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2833,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "4282:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2835,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2850,
                  "src": "4294:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4294:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4267:42:16"
            },
            "returnParameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4356:0:16"
            },
            "scope": 2851,
            "src": "4238:179:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2852,
        "src": "465:3954:16"
      }
    ],
    "src": "33:4387:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.2+commit.51b20bc0.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-08T15:15:47.379Z",
  "devdoc": {
    "author": "Vittorio Minacori (https://github.com/vittominacori)",
    "details": "Implementation of the ERC20Base",
    "events": {
      "MintFinished()": {
        "details": "Emitted during finish minting"
      },
      "TransferEnabled()": {
        "details": "Emitted during transfer enabling"
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "approveAndCall(address,uint256)": {
        "details": "Approve spender to transfer tokens and then execute a callback on recipient.",
        "params": {
          "spender": "The address allowed to transfer to",
          "value": "The amount allowed to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "Approve spender to transfer tokens and then execute a callback on recipient.",
        "params": {
          "data": "Additional data with no specified format.",
          "spender": "The address allowed to transfer to.",
          "value": "The amount allowed to be transferred."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "constructor": {
        "params": {
          "cap": "Maximum number of tokens mintable",
          "decimals": "Number of decimals. All the operations are done using the smallest and indivisible token unit",
          "initialSupply": "Initial token supply",
          "name": "Name of the token",
          "symbol": "A symbol to be used as ticker",
          "transferEnabled": "If transfer is enabled on token creation"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "enableTransfer()": {
        "details": "Function to enable transfers."
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens",
          "value": "The amount of tokens to mint"
        }
      },
      "mintingFinished()": {
        "returns": {
          "_0": "if minting is finished or not."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverERC20(address,uint256)": {
        "details": "Remember that only owner can call so be careful when use on contracts generated from other contracts.",
        "params": {
          "tokenAddress": "The token contract address",
          "tokenAmount": "Number of tokens to be sent"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Transfer tokens to a specified address.",
        "params": {
          "to": "The address to transfer to",
          "value": "The amount to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferAndCall(address,uint256)": {
        "details": "Transfer tokens to a specified address and then execute a callback on recipient.",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferAndCall(address,uint256,bytes)": {
        "details": "Transfer tokens to a specified address and then execute a callback on recipient.",
        "params": {
          "data": "Additional data with no specified format",
          "to": "The address to transfer to",
          "value": "The amount to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferEnabled()": {
        "returns": {
          "_0": "if transfer is enabled or not."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another.",
        "params": {
          "from": "The address which you want to send tokens from",
          "to": "The address which you want to transfer to",
          "value": "the amount of tokens to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferFromAndCall(address,address,uint256)": {
        "details": "Transfer tokens from one address to another and then execute a callback on recipient.",
        "params": {
          "from": "The address which you want to send tokens from",
          "to": "The address which you want to transfer to",
          "value": "The amount of tokens to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferFromAndCall(address,address,uint256,bytes)": {
        "details": "Transfer tokens from one address to another and then execute a callback on recipient.",
        "params": {
          "data": "Additional data with no specified format",
          "from": "The address which you want to send tokens from",
          "to": "The address which you want to transfer to",
          "value": "The amount of tokens to be transferred"
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "ERC20Base",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}